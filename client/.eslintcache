[{"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostModal/PostModal.jsx":"1","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/LandingPage/LandingPage.jsx":"2","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/App.jsx":"3","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/CropModal/CropModal.jsx":"4","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostNewFormModal/PostNewFormModal.jsx":"5","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Nav/Nav.jsx":"6","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/MypageModal/MypageModal.jsx":"7","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/MainPage/MainPage.jsx":"8"},{"size":16558,"mtime":1608170499005,"results":"9","hashOfConfig":"10"},{"size":2751,"mtime":1608123232636,"results":"11","hashOfConfig":"10"},{"size":5531,"mtime":1608170426396,"results":"12","hashOfConfig":"10"},{"size":4593,"mtime":1608170394267,"results":"13","hashOfConfig":"10"},{"size":8310,"mtime":1608168758926,"results":"14","hashOfConfig":"10"},{"size":2060,"mtime":1608169851507,"results":"15","hashOfConfig":"10"},{"size":9228,"mtime":1607903499054,"results":"16","hashOfConfig":"10"},{"size":4991,"mtime":1608170410989,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19cocba",{"filePath":"20","messages":"21","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostModal/PostModal.jsx",["35","36","37","38","39","40","41","42","43","44","45","46","47","48","49"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/LandingPage/LandingPage.jsx",["50","51","52","53","54","55"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/App.jsx",["56","57","58"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/CropModal/CropModal.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostNewFormModal/PostNewFormModal.jsx",["59","60"],"import { createRef, React, useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './PostNewFormModal.module.css';\nimport close from '../../images/close.png';\nimport PostCropModal from '../PostCropModal/PostCropModal';\n// import FAKEIMG from '../../thumbnails/post_a.png';\n\nconst PostNewFormModal = ({\n  setProfileForDeleteAndAdd,\n  setUserProfile,\n  postsKind,\n  setPosts,\n  isModalOn,\n  handleClose,\n}) => {\n  const history = useHistory();\n  const imgInput1 = createRef();\n  const imgInput2 = createRef();\n  const imgInput3 = createRef();\n  const textAreaRef = useRef(null);\n  const [isCropModalOn, setIsCropModalOn] = useState(false);\n  const [inputNum, setInputNum] = useState(null);\n  const [checked, setChecked] = useState(false);\n  const [imgChecked, setImgChecked] = useState(false);\n\n  const handleCropModal = () => {\n    setIsCropModalOn(!isCropModalOn);\n  };\n  const [imgSrc, setImgSrc] = useState(null);\n\n  const [imgSrcs, setImgSrcs] = useState({ 1: '+', 2: '+', 3: '+' });\n\n  const setImgSrcsFunc = (inputNumber, urlSrc) => {\n    if (inputNumber === 1) {\n      setImgSrcs({ ...imgSrcs, 1: urlSrc });\n    } else if (inputNumber === 2) {\n      setImgSrcs({ ...imgSrcs, 2: urlSrc });\n    } else if (inputNumber === 3) {\n      setImgSrcs({ ...imgSrcs, 3: urlSrc });\n    }\n  };\n\n  const imgOnChange = (e) => {\n    setImgChecked(false);\n    try {\n      const urlSrc = URL.createObjectURL(e.target.files[0]);\n      if (e.target.name === 'imgInput1') {\n        setInputNum(1);\n        setImgSrc(urlSrc);\n        handleCropModal();\n      } else if (e.target.name === 'imgInput2') {\n        setInputNum(2);\n        setImgSrc(urlSrc);\n        handleCropModal();\n      } else if (e.target.name === 'imgInput3') {\n        setInputNum(3);\n        setImgSrc(urlSrc);\n        handleCropModal();\n      }\n    } catch (err) {\n      alert('we only accept image files');\n    }\n  };\n\n  const resetAndCloseModal = () => {\n    setImgSrcs({ 1: '+', 2: '+', 3: '+' });\n    setChecked(false);\n    setImgChecked(false);\n    textAreaRef.current.value = null;\n    handleClose();\n  };\n\n  const sendNewPost = async () => {\n    if (textAreaRef.current.value.trim().length === 0) {\n      setChecked(true);\n    } else {\n      // 이미지가 1개 미만이면 즉, 0개 업로딩이면 못보내게 하기\n      const formData = new FormData();\n      const dataArr = [];\n      for (const el of Object.values(imgSrcs)) {\n        if (el !== '+') {\n          const encodeData = el.replace('data:image/png;base64,', '');\n          const decodImg = atob(encodeData);\n          const array = [];\n          for (let i = 0; i < decodImg.length; i += 1) {\n            array.push(decodImg.charCodeAt(i));\n          }\n          const file = new Blob([new Uint8Array(array)], { type: 'image/png' });\n          dataArr.push(file);\n        }\n      }\n      // 현재 dataArr 에 이미지가 있음 (Blob 타입의)\n      let image1;\n      if (dataArr[0]) {\n        // eslint-disable-next-line prefer-destructuring\n        image1 = dataArr[0];\n      } else {\n        setImgChecked(true);\n        return null;\n      }\n      const image2 = dataArr[1] ? dataArr[1] : null;\n      const image3 = dataArr[2] ? dataArr[2] : null;\n\n      const fileName = 'canvas_img_'.concat(\n        new Date().getMilliseconds(),\n        '.png',\n      );\n\n      if (image1) formData.append('image1', image1, fileName);\n      if (image2) formData.append('image2', image2, fileName);\n      if (image3) formData.append('image3', image3, fileName);\n      formData.append('text', textAreaRef.current.value);\n      try {\n        const response = await axios(\n          {\n            method: 'post',\n            url: 'https://server.codestates-project.tk/post',\n            data: formData,\n            headers: {\n              'Content-Type': `multipart/form-data`,\n            },\n          },\n          {\n            withCredentials: true,\n          },\n        );\n        setUserProfile((prev) => {\n          return { ...prev, postCount: prev.postCount + 1 };\n        });\n        if (postsKind === 'latest' || postsKind === 'user') {\n          setPosts((prev) => {\n            const copyArr = prev.postData.slice();\n            copyArr.unshift(response.data);\n            return { ...prev, postData: copyArr };\n          });\n          setProfileForDeleteAndAdd((prev) => {\n            return { ...prev, postCount: prev.postCount + 1 };\n          });\n        }\n        resetAndCloseModal();\n      } catch (err) {\n        if (err.response) {\n          if (err.response.status === 401) {\n            history.push('/');\n          }\n        } else {\n          alert('sorry, server got an error. please try again');\n        }\n      }\n    }\n  };\n\n  return (\n    <>\n      <PostCropModal\n        setImgSrcs={setImgSrcsFunc}\n        inputNum={inputNum}\n        setImgSrc={setImgSrc}\n        imgSrc={imgSrc}\n        isModalOn={isCropModalOn}\n        handleClose={handleCropModal}\n      />\n      <div className={`${styles.modal} ${isModalOn && styles.isOn}`}>\n        <div className={styles.box}>\n          <img\n            className={styles.close}\n            src={close}\n            alt=\"close\"\n            onClick={resetAndCloseModal}\n          />\n          <div className={styles.postNewFormModal}>\n            <div className={styles.imgInputPart}>\n              <input\n                className={styles.imgInput}\n                type=\"file\"\n                accept=\"image/gif, image/jpeg, image/png\"\n                name=\"imgInput1\"\n                id=\"imgInput1\"\n                ref={imgInput1}\n                onChange={imgOnChange}\n              />\n              <input\n                className={styles.imgInput}\n                type=\"file\"\n                accept=\"image/gif, image/jpeg, image/png\"\n                name=\"imgInput2\"\n                id=\"imgInput2\"\n                ref={imgInput2}\n                onChange={imgOnChange}\n              />\n              <input\n                className={styles.imgInput}\n                type=\"file\"\n                accept=\"image/gif, image/jpeg, image/png\"\n                name=\"imgInput3\"\n                id=\"imgInput3\"\n                ref={imgInput3}\n                onChange={imgOnChange}\n              />\n              <label className={styles.labels} htmlFor=\"imgInput1\">\n                {imgSrcs[1] === '+' ? (\n                  '+'\n                ) : (\n                  <img\n                    className={styles.uploadedImg}\n                    src={imgSrcs[1]}\n                    alt=\"upload img\"\n                  />\n                )}\n              </label>\n              <label className={styles.labels} htmlFor=\"imgInput2\">\n                {imgSrcs[2] === '+' ? (\n                  '+'\n                ) : (\n                  <img\n                    className={styles.uploadedImg}\n                    src={imgSrcs[2]}\n                    alt=\"upload img\"\n                  />\n                )}\n              </label>\n              <label className={styles.labels} htmlFor=\"imgInput3\">\n                {imgSrcs[3] === '+' ? (\n                  '+'\n                ) : (\n                  <img\n                    className={styles.uploadedImg}\n                    src={imgSrcs[3]}\n                    alt=\"upload img\"\n                  />\n                )}\n              </label>\n            </div>\n            {imgChecked && (\n              <div className={styles.imgCheck}>\n                하나 이상의 이미지를 업로드 해주세요\n              </div>\n            )}\n            <div className={styles.textInputPart}>\n              <textarea\n                onKeyDown={() => {\n                  setChecked(false);\n                }}\n                ref={textAreaRef}\n                placeholder=\"내용을 입력해주세요\"\n                spellCheck={false}\n                className={`${styles.textInput} ${checked && styles.isOn}`}\n              />\n            </div>\n            <div className={styles.btnInputPart}>\n              <button\n                className={styles.barkBtn}\n                type=\"button\"\n                onClick={sendNewPost}\n              >\n                Bark\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PostNewFormModal;\n","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Nav/Nav.jsx",["61"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/MypageModal/MypageModal.jsx",["62","63","64","65","66"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/MainPage/MainPage.jsx",["67","68","69","70"],{"ruleId":"71","severity":1,"message":"72","line":86,"column":9,"nodeType":"73","messageId":"74","endLine":86,"endColumn":20},{"ruleId":"75","severity":1,"message":"76","line":157,"column":11,"nodeType":"77","messageId":"74","endLine":157,"endColumn":38},{"ruleId":"71","severity":1,"message":"72","line":159,"column":11,"nodeType":"73","messageId":"74","endLine":159,"endColumn":22},{"ruleId":"71","severity":1,"message":"72","line":193,"column":11,"nodeType":"73","messageId":"74","endLine":193,"endColumn":22},{"ruleId":"71","severity":1,"message":"72","line":216,"column":11,"nodeType":"73","messageId":"74","endLine":216,"endColumn":22},{"ruleId":"71","severity":1,"message":"72","line":242,"column":9,"nodeType":"73","messageId":"74","endLine":242,"endColumn":20},{"ruleId":"71","severity":1,"message":"72","line":248,"column":5,"nodeType":"73","messageId":"74","endLine":248,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":249,"column":5,"nodeType":"73","messageId":"74","endLine":249,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":250,"column":5,"nodeType":"73","messageId":"74","endLine":250,"endColumn":16},{"ruleId":"78","severity":1,"message":"79","line":262,"column":13,"nodeType":"80","messageId":"81","endLine":262,"endColumn":22},{"ruleId":"71","severity":1,"message":"72","line":263,"column":9,"nodeType":"73","messageId":"74","endLine":263,"endColumn":20},{"ruleId":"71","severity":1,"message":"72","line":265,"column":9,"nodeType":"73","messageId":"74","endLine":265,"endColumn":20},{"ruleId":"78","severity":1,"message":"79","line":267,"column":14,"nodeType":"80","messageId":"81","endLine":267,"endColumn":23},{"ruleId":"71","severity":1,"message":"72","line":268,"column":9,"nodeType":"73","messageId":"74","endLine":268,"endColumn":20},{"ruleId":"82","severity":1,"message":"83","line":297,"column":6,"nodeType":"84","endLine":297,"endColumn":8,"suggestions":"85"},{"ruleId":"78","severity":1,"message":"79","line":29,"column":15,"nodeType":"80","messageId":"81","endLine":29,"endColumn":24},{"ruleId":"71","severity":1,"message":"72","line":30,"column":11,"nodeType":"73","messageId":"74","endLine":30,"endColumn":22},{"ruleId":"78","severity":1,"message":"79","line":33,"column":16,"nodeType":"80","messageId":"81","endLine":33,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":34,"column":11,"nodeType":"73","messageId":"74","endLine":34,"endColumn":22},{"ruleId":"71","severity":1,"message":"72","line":46,"column":7,"nodeType":"73","messageId":"74","endLine":46,"endColumn":18},{"ruleId":"82","severity":1,"message":"86","line":52,"column":6,"nodeType":"84","endLine":52,"endColumn":8,"suggestions":"87"},{"ruleId":"71","severity":1,"message":"72","line":93,"column":9,"nodeType":"73","messageId":"74","endLine":93,"endColumn":20},{"ruleId":"71","severity":1,"message":"72","line":129,"column":9,"nodeType":"73","messageId":"74","endLine":129,"endColumn":20},{"ruleId":"71","severity":1,"message":"72","line":148,"column":9,"nodeType":"73","messageId":"74","endLine":148,"endColumn":20},{"ruleId":"75","severity":1,"message":"76","line":62,"column":7,"nodeType":"77","messageId":"74","endLine":62,"endColumn":42},{"ruleId":"75","severity":1,"message":"76","line":148,"column":11,"nodeType":"77","messageId":"74","endLine":148,"endColumn":64},{"ruleId":"71","severity":1,"message":"72","line":41,"column":9,"nodeType":"73","messageId":"74","endLine":41,"endColumn":20},{"ruleId":"71","severity":1,"message":"72","line":99,"column":9,"nodeType":"73","messageId":"74","endLine":99,"endColumn":20},{"ruleId":"75","severity":1,"message":"76","line":101,"column":11,"nodeType":"77","messageId":"74","endLine":101,"endColumn":65},{"ruleId":"71","severity":1,"message":"72","line":106,"column":11,"nodeType":"73","messageId":"74","endLine":106,"endColumn":22},{"ruleId":"75","severity":1,"message":"76","line":134,"column":11,"nodeType":"77","messageId":"74","endLine":134,"endColumn":65},{"ruleId":"82","severity":1,"message":"88","line":162,"column":6,"nodeType":"84","endLine":162,"endColumn":17,"suggestions":"89"},{"ruleId":"82","severity":1,"message":"90","line":37,"column":6,"nodeType":"84","endLine":37,"endColumn":8,"suggestions":"91"},{"ruleId":"71","severity":1,"message":"72","line":77,"column":11,"nodeType":"73","messageId":"74","endLine":77,"endColumn":22},{"ruleId":"71","severity":1,"message":"72","line":91,"column":5,"nodeType":"73","messageId":"74","endLine":91,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":93,"column":5,"nodeType":"73","messageId":"74","endLine":93,"endColumn":16},"no-console","Unexpected console statement.","MemberExpression","unexpected","no-alert","Unexpected alert.","CallExpression","func-names","Unexpected unnamed function.","FunctionExpression","unnamed","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDateType'. Either include it or remove the dependency array.","ArrayExpression",["92"],"React Hook useEffect has a missing dependency: 'checkToken'. Either include it or remove the dependency array.",["93"],"React Hook useEffect has missing dependencies: 'nowBreed' and 'nowPetName'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPetname' needs the current value of 'nowPetName'.",["94"],"React Hook useEffect has a missing dependency: 'firstOptionFunc'. Either include it or remove the dependency array.",["95"],{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [getDateType]",{"range":"104","text":"105"},"Update the dependencies array to be: [checkToken]",{"range":"106","text":"107"},"Update the dependencies array to be: [isModalOn, nowBreed, nowPetName]",{"range":"108","text":"109"},"Update the dependencies array to be: [firstOptionFunc]",{"range":"110","text":"111"},[8310,8312],"[getDateType]",[1748,1750],"[checkToken]",[4946,4957],"[isModalOn, nowBreed, nowPetName]",[915,917],"[firstOptionFunc]"]
