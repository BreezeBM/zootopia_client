[{"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/App.jsx":"1","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Nav/Nav.jsx":"2","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/index.js":"3","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/Chatpage/ChatPage.jsx":"4","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/LandingPage/LandingPage.jsx":"5","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/MainPage/MainPage.jsx":"6","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Posts/Posts.jsx":"7","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Post/Post.jsx":"8","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Modal/Modal.jsx":"9","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostModal/PostModal.jsx":"10","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/ImageSlide/ImageSlide.jsx":"11","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comments/Comments.jsx":"12","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/MypageModal/MypageModal.jsx":"13","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comment/Comment.jsx":"14","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComments/SubComments.jsx":"15","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComment/SubComment.jsx":"16","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/DeleteModal/DeleteModal.jsx":"17","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostNewFormModal/PostNewFormModal.jsx":"18","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/CropModal/CropModal.jsx":"19","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SimpleModal/SimpleModal.jsx":"20","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/ChatUser/ChatUser.jsx":"21","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/MyChat/MyChat.jsx":"22","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostCropModal/PostCropModal.jsx":"23"},{"size":600,"mtime":1606809858391,"results":"24","hashOfConfig":"25"},{"size":829,"mtime":1606809858408,"results":"26","hashOfConfig":"25"},{"size":309,"mtime":1606809858434,"results":"27","hashOfConfig":"28"},{"size":3154,"mtime":1606815076349,"results":"29","hashOfConfig":"28"},{"size":928,"mtime":1606815076351,"results":"30","hashOfConfig":"28"},{"size":2465,"mtime":1606916140577,"results":"31","hashOfConfig":"32"},{"size":1228,"mtime":1606916185225,"results":"33","hashOfConfig":"32"},{"size":322,"mtime":1606809858410,"results":"34","hashOfConfig":"32"},{"size":573,"mtime":1606817202927,"results":"35","hashOfConfig":"28"},{"size":2927,"mtime":1606809858411,"results":"36","hashOfConfig":"32"},{"size":329,"mtime":1606809858400,"results":"37","hashOfConfig":"28"},{"size":377,"mtime":1606809858394,"results":"38","hashOfConfig":"28"},{"size":8107,"mtime":1606908953038,"results":"39","hashOfConfig":"32"},{"size":616,"mtime":1606809858392,"results":"40","hashOfConfig":"28"},{"size":296,"mtime":1606809858420,"results":"41","hashOfConfig":"25"},{"size":491,"mtime":1606809858419,"results":"42","hashOfConfig":"28"},{"size":2288,"mtime":1606876971766,"results":"43","hashOfConfig":"28"},{"size":7291,"mtime":1606908093380,"results":"44","hashOfConfig":"32"},{"size":4266,"mtime":1606893058021,"results":"45","hashOfConfig":"32"},{"size":553,"mtime":1606809858418,"results":"46","hashOfConfig":"25"},{"size":562,"mtime":1606815076316,"results":"47","hashOfConfig":"28"},{"size":401,"mtime":1606815076323,"results":"48","hashOfConfig":"28"},{"size":3570,"mtime":1606905749699,"results":"49","hashOfConfig":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o1tv8k",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1etddb",{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},"xfvz0d",{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/App.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Nav/Nav.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/index.js",[],["101","102","103","104"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/Chatpage/ChatPage.jsx",["105","106"],"import React from 'react';\nimport styles from './ChatPage.module.css';\nimport iguanaImg from '../../images/iguana.jpeg';\nimport ChatUser from '../../components/ChatUser/ChatUser';\nimport MyChat from '../../components/MyChat/MyChat';\n\nconst username = '닉네임은팔글자요';\nconst breedname = '글자수는열다섯으로기준을잡겠다';\nconst messageContent =\n  '본사는 소규모창업아이템으로 성공한 사례와 실패 사례에관한 경험을 바탕으로 외식업 창업 성공에 관한 전문지식을 갖춘 창업 전문가들이 상권분석, 매장계약, 오픈 전까지의 모든 과정을 컨설팅하여 진행 중”이라며 “한식도시락배달 창업 또는 샵인샵배달창업을 고려하고 있는 예비 가맹점주들은 전문 상담을 통해 문의 해보길 바란다”고 전했다.';\n\nconst ChatPage = () => {\n  const myFunction = function () {\n    alert('test');\n  };\n  return (\n    <div className={styles.main}>\n      <div className={styles.main}> </div>\n      <div className={styles.flexBox}>\n        <div className={styles.listBox}>\n          <div className={styles.profile}>\n            <img className={styles.image} src={iguanaImg} alt=\"profile\" />\n            <div className={styles.name}>{username}</div>\n            <div className={styles.breed}>{breedname}</div>\n          </div>\n          <div className={styles.userlist}>\n            <ChatUser />\n            <ChatUser />\n            <ChatUser />\n            <ChatUser />\n            <ChatUser />\n            <ChatUser />\n            <ChatUser />\n            <ChatUser />\n            <ChatUser />\n            <ChatUser />\n          </div>\n        </div>\n        <div className={styles.chatBox}>\n          <div className={styles.chatonBoard}>\n            <div className={styles.block}> </div>\n            <div className={styles.talkBox}>\n              <img\n                className={styles.chatProfile}\n                src={iguanaImg}\n                alt=\"chatprofile_img\"\n              />\n              <div className={styles.message}>{messageContent}</div>\n              <div className={styles.dates}>2020-11-30-MON</div>\n            </div>\n            <div className={styles.talkBox}>\n              <img\n                className={styles.chatProfile}\n                src={iguanaImg}\n                alt=\"chatprofile_img\"\n              />\n              <div className={styles.message}>{messageContent}</div>\n              <div className={styles.dates}>2020-11-30-MON</div>\n            </div>\n\n            <div className={styles.talkBox}>\n              <img\n                className={styles.chatProfile}\n                src={iguanaImg}\n                alt=\"chatprofile_img\"\n              />\n              <div className={styles.message}>{messageContent}</div>\n              <div className={styles.dates}>2020-11-30-MON</div>\n            </div>\n            <MyChat />\n          </div>\n          <input\n            className={styles.chatPost}\n            type=\"text\"\n            placeholder=\"메시지 입력..\"\n            onKeyDown={myFunction}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/LandingPage/LandingPage.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/MainPage/MainPage.jsx",["107"],"import React, { useState } from 'react';\n// import axios from 'axios';\nimport styles from './MainPage.module.css';\nimport Posts from '../../components/Posts/Posts';\nimport profileImg from '../../images/iguana.jpeg';\nimport addPostImg from '../../images/bark.png';\nimport PostModal from '../../components/PostModal/PostModal';\nimport PostNewFormModal from '../../components/PostNewFormModal/PostNewFormModal';\n\nconst MainPage = () => {\n  const viewProfile = () => {\n    console.log('해당 프로필 유저의 posts를 렌더링');\n  };\n  const fakePosts = [\n    { title: 'a' },\n    { title: 'a' },\n    { title: 'a' },\n    { title: 'a' },\n    { title: 'a' },\n    { title: 'a' },\n    { title: 'a' },\n    { title: 'a' },\n    { title: 'a' },\n  ];\n  const [posts, setPosts] = useState(fakePosts);\n  //   const [isLoading, setIsLoading] = useState(false);\n  const addPost = () => {\n    const arr = [\n      { title: 'a' },\n      { title: 'a' },\n      { title: 'a' },\n      { title: 'a' },\n      { title: 'a' },\n      { title: 'a' },\n      { title: 'a' },\n      { title: 'a' },\n      { title: 'a' },\n    ];\n    setPosts((prev) => [...arr, ...prev]);\n  };\n  const [isAddPostOn, setIsAddPostOn] = useState(false);\n  const [isPostOn, setIsPostOn] = useState(false);\n  const viewAddPost = () => {\n    setIsAddPostOn(!isAddPostOn);\n  };\n  const viewPost = () => {\n    setIsPostOn(!isPostOn);\n  };\n\n  return (\n    <>\n      <PostNewFormModal isModalOn={isAddPostOn} handleClose={viewAddPost} />\n      <PostModal isModalOn={isPostOn} handleClose={viewPost} />\n      <div className={styles.main}>\n        <div className={styles.flexBox}>\n          <div className={styles.profile} onClick={viewProfile}>\n            <img src={profileImg} className={styles.image} alt=\"profile_img\" />\n            <div className={styles.petName}>이구아인</div>\n            <div className={styles.breed}>이구아나</div>\n            <div className={styles.postCountPart}>\n              <div className={styles.postsCount}>Posts</div>\n              <div className={styles.postsCountNumber}>22</div>\n            </div>\n          </div>\n          <Posts addPost={addPost} posts={posts} viewPost={viewPost} />\n          {/* {isLoading ? <div>isLoading...</div> : null} */}\n        </div>\n        <div className={styles.addButton} onClick={viewAddPost}>\n          <img className={styles.addPostImg} src={addPostImg} alt=\"addPost\" />\n        </div>\n      </div>\n    </>\n  );\n};\nexport default MainPage;\n","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Posts/Posts.jsx",["108","109"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Post/Post.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Modal/Modal.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostModal/PostModal.jsx",["110","111"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/ImageSlide/ImageSlide.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comments/Comments.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/MypageModal/MypageModal.jsx",["112","113","114"],"import { createRef, React, useState } from 'react';\nimport axios from 'axios';\n\nimport styles from './MypageModal.module.css';\nimport Modal from '../Modal/Modal';\nimport defaultProfile from '../../images/defaultProfile.png';\nimport logoImg from '../../images/logo.png';\nimport DeleteModal from '../DeleteModal/DeleteModal';\nimport CropModal from '../CropModal/CropModal';\n\nconst MypageModal = ({ isModalOn, handleClose }) => {\n  // img 변경관련 로직\n  const [cropModalOn, setCropModalOn] = useState(false);\n  const handleCropModalOn = () => {\n    setCropModalOn(!cropModalOn);\n  };\n  const [imgSrc, setImgSrc] = useState(null);\n  const [nowImg, setNowImg] = useState(defaultProfile);\n  // const handleNowImg = (newImg) => {\n  //   setNowImg(newImg);\n  // };\n\n  const changeProfile = (e) => {\n    if (e.target.files && e.target.files.length > 0) {\n      // html5의 fileAPI\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.addEventListener('load', () => {\n        setImgSrc(reader.result);\n      });\n      handleCropModalOn();\n    }\n  };\n\n  // 서버에서 보내준 정보를 렌더링(초기)할 때 useState 디폴트 값으로 받기\n  // + 유효성 검사 로직\n  const [nowPetName, setNowPetName] = useState('스눕독');\n  const [nowBreed, setNowBreed] = useState('시바견');\n  const petnameRef = createRef();\n  const breedRef = createRef();\n\n  const [petName, setPetname] = useState(nowPetName);\n  const [breed, setBreed] = useState(nowBreed);\n  const [checked, setChecked] = useState({ petname: true, breed: true });\n\n  // 유효성 검사 로직\n  const checkInform = (e) => {\n    if (e.target.name === 'petname') {\n      setChecked({ ...checked, petname: true });\n      if (e.target.value.length > 18 || e.target.value.length === 0) {\n        setChecked({ ...checked, petname: false });\n      }\n      setPetname(e.target.value);\n    } else if (e.target.name === 'breed') {\n      setChecked({ ...checked, breed: true });\n      if (e.target.value.length > 18 || e.target.value.length === 0) {\n        setChecked({ ...checked, breed: false });\n      }\n      setBreed(e.target.value);\n    }\n  };\n\n  // 실제 펫네임을 변경하기 위해 서버에 PATCH 요청을 보내는 로직\n  const changePetname = async () => {\n    if (checked.petname) {\n      try {\n        const response = await axios.patch(\n          'https://server.codestates-project.tk/user/petname',\n          {\n            petName,\n          },\n          { withCredentials: true },\n        );\n        if (response.status === 201) {\n          setNowPetName(petName);\n          setPetname(petName);\n          petnameRef.current.blur(); // 해결하기\n        }\n      } catch (err) {\n        // 중복 펫네임 409\n        if (err.response.status === 501) {\n          alert('some errors occur at server, please try again');\n        } else if (err.response.status === 404) {\n          setChecked({ ...checked, petname: false });\n        } else {\n          console.log(err);\n        }\n      }\n    }\n  };\n\n  // 실제 품종을 변경하기 위해 서버에 PATCH 요청을 보내는 로직\n  const changeBreed = async () => {\n    if (checked.breed) {\n      try {\n        const response = await axios.patch(\n          'https://server.codestates-project.tk/user/breed',\n          {\n            breed,\n          },\n          { withCredentials: true },\n        );\n        if (response.status === 201) {\n          setNowBreed(breed);\n          setBreed(breed);\n          breedRef.current.blur();\n        }\n      } catch (err) {\n        if (err.response.status === 501) {\n          alert('some errors occur at server, please try again');\n        } else if (err.response.status === 404) {\n          setChecked({ ...checked, breed: false });\n        }\n      }\n    }\n  };\n\n  const resetAndTurnOffTheModal = () => {\n    setPetname(nowPetName);\n    setBreed(nowBreed);\n    setChecked({ petname: true, breed: true });\n    handleClose();\n  };\n\n  // 회원 탈퇴 모달은 디폴트 모달을 재활용하지 않는 것이기에 따로 state로 관리\n  const [deleteModalOn, setDeleteModalOn] = useState(false);\n  const viewDeleteModal = () => {\n    setDeleteModalOn(!deleteModalOn);\n  };\n\n  return (\n    <>\n      <DeleteModal isModalOn={deleteModalOn} handleClose={viewDeleteModal} />\n      <Modal isModalOn={isModalOn} handleClose={resetAndTurnOffTheModal}>\n        <div className={styles.MypageModal}>\n          <div className={styles.profile}>\n            <div className={styles.imgPart}>\n              <img src={nowImg} className={styles.profileImg} alt=\"profile\" />\n            </div>\n            <div className={styles.informPart}>\n              <div className={styles.title}>프로필 사진</div>\n              <input\n                id=\"profileImgInput\"\n                type=\"file\"\n                className={styles.profileImgInput}\n                onChange={changeProfile}\n              />\n              <label htmlFor=\"profileImgInput\">\n                <div className={styles.editButton}>Edit Picture</div>\n              </label>\n            </div>\n          </div>\n          <div className={styles.editPart}>\n            <div className={styles.petnameEdit}>\n              <div className={styles.petnameTitle}>\n                <img className={styles.logoImg} src={logoImg} alt=\"logo\" />\n                Pet Name\n              </div>\n              <div className={styles.petnameEditPart}>\n                <input\n                  ref={petnameRef}\n                  className={styles.myPageInput}\n                  spellCheck={false}\n                  onChange={checkInform}\n                  value={petName}\n                  name=\"petname\"\n                />\n                <button\n                  className={`${styles.informEditButton} ${\n                    checked.petname && styles.isOn\n                  }`}\n                  type=\"button\"\n                  onClick={changePetname}\n                >\n                  Edit\n                </button>\n              </div>\n              {checked.petname ? null : (\n                <div className={styles.caution}>\n                  펫네임은 최소 1글자 이상 18글자 이하로 작성해주세요\n                </div>\n              )}\n            </div>\n            <div className={styles.breedEdit}>\n              <div className={styles.breedTitle}>\n                <img className={styles.logoImg} src={logoImg} alt=\"logo\" />\n                Breed\n              </div>\n              <div className={styles.breedEditPart}>\n                <input\n                  ref={breedRef}\n                  className={styles.myPageInput}\n                  spellCheck={false}\n                  name=\"breed\"\n                  value={breed}\n                  onChange={checkInform}\n                />\n                <button\n                  className={`${styles.informEditButton} ${\n                    checked.breed && styles.isOn\n                  }`}\n                  type=\"button\"\n                  onClick={changeBreed}\n                >\n                  Edit\n                </button>\n              </div>\n              {checked.breed ? null : (\n                <div className={styles.caution}>\n                  품종은 최소 1글자 이상 18글자 이하로 작성해주세요\n                </div>\n              )}\n            </div>\n            <div className={styles.deleteEdit}>\n              <div className={styles.deleteTitle}>\n                <img className={styles.logoImg} src={logoImg} alt=\"logo\" />\n                Delete Account\n              </div>\n              <button\n                id={styles.deleteButton}\n                className={styles.deleteEditButton}\n                type=\"button\"\n                onClick={viewDeleteModal}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n      <CropModal\n        setNowImg={setNowImg}\n        imgSrc={imgSrc}\n        setImgSrc={setImgSrc}\n        isModalOn={cropModalOn}\n        handleClose={handleCropModalOn}\n      />\n    </>\n  );\n};\n\nexport default MypageModal;\n","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comment/Comment.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComments/SubComments.jsx",[],["115","116","117","118"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComment/SubComment.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/DeleteModal/DeleteModal.jsx",["119","120"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostNewFormModal/PostNewFormModal.jsx",["121"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/CropModal/CropModal.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SimpleModal/SimpleModal.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/ChatUser/ChatUser.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/MyChat/MyChat.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostCropModal/PostCropModal.jsx",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":13,"column":22,"nodeType":"132","messageId":"133","endLine":13,"endColumn":31},{"ruleId":"134","severity":1,"message":"135","line":14,"column":5,"nodeType":"136","messageId":"137","endLine":14,"endColumn":18},{"ruleId":"138","severity":1,"message":"139","line":12,"column":5,"nodeType":"140","messageId":"137","endLine":12,"endColumn":16},{"ruleId":"138","severity":1,"message":"139","line":18,"column":7,"nodeType":"140","messageId":"137","endLine":18,"endColumn":18},{"ruleId":"141","severity":1,"message":"142","line":29,"column":6,"nodeType":"143","endLine":29,"endColumn":8,"suggestions":"144"},{"ruleId":"138","severity":1,"message":"139","line":32,"column":17,"nodeType":"140","messageId":"137","endLine":32,"endColumn":28},{"ruleId":"138","severity":1,"message":"139","line":77,"column":17,"nodeType":"140","messageId":"137","endLine":77,"endColumn":28},{"ruleId":"134","severity":1,"message":"135","line":82,"column":11,"nodeType":"136","messageId":"137","endLine":82,"endColumn":65},{"ruleId":"138","severity":1,"message":"139","line":86,"column":11,"nodeType":"140","messageId":"137","endLine":86,"endColumn":22},{"ruleId":"134","severity":1,"message":"135","line":110,"column":11,"nodeType":"136","messageId":"137","endLine":110,"endColumn":65},{"ruleId":"122","replacedBy":"145"},{"ruleId":"124","replacedBy":"146"},{"ruleId":"126","replacedBy":"147"},{"ruleId":"128","replacedBy":"148"},{"ruleId":"134","severity":1,"message":"135","line":26,"column":9,"nodeType":"136","messageId":"137","endLine":26,"endColumn":63},{"ruleId":"138","severity":1,"message":"139","line":28,"column":9,"nodeType":"140","messageId":"137","endLine":28,"endColumn":20},{"ruleId":"134","severity":1,"message":"135","line":51,"column":7,"nodeType":"136","messageId":"137","endLine":51,"endColumn":42},"lines-around-directive",["149"],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"func-names","Unexpected unnamed function.","FunctionExpression","unnamed","no-alert","Unexpected alert.","CallExpression","unexpected","no-console","Unexpected console statement.","MemberExpression","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onIntersect' and 'target'. Either include them or remove the dependency array.","ArrayExpression",["150"],["149"],[],[],[],"padding-line-between-statements",{"desc":"151","fix":"152"},"Update the dependencies array to be: [onIntersect, target]",{"range":"153","text":"154"},[856,858],"[onIntersect, target]"]