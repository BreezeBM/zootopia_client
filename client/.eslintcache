[{"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/Chatpage/ChatPage.jsx":"1","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/MainPage/MainPage.jsx":"2","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/EachSlide/EachSlide.jsx":"3","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComments/SubComments.jsx":"4","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComment/SubComment.jsx":"5","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/fakeData.js":"6","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/App.jsx":"7","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Post/Post.jsx":"8","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/ImageSlide/ImageSlide.jsx":"9","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostCropModal/PostCropModal.jsx":"10","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostModal/PostModal.jsx":"11","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Posts/Posts.jsx":"12","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comments/Comments.jsx":"13","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comment/Comment.jsx":"14","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostDeleteModal/PostDeleteModal.jsx":"15","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Nav/Nav.jsx":"16","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/MypageModal/MypageModal.jsx":"17","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/CropModal/CropModal.jsx":"18","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/LandingPage/LandingPage.jsx":"19","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostNewFormModal/PostNewFormModal.jsx":"20","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/index.js":"21","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/ChatUser/ChatUser.jsx":"22","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/MyChat/MyChat.jsx":"23","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/UserChat/UserChat.jsx":"24"},{"size":6464,"mtime":1607396806746,"results":"25","hashOfConfig":"26"},{"size":6208,"mtime":1607610063522,"results":"27","hashOfConfig":"28"},{"size":330,"mtime":1607072594693,"results":"29","hashOfConfig":"26"},{"size":1065,"mtime":1607607858744,"results":"30","hashOfConfig":"28"},{"size":4597,"mtime":1607607988896,"results":"31","hashOfConfig":"28"},{"size":2814,"mtime":1607598952738,"results":"32","hashOfConfig":"28"},{"size":5806,"mtime":1607609867620,"results":"33","hashOfConfig":"28"},{"size":413,"mtime":1607578991112,"results":"34","hashOfConfig":"28"},{"size":2178,"mtime":1607078376154,"results":"35","hashOfConfig":"28"},{"size":3570,"mtime":1606905749699,"results":"36","hashOfConfig":"28"},{"size":14179,"mtime":1607609899767,"results":"37","hashOfConfig":"28"},{"size":1875,"mtime":1607606088417,"results":"38","hashOfConfig":"28"},{"size":1260,"mtime":1607607356105,"results":"39","hashOfConfig":"28"},{"size":5151,"mtime":1607607554670,"results":"40","hashOfConfig":"28"},{"size":2401,"mtime":1607609907736,"results":"41","hashOfConfig":"28"},{"size":1382,"mtime":1607609067061,"results":"42","hashOfConfig":"28"},{"size":8369,"mtime":1607609244966,"results":"43","hashOfConfig":"28"},{"size":4385,"mtime":1607609289903,"results":"44","hashOfConfig":"28"},{"size":2195,"mtime":1607396806747,"results":"45","hashOfConfig":"28"},{"size":8493,"mtime":1607610184008,"results":"46","hashOfConfig":"28"},{"size":309,"mtime":1606809858434,"results":"47","hashOfConfig":"28"},{"size":998,"mtime":1607565714914,"results":"48","hashOfConfig":"28"},{"size":850,"mtime":1607396806741,"results":"49","hashOfConfig":"28"},{"size":525,"mtime":1607396806744,"results":"50","hashOfConfig":"28"},{"filePath":"51","messages":"52","errorCount":2,"warningCount":1,"fixableErrorCount":2,"fixableWarningCount":0,"source":null},"cnzfbj",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"pth6zu",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/Chatpage/ChatPage.jsx",["100","101","102"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/MainPage/MainPage.jsx",["103","104"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/EachSlide/EachSlide.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComments/SubComments.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComment/SubComment.jsx",["105","106"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/fakeData.js",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/App.jsx",["107"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Post/Post.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/ImageSlide/ImageSlide.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostCropModal/PostCropModal.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostModal/PostModal.jsx",["108","109","110","111","112"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Posts/Posts.jsx",["113"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comments/Comments.jsx",["114"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comment/Comment.jsx",["115","116"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostDeleteModal/PostDeleteModal.jsx",["117"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Nav/Nav.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/MypageModal/MypageModal.jsx",["118","119","120"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/CropModal/CropModal.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/LandingPage/LandingPage.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostNewFormModal/PostNewFormModal.jsx",["121","122"],"import { createRef, React, useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './PostNewFormModal.module.css';\nimport close from '../../images/close.png';\nimport PostCropModal from '../PostCropModal/PostCropModal';\n// import FAKEIMG from '../../thumbnails/post_a.png';\n\nconst PostNewFormModal = ({\n  setProfileForDeleteAndAdd,\n  setUserProfile,\n  postsKind,\n  setPosts,\n  isModalOn,\n  handleClose,\n}) => {\n  const history = useHistory();\n  const imgInput1 = createRef();\n  const imgInput2 = createRef();\n  const imgInput3 = createRef();\n  const textAreaRef = useRef(null);\n  const [isCropModalOn, setIsCropModalOn] = useState(false);\n  const [inputNum, setInputNum] = useState(null);\n  const [checked, setChecked] = useState(false);\n  const [imgChecked, setImgChecked] = useState(false);\n\n  const handleCropModal = () => {\n    setIsCropModalOn(!isCropModalOn);\n  };\n  const [imgSrc, setImgSrc] = useState(null);\n\n  const [imgSrcs, setImgSrcs] = useState({ 1: '+', 2: '+', 3: '+' });\n\n  const setImgSrcsFunc = (inputNumber, urlSrc) => {\n    if (inputNumber === 1) {\n      setImgSrcs({ ...imgSrcs, 1: urlSrc });\n    } else if (inputNumber === 2) {\n      setImgSrcs({ ...imgSrcs, 2: urlSrc });\n    } else if (inputNumber === 3) {\n      setImgSrcs({ ...imgSrcs, 3: urlSrc });\n    }\n  };\n\n  const imgOnChange = (e) => {\n    setImgChecked(false);\n    try {\n      const urlSrc = URL.createObjectURL(e.target.files[0]);\n      if (e.target.name === 'imgInput1') {\n        setInputNum(1);\n        setImgSrc(urlSrc);\n        handleCropModal();\n      } else if (e.target.name === 'imgInput2') {\n        setInputNum(2);\n        setImgSrc(urlSrc);\n        handleCropModal();\n      } else if (e.target.name === 'imgInput3') {\n        setInputNum(3);\n        setImgSrc(urlSrc);\n        handleCropModal();\n      }\n    } catch (err) {\n      alert('we only accept image files');\n    }\n  };\n\n  const resetAndCloseModal = () => {\n    setImgSrcs({ 1: '+', 2: '+', 3: '+' });\n    setChecked(false);\n    setImgChecked(false);\n    textAreaRef.current.value = null;\n    handleClose();\n  };\n\n  const sendNewPost = async () => {\n    if (textAreaRef.current.value.trim().length === 0) {\n      setChecked(true);\n    } else {\n      // 이미지가 1개 미만이면 즉, 0개 업로딩이면 못보내게 하기\n      const formData = new FormData();\n      const dataArr = [];\n      for (const el of Object.values(imgSrcs)) {\n        if (el !== '+') {\n          const encodeData = el.replace('data:image/png;base64,', '');\n          const decodImg = atob(encodeData);\n          const array = [];\n          for (let i = 0; i < decodImg.length; i += 1) {\n            array.push(decodImg.charCodeAt(i));\n          }\n          const file = new Blob([new Uint8Array(array)], { type: 'image/png' });\n          dataArr.push(file);\n        }\n      }\n      // 현재 dataArr 에 이미지가 있음 (Blob 타입의)\n      let image1;\n      if (dataArr[0]) {\n        // eslint-disable-next-line prefer-destructuring\n        image1 = dataArr[0];\n      } else {\n        setImgChecked(true);\n        return null;\n      }\n      const image2 = dataArr[1] ? dataArr[1] : null;\n      const image3 = dataArr[2] ? dataArr[2] : null;\n\n      const fileName = 'canvas_img_'.concat(\n        new Date().getMilliseconds(),\n        '.png',\n      );\n\n      if (image1) formData.append('image1', image1, fileName);\n      if (image2) formData.append('image2', image2, fileName);\n      if (image3) formData.append('image3', image3, fileName);\n      formData.append('text', textAreaRef.current.value);\n      try {\n        const response = await axios({\n          method: 'post',\n          url: 'https://server.codestates-project.tk/post',\n          data: formData,\n          headers: {\n            'Content-Type': `multipart/form-data`,\n          },\n        });\n        setUserProfile((prev) => {\n          return { ...prev, postCount: prev.postCount + 1 };\n        });\n\n        if (postsKind === 'latest' || postsKind === 'user') {\n          setPosts((prev) => {\n            const copyArr = prev.postData.slice();\n            copyArr.unshift(response.data);\n            return { ...prev, postData: copyArr };\n          });\n          setProfileForDeleteAndAdd((prev) => {\n            return { ...prev, postCount: prev.postCount + 1 };\n          });\n        }\n        resetAndCloseModal();\n      } catch (err) {\n        if (err.response.status === 401) {\n          history.push('/');\n        } else {\n          alert('sorry, server got an error. please try again');\n        }\n      }\n      // if (postsKind === 'latest' || postsKind === 'user') {\n      //   setPosts((prev) => {\n      //     const copyArr = prev.postData.slice();\n      //     copyArr.unshift({ postId: 7, thumbnail: FAKEIMG });\n      //     return { ...prev, postData: copyArr };\n      //   });\n      // }\n      // resetAndCloseModal();\n    }\n  };\n\n  return (\n    <>\n      <PostCropModal\n        setImgSrcs={setImgSrcsFunc}\n        inputNum={inputNum}\n        setImgSrc={setImgSrc}\n        imgSrc={imgSrc}\n        isModalOn={isCropModalOn}\n        handleClose={handleCropModal}\n      />\n      <div className={`${styles.modal} ${isModalOn && styles.isOn}`}>\n        <div className={styles.box}>\n          <img\n            className={styles.close}\n            src={close}\n            alt=\"close\"\n            onClick={resetAndCloseModal}\n          />\n          <div className={styles.postNewFormModal}>\n            <div className={styles.imgInputPart}>\n              <input\n                className={styles.imgInput}\n                type=\"file\"\n                accept=\"image/gif, image/jpeg, image/png\"\n                name=\"imgInput1\"\n                id=\"imgInput1\"\n                ref={imgInput1}\n                onChange={imgOnChange}\n              />\n              <input\n                className={styles.imgInput}\n                type=\"file\"\n                accept=\"image/gif, image/jpeg, image/png\"\n                name=\"imgInput2\"\n                id=\"imgInput2\"\n                ref={imgInput2}\n                onChange={imgOnChange}\n              />\n              <input\n                className={styles.imgInput}\n                type=\"file\"\n                accept=\"image/gif, image/jpeg, image/png\"\n                name=\"imgInput3\"\n                id=\"imgInput3\"\n                ref={imgInput3}\n                onChange={imgOnChange}\n              />\n              <label className={styles.labels} htmlFor=\"imgInput1\">\n                {imgSrcs[1] === '+' ? (\n                  '+'\n                ) : (\n                  <img\n                    className={styles.uploadedImg}\n                    src={imgSrcs[1]}\n                    alt=\"upload img\"\n                  />\n                )}\n              </label>\n              <label className={styles.labels} htmlFor=\"imgInput2\">\n                {imgSrcs[2] === '+' ? (\n                  '+'\n                ) : (\n                  <img\n                    className={styles.uploadedImg}\n                    src={imgSrcs[2]}\n                    alt=\"upload img\"\n                  />\n                )}\n              </label>\n              <label className={styles.labels} htmlFor=\"imgInput3\">\n                {imgSrcs[3] === '+' ? (\n                  '+'\n                ) : (\n                  <img\n                    className={styles.uploadedImg}\n                    src={imgSrcs[3]}\n                    alt=\"upload img\"\n                  />\n                )}\n              </label>\n            </div>\n            {imgChecked && (\n              <div className={styles.imgCheck}>\n                하나 이상의 이미지를 업로드 해주세요\n              </div>\n            )}\n            <div className={styles.textInputPart}>\n              <textarea\n                onKeyDown={() => {\n                  setChecked(false);\n                }}\n                ref={textAreaRef}\n                placeholder=\"내용을 입력해주세요\"\n                spellCheck={false}\n                className={`${styles.textInput} ${checked && styles.isOn}`}\n              />\n            </div>\n            <div className={styles.btnInputPart}>\n              <button\n                className={styles.barkBtn}\n                type=\"button\"\n                onClick={sendNewPost}\n              >\n                Bark\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PostNewFormModal;\n","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/index.js",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/ChatUser/ChatUser.jsx",["123","124","125"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/MyChat/MyChat.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/UserChat/UserChat.jsx",[],{"ruleId":"126","severity":2,"message":"127","line":37,"column":5,"nodeType":"128","messageId":"129","endLine":37,"endColumn":16,"fix":"130"},{"ruleId":"131","severity":2,"message":"132","line":40,"column":10,"nodeType":"133","messageId":"134","endLine":42,"endColumn":4,"fix":"135"},{"ruleId":"136","severity":1,"message":"137","line":49,"column":22,"nodeType":"138","messageId":"139","endLine":49,"endColumn":31},{"ruleId":"140","severity":1,"message":"141","line":66,"column":11,"nodeType":"142","messageId":"134","endLine":66,"endColumn":22},{"ruleId":"143","severity":1,"message":"144","line":124,"column":6,"nodeType":"145","endLine":124,"endColumn":8,"suggestions":"146"},{"ruleId":"140","severity":1,"message":"141","line":47,"column":9,"nodeType":"142","messageId":"134","endLine":47,"endColumn":20},{"ruleId":"140","severity":1,"message":"141","line":70,"column":11,"nodeType":"142","messageId":"134","endLine":70,"endColumn":22},{"ruleId":"140","severity":1,"message":"141","line":100,"column":7,"nodeType":"142","messageId":"134","endLine":100,"endColumn":18},{"ruleId":"140","severity":1,"message":"141","line":94,"column":9,"nodeType":"142","messageId":"134","endLine":94,"endColumn":20},{"ruleId":"140","severity":1,"message":"141","line":159,"column":11,"nodeType":"142","messageId":"134","endLine":159,"endColumn":22},{"ruleId":"140","severity":1,"message":"141","line":193,"column":11,"nodeType":"142","messageId":"134","endLine":193,"endColumn":22},{"ruleId":"140","severity":1,"message":"141","line":214,"column":11,"nodeType":"142","messageId":"134","endLine":214,"endColumn":22},{"ruleId":"140","severity":1,"message":"141","line":238,"column":9,"nodeType":"142","messageId":"134","endLine":238,"endColumn":20},{"ruleId":"143","severity":1,"message":"147","line":50,"column":6,"nodeType":"145","endLine":50,"endColumn":8,"suggestions":"148"},{"ruleId":null,"fatal":true,"severity":2,"message":"149","line":24,"column":13},{"ruleId":"140","severity":1,"message":"141","line":35,"column":5,"nodeType":"142","messageId":"134","endLine":35,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":56,"column":11,"nodeType":"142","messageId":"134","endLine":56,"endColumn":22},{"ruleId":"140","severity":1,"message":"141","line":43,"column":9,"nodeType":"142","messageId":"134","endLine":43,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":85,"column":11,"nodeType":"152","messageId":"134","endLine":85,"endColumn":65},{"ruleId":"140","severity":1,"message":"141","line":89,"column":11,"nodeType":"142","messageId":"134","endLine":89,"endColumn":22},{"ruleId":"150","severity":1,"message":"151","line":116,"column":11,"nodeType":"152","messageId":"134","endLine":116,"endColumn":65},{"ruleId":"150","severity":1,"message":"151","line":62,"column":7,"nodeType":"152","messageId":"134","endLine":62,"endColumn":42},{"ruleId":"150","severity":1,"message":"151","line":142,"column":11,"nodeType":"152","messageId":"134","endLine":142,"endColumn":64},{"ruleId":"143","severity":1,"message":"153","line":10,"column":3,"nodeType":"128","endLine":10,"endColumn":12,"suggestions":"154"},{"ruleId":"136","severity":1,"message":"137","line":16,"column":22,"nodeType":"138","messageId":"139","endLine":16,"endColumn":31},{"ruleId":"140","severity":1,"message":"141","line":18,"column":5,"nodeType":"142","messageId":"134","endLine":18,"endColumn":16},"prefer-const","'testContent' is never reassigned. Use 'const' instead.","Identifier","useConst",{"range":"155","text":"156"},"no-else-return","Unnecessary 'else' after 'return'.","BlockStatement","unexpected",{"range":"157","text":"158"},"func-names","Unexpected unnamed function.","FunctionExpression","unnamed","no-console","Unexpected console statement.","MemberExpression","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'acceptUserData' and 'getPosts'. Either include them or remove the dependency array. If 'getPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["159"],"React Hook useEffect has a missing dependency: 'observer'. Either include it or remove the dependency array.",["160"],"Parsing error: JSX value should be either an expression or a quoted JSX text\n\n  22 |           <Comment\n  23 |           userProfile=\n> 24 |             getSpecificUser={getSpecificUser}\n     |             ^\n  25 |             setCommentId={setCommentId}\n  26 |             setCommentToWhom={setCommentToWhom}\n  27 |             setWhichComment={setWhichComment}","no-alert","Unexpected alert.","CallExpression","React Hook useEffect contains a call to 'changeToggle'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [state, idValue, Card] as a second argument to the useEffect Hook.",["161"],[957,960],"const",[988,1163],"(el) => {\n  if (el.userId === 1) {\n    return <MyChat textData={el.text} dateData={el.time} />;\n  } \n    return <UserChat textData={el.text} dateData={el.time} />;\n  \n}",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [acceptUserData, getPosts]",{"range":"168","text":"169"},"Update the dependencies array to be: [observer]",{"range":"170","text":"171"},"Add dependencies array: [state, idValue, Card]",{"range":"172","text":"173"},[3745,3747],"[acceptUserData, getPosts]",[1234,1236],"[observer]",[442,442],", [state, idValue, Card]"]