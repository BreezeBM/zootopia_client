[{"/Users/user/Desktop/final-project/zootopia_client/client/src/pages/MainPage/MainPage.jsx":"1","/Users/user/Desktop/final-project/zootopia_client/client/src/pages/Chatpage/ChatPage.jsx":"2","/Users/user/Desktop/final-project/zootopia_client/client/src/App.jsx":"3","/Users/user/Desktop/final-project/zootopia_client/client/src/components/SubComment/SubComment.jsx":"4","/Users/user/Desktop/final-project/zootopia_client/client/src/components/MypageModal/MypageModal.jsx":"5","/Users/user/Desktop/final-project/zootopia_client/client/src/components/PostModal/PostModal.jsx":"6","/Users/user/Desktop/final-project/zootopia_client/client/src/components/AddroomModal/AddroomModal.jsx":"7","/Users/user/Desktop/final-project/zootopia_client/client/src/components/PrivateChat/PrivateChat.jsx":"8","/Users/user/Desktop/final-project/zootopia_client/client/src/components/Comment/Comment.jsx":"9","/Users/user/Desktop/final-project/zootopia_client/client/src/components/SubComments/SubComments.jsx":"10","/Users/user/Desktop/final-project/zootopia_client/client/src/components/Comments/Comments.jsx":"11","/Users/user/Desktop/final-project/zootopia_client/client/src/components/UserChat/UserChat.jsx":"12","/Users/user/Desktop/final-project/zootopia_client/client/src/components/MyChat/MyChat.jsx":"13","/Users/user/Desktop/final-project/zootopia_client/client/src/index.js":"14","/Users/user/Desktop/final-project/zootopia_client/client/src/components/PostNewFormModal/PostNewFormModal.jsx":"15","/Users/user/Desktop/final-project/zootopia_client/client/src/components/ChatUser/ChatUser.jsx":"16","/Users/user/Desktop/final-project/zootopia_client/client/src/components/Post/Post.jsx":"17","/Users/user/Desktop/final-project/zootopia_client/client/src/components/ImageSlide/ImageSlide.jsx":"18","/Users/user/Desktop/final-project/zootopia_client/client/src/components/Nav/Nav.jsx":"19","/Users/user/Desktop/final-project/zootopia_client/client/src/components/Posts/Posts.jsx":"20","/Users/user/Desktop/final-project/zootopia_client/client/src/components/DeleteModal/DeleteModal.jsx":"21","/Users/user/Desktop/final-project/zootopia_client/client/src/components/CropModal/CropModal.jsx":"22","/Users/user/Desktop/final-project/zootopia_client/client/src/pages/LandingPage/LandingPage.jsx":"23"},{"size":5503,"mtime":1608349914706,"results":"24","hashOfConfig":"25"},{"size":10556,"mtime":1608433739930,"results":"26","hashOfConfig":"25"},{"size":8258,"mtime":1608365974295,"results":"27","hashOfConfig":"25"},{"size":6495,"mtime":1608372707373,"results":"28","hashOfConfig":"25"},{"size":9152,"mtime":1608253475865,"results":"29","hashOfConfig":"25"},{"size":16354,"mtime":1608372061981,"results":"30","hashOfConfig":"25"},{"size":2595,"mtime":1608367426754,"results":"31","hashOfConfig":"25"},{"size":3079,"mtime":1608369994523,"results":"32","hashOfConfig":"25"},{"size":6993,"mtime":1608372734917,"results":"33","hashOfConfig":"25"},{"size":1080,"mtime":1608372677119,"results":"34","hashOfConfig":"25"},{"size":1138,"mtime":1608372738379,"results":"35","hashOfConfig":"25"},{"size":1526,"mtime":1608375145963,"results":"36","hashOfConfig":"25"},{"size":1071,"mtime":1608377215783,"results":"37","hashOfConfig":"25"},{"size":309,"mtime":1607601102807,"results":"38","hashOfConfig":"25"},{"size":8486,"mtime":1608259899068,"results":"39","hashOfConfig":"25"},{"size":2503,"mtime":1608298144809,"results":"40","hashOfConfig":"25"},{"size":413,"mtime":1607601102784,"results":"41","hashOfConfig":"25"},{"size":2424,"mtime":1608259899067,"results":"42","hashOfConfig":"25"},{"size":2457,"mtime":1608259899067,"results":"43","hashOfConfig":"25"},{"size":1316,"mtime":1608349914703,"results":"44","hashOfConfig":"25"},{"size":2324,"mtime":1608259899066,"results":"45","hashOfConfig":"25"},{"size":4562,"mtime":1608172251257,"results":"46","hashOfConfig":"25"},{"size":2823,"mtime":1608365974296,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"wayp63",{"filePath":"50","messages":"51","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/user/Desktop/final-project/zootopia_client/client/src/pages/MainPage/MainPage.jsx",["100","101"],"/Users/user/Desktop/final-project/zootopia_client/client/src/pages/Chatpage/ChatPage.jsx",["102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135"],"/Users/user/Desktop/final-project/zootopia_client/client/src/App.jsx",["136","137","138"],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/SubComment/SubComment.jsx",["139","140","141","142","143","144","145","146","147","148","149"],"/* eslint-disable no-nested-ternary */\nimport { React, useRef, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport styles from './SubComment.module.css';\nimport updateBtn from '../../images/commentUpdateBtn.jpg';\nimport chatBtn from '../../images/chat.png';\n\nconst SubComment = ({\n  userProfileId,\n  getSpecificUser,\n  postId,\n  refreshPost,\n  replyId,\n  userId,\n  commentId,\n  setCommentId,\n  setCommentToWhom,\n  thumbnail,\n  petName,\n  text,\n  time,\n  handleCommentBtn,\n  DMdefault,\n}) => {\n  const history = useHistory();\n  const [today, setToday] = useState(null);\n  const [hasRights, setHasRights] = useState(false);\n  const textRef = useRef(null);\n  const [updateToggled, setUpdateToggled] = useState(false);\n  const [textUpdateToggled, setTextUpdateToggled] = useState(false);\n  const [textInput, setTextInput] = useState(null);\n\n  // 대댓글 삭제\n  const deleteSubComment = async () => {\n    try {\n      const response = await axios.delete(\n        `https://server.codestates-project.tk/post/reply`,\n        {\n          data: {\n            postId,\n            replyId,\n          },\n          withCredentials: true,\n        },\n      );\n      refreshPost(response.data.comments);\n      setUpdateToggled(false);\n    } catch (err) {\n      if (err.response.status === 401) {\n        history.push('/');\n      } else {\n        alert('sorry server got some errors please try again');\n      }\n    }\n  };\n\n  // 대댓글 수정\n  const updateSubComment = async () => {\n    if (textUpdateToggled === true) {\n      try {\n        const response = await axios.patch(\n          `https://server.codestates-project.tk/post/reply`,\n          {\n            postId,\n            replyId,\n            text: textInput,\n          },\n          { withCredentials: true },\n        );\n        refreshPost(response.data.comments);\n      } catch (err) {\n        if (err.response.status === 401) {\n          history.push('/');\n        } else if (err.response.status === 400) {\n          alert('1글자 이상의 댓글을 입력해주세요');\n        } else {\n          alert('sorry server got some errors please try again');\n        }\n      }\n      setTextUpdateToggled(false);\n      setUpdateToggled(false);\n    } else {\n      await setTextInput(text);\n      await setTextUpdateToggled(true);\n      textRef.current.focus();\n    }\n  };\n\n  const checkEnterPress = (e) => {\n    if (e.keyCode === 13) {\n      updateSubComment();\n    }\n  };\n\n  const DMchat = () => {\n    console.log('DM 보내기');\n    console.log(userProfileId);\n    console.log(userId);\n\n    const idData = {\n      myId: userProfileId,\n    };\n    const config = {\n      method: 'post',\n      url: `https://chat.codestates-project.tk/room/private/${userId}`,\n      data: idData,\n      withCredentials: true,\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response);\n        DMdefault();\n        history.push('/chat');\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const getDateType = () => {\n    const todayDate = new Date();\n    const date = new Date(time);\n    const betweenTime = Math.floor(\n      (todayDate.getTime() - date.getTime()) / 1000 / 60,\n    );\n    if (betweenTime < 1) return '방금전';\n    if (betweenTime < 60) {\n      return `${betweenTime}분전`;\n    }\n    const betweenTimeHour = Math.floor(betweenTime / 60);\n    if (betweenTimeHour < 24) {\n      return `${betweenTimeHour}시간전`;\n    }\n    const betweenTimeDay = Math.floor(betweenTime / 60 / 24);\n    if (betweenTimeDay < 365) {\n      return `${betweenTimeDay}일전`;\n    }\n    return `${Math.floor(betweenTimeDay / 365)}년전`;\n  };\n\n  useEffect(() => {\n    setToday(getDateType());\n  });\n\n  useEffect(() => {\n    if (userId === userProfileId) {\n      setHasRights(true);\n    }\n  }, [userProfileId, userId]);\n\n  return (\n    <div className={styles.subComment}>\n      <div className={styles.contentsPart}>\n        <img\n          onClick={() => {\n            getSpecificUser(userId);\n          }}\n          className={styles.profile}\n          src={thumbnail}\n          alt=\"profile\"\n        />\n        <div className={styles.commentPart}>\n          <span\n            className={styles.nickname}\n            onClick={() => {\n              getSpecificUser(userId);\n            }}\n          >\n            {petName}\n          </span>\n          {textUpdateToggled ? (\n            <input\n              onKeyDown={checkEnterPress}\n              spellCheck={false}\n              ref={textRef}\n              className={styles.textInput}\n              type=\"text\"\n              value={textInput}\n              onChange={(e) => {\n                setTextInput(e.target.value);\n              }}\n            />\n          ) : (\n            <span className={styles.textPart}>{text}</span>\n          )}\n        </div>\n      </div>\n      <div className={styles.dateAndBtnPart}>\n        <span className={styles.date}>{today}</span>\n        <img\n          className={styles.chatBtn}\n          src={chatBtn}\n          alt=\"chat button\"\n          onClick={DMchat}\n        />\n        <span\n          className={styles.commentBtn}\n          onClick={async () => {\n            await setCommentId(commentId);\n            await setCommentToWhom(petName);\n            handleCommentBtn();\n          }}\n        >\n          답글 달기\n        </span>\n        {hasRights ? (\n          updateToggled ? (\n            <div className={styles.updateBtns}>\n              <img\n                className={styles.closeUpdateBtn}\n                src={updateBtn}\n                alt=\"updateBtn\"\n                onClick={() => {\n                  setTextUpdateToggled(false);\n                  setTextInput(text);\n                  setUpdateToggled(false);\n                }}\n              />\n              <i\n                id={styles.goToInputBtn}\n                className=\"far fa-edit\"\n                onClick={updateSubComment}\n              />\n              <i\n                id={styles.commentDeleteBtn}\n                className=\"fas fa-trash-alt\"\n                onClick={deleteSubComment}\n              />\n            </div>\n          ) : (\n            <img\n              className={styles.updateBtn}\n              src={updateBtn}\n              alt=\"updateBtn\"\n              onClick={() => {\n                setUpdateToggled(true);\n              }}\n            />\n          )\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default SubComment;\n","/Users/user/Desktop/final-project/zootopia_client/client/src/components/MypageModal/MypageModal.jsx",["150","151","152","153"],"import { useEffect, React, useRef, useState } from 'react';\nimport axios from 'axios';\n\nimport styles from './MypageModal.module.css';\nimport Modal from '../Modal/Modal';\nimport logoImg from '../../images/logo.png';\nimport DeleteModal from '../DeleteModal/DeleteModal';\nimport CropModal from '../CropModal/CropModal';\n\nconst MypageModal = ({\n  setProfile,\n  kind,\n  userProfile,\n  setUserProfile,\n  profile,\n  isModalOn,\n  handleClose,\n}) => {\n  // img 변경관련 로직\n  const [petnameCaution, setPetnameCaution] = useState(null);\n  const [breedCaution, setBreedCaution] = useState(null);\n  const [cropModalOn, setCropModalOn] = useState(false);\n  const handleCropModalOn = () => {\n    setCropModalOn(!cropModalOn);\n  };\n  const [imgSrc, setImgSrc] = useState(null);\n  const [nowImg, setNowImg] = useState(profile.thumbnail);\n  // const handleNowImg = (newImg) => {\n  //   setNowImg(newImg);\n  // };\n\n  const changeProfile = (e) => {\n    if (e.target.files && e.target.files.length > 0) {\n      // html5의 fileAPI\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.addEventListener('load', () => {\n        setImgSrc(reader.result);\n      });\n      handleCropModalOn();\n    }\n  };\n\n  // 서버에서 보내준 정보를 렌더링(초기)할 때 useState 디폴트 값으로 받기\n  // + 유효성 검사 로직\n  const [nowPetName, setNowPetName] = useState(userProfile.petName);\n  const [nowBreed, setNowBreed] = useState(userProfile.breed);\n  const petnameRef = useRef(null);\n  const breedRef = useRef(null);\n\n  const [petName, setPetname] = useState(userProfile.petName);\n  const [breed, setBreed] = useState(userProfile.breed);\n  const [checked, setChecked] = useState({ petname: true, breed: true });\n\n  // 유효성 검사 로직\n  const checkInform = (e) => {\n    if (e.target.name === 'petname') {\n      setChecked({ ...checked, petname: true });\n      if (e.target.value.length > 18 || e.target.value.length === 0) {\n        setChecked({ ...checked, petname: false });\n        setPetnameCaution(\n          '펫네임은 최소 1글자 이상 18글자 이하로 작성해주세요',\n        );\n      }\n      setPetname(e.target.value);\n    } else if (e.target.name === 'breed') {\n      setChecked({ ...checked, breed: true });\n      if (e.target.value.length > 18 || e.target.value.length === 0) {\n        setChecked({ ...checked, breed: false });\n        setBreedCaution('품종은 최소 1글자 이상 18글자 이하로 작성해주세요');\n      }\n      setBreed(e.target.value);\n    }\n  };\n\n  // 실제 펫네임을 변경하기 위해 서버에 PATCH 요청을 보내는 로직\n  const changePetname = async () => {\n    if (checked.petname) {\n      try {\n        const response = await axios.patch(\n          'https://server.codestates-project.tk/user/petname',\n          {\n            petName,\n          },\n          { withCredentials: true },\n        );\n        if (response.status === 201) {\n          setNowPetName(petName);\n          setPetname(petName);\n          if (kind === 'latest' || kind === 'user') {\n            setProfile({ ...profile, petName });\n          }\n          setUserProfile({ ...userProfile, petName });\n          petnameRef.current.blur();\n        }\n      } catch (err) {\n        // 중복 펫네임 409\n        if (err.response.status === 501) {\n          alert('some errors occur at server, please try again');\n        } else if (err.response.status === 409) {\n          setChecked({ ...checked, petname: false });\n          setPetnameCaution('동일한 닉네임으로의 변경은 불가능합니다');\n        } else {\n          console.log(err);\n        }\n      }\n    }\n  };\n\n  // 실제 품종을 변경하기 위해 서버에 PATCH 요청을 보내는 로직\n  const changeBreed = async () => {\n    if (checked.breed) {\n      try {\n        const response = await axios.patch(\n          'https://server.codestates-project.tk/user/breed',\n          {\n            breed,\n          },\n          { withCredentials: true },\n        );\n        if (response.status === 201) {\n          setNowBreed(breed);\n          setBreed(breed);\n          if (kind === 'latest' || kind === 'user') {\n            setProfile({ ...profile, breed });\n          }\n          setUserProfile({ ...userProfile, breed });\n          breedRef.current.blur();\n        }\n      } catch (err) {\n        if (err.response.status === 501) {\n          alert('some errors occur at server, please try again');\n        } else if (err.response.status === 409) {\n          setChecked({ ...checked, breed: false });\n          setPetnameCaution('동일한 품종으로의 변경은 불가능합니다');\n        }\n      }\n    }\n  };\n\n  const resetAndTurnOffTheModal = () => {\n    setPetname(nowPetName);\n    setBreed(nowBreed);\n    setChecked({ petname: true, breed: true });\n    handleClose();\n  };\n\n  // 회원 탈퇴 모달은 디폴트 모달을 재활용하지 않는 것이기에 따로 state로 관리\n  const [deleteModalOn, setDeleteModalOn] = useState(false);\n  const viewDeleteModal = () => {\n    setDeleteModalOn(!deleteModalOn);\n  };\n\n  useEffect(() => {\n    if (isModalOn === false) {\n      setPetname(nowPetName);\n      setBreed(nowBreed);\n      setChecked({ petname: true, breed: true });\n    }\n  }, [isModalOn]);\n\n  return (\n    <>\n      <DeleteModal isModalOn={deleteModalOn} handleClose={viewDeleteModal} />\n      <Modal isModalOn={isModalOn} handleClose={resetAndTurnOffTheModal}>\n        <div className={styles.MypageModal}>\n          <div className={styles.profile}>\n            <div className={styles.imgPart}>\n              <img src={nowImg} className={styles.profileImg} alt=\"profile\" />\n            </div>\n            <div className={styles.informPart}>\n              <div className={styles.title}>프로필 사진</div>\n              <input\n                id=\"profileImgInput\"\n                type=\"file\"\n                className={styles.profileImgInput}\n                onChange={changeProfile}\n              />\n              <label htmlFor=\"profileImgInput\">\n                <div className={styles.editButton}>Edit Picture</div>\n              </label>\n            </div>\n          </div>\n          <div className={styles.editPart}>\n            <div className={styles.petnameEdit}>\n              <div className={styles.petnameTitle}>\n                <img className={styles.logoImg} src={logoImg} alt=\"logo\" />\n                Pet Name\n              </div>\n              <div className={styles.petnameEditPart}>\n                <input\n                  ref={petnameRef}\n                  className={styles.myPageInput}\n                  spellCheck={false}\n                  onChange={checkInform}\n                  value={petName}\n                  name=\"petname\"\n                />\n                <button\n                  className={`${styles.informEditButton} ${\n                    checked.petname && styles.isOn\n                  }`}\n                  type=\"button\"\n                  onClick={changePetname}\n                >\n                  Edit\n                </button>\n              </div>\n              {checked.petname ? null : (\n                <div className={styles.caution}>{petnameCaution}</div>\n              )}\n            </div>\n            <div className={styles.breedEdit}>\n              <div className={styles.breedTitle}>\n                <img className={styles.logoImg} src={logoImg} alt=\"logo\" />\n                Breed\n              </div>\n              <div className={styles.breedEditPart}>\n                <input\n                  ref={breedRef}\n                  className={styles.myPageInput}\n                  spellCheck={false}\n                  name=\"breed\"\n                  value={breed}\n                  onChange={checkInform}\n                />\n                <button\n                  className={`${styles.informEditButton} ${\n                    checked.breed && styles.isOn\n                  }`}\n                  type=\"button\"\n                  onClick={changeBreed}\n                >\n                  Edit\n                </button>\n              </div>\n              {checked.breed ? null : (\n                <div className={styles.caution}>{breedCaution}</div>\n              )}\n            </div>\n            <div className={styles.deleteEdit}>\n              <div className={styles.deleteTitle}>\n                <img className={styles.logoImg} src={logoImg} alt=\"logo\" />\n                Delete Account\n              </div>\n              <button\n                id={styles.deleteButton}\n                className={styles.deleteEditButton}\n                type=\"button\"\n                onClick={viewDeleteModal}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n      <CropModal\n        setProfile={setProfile}\n        profile={profile}\n        userProfile={userProfile}\n        kind={kind}\n        setUserProfile={setUserProfile}\n        setNowImg={setNowImg}\n        imgSrc={imgSrc}\n        setImgSrc={setImgSrc}\n        isModalOn={cropModalOn}\n        handleClose={handleCropModalOn}\n      />\n    </>\n  );\n};\n\nexport default MypageModal;\n",["154","155","156","157"],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/PostModal/PostModal.jsx",["158","159","160","161","162","163","164","165","166","167","168","169","170","171"],"/* eslint-disable radix */\n/* eslint-disable no-nested-ternary */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './PostModal.module.css';\nimport ImageSlide from '../ImageSlide/ImageSlide';\nimport close from '../../images/close.png';\nimport Comments from '../Comments/Comments';\nimport likeImg from '../../images/fulfilledHeart.png';\nimport unLikeImg from '../../images/unfulfilledHeart.png';\nimport updateBtn from '../../images/updateBtn.png';\nimport PostDeleteModal from '../PostDeleteModal/PostDeleteModal';\nimport chatBtn from '../../images/chat.png';\n\nconst PostModal = ({\n  kind,\n  setProfileForDeleteAndAdd,\n  setUserProfile,\n  userProfileId,\n  setPostModalData,\n  refreshPost,\n  getPosts,\n  getUserData,\n  postData,\n  isModalOn,\n  handleClose,\n  deletePost,\n}) => {\n  // state lists\n  const [today, setToday] = useState(null);\n  const [hasRights, setHasRights] = useState(false);\n  const history = useHistory();\n  const userInform = postData.user;\n  const postDatas = postData.post;\n  const commentsInform = postData.comments;\n  const commentInputRef = useRef(null);\n  const textRef = useRef(null);\n  const [commentToggle, setCommentToggle] = useState(false);\n  const [updateBtnToggle, setUpdateBtnToggle] = useState(false);\n  const [textUpdateToggled, setTextUpdateToggled] = useState(false);\n  const [isDeleteOn, setIsDeleteOn] = useState(false);\n  const [textVal, setTextVal] = useState(null);\n  const [whichComment, setWhichComment] = useState('comment');\n  const [commentToWhom, setCommentToWhom] = useState(null);\n  const [comment, setComment] = useState(null);\n  const [commentId, setCommentId] = useState(null);\n\n  // postModal 창 닫을 때 전부다 디폴트로 돌리는고 꺼주는 세팅\n  // ################################################\n  const makePostDefaultSetting = () => {\n    setIsDeleteOn(false);\n    handleClose();\n  };\n  // ################################################\n\n  // 좋아요 버튼 눌렀을 때 처리 logic\n  // ################################################\n  const handleLike = async () => {\n    try {\n      const response = await axios.post(\n        'https://server.codestates-project.tk/post/togglelike',\n        {\n          postId: postDatas.postId,\n          likeChecked: !postDatas.likeChecked,\n        },\n        {\n          withCredentials: true,\n        },\n      );\n\n      setPostModalData({\n        ...postData,\n        post: {\n          ...postData.post,\n          likeChecked: !postData.post.likeChecked,\n          likeCount: postData.post.likeCount + Number(response.data),\n        },\n      });\n    } catch (err) {\n      if (err.response.status === 401) {\n        history.push('/');\n      } else {\n        alert('sorry server got some errors please try again');\n      }\n    }\n  };\n  // ################################################\n\n  // ################################################\n  // 답글 달기 버튼 눌렀을 때 처리 logic\n  const handleCommentBtn = async () => {\n    await setWhichComment('subComment');\n    commentInputRef.current.focus();\n  };\n  // ################################################\n  // 포스트 제거 버튼을 눌렀을 때 나오는 모달창 on off logic\n  const closeDeleteModal = async (deleted) => {\n    if (isDeleteOn && deleted) {\n      // 만약 모달창이 켜져있는데, 삭제가 이미 이루어졌다면, 삭제 모달창과 postModal 창 둘다 끄기\n      await setIsDeleteOn(false);\n      handleClose();\n    } else if (isDeleteOn) {\n      // 삭제는 안됐고, 모달창만 켜져있다면, 삭제 모달창만 끄기\n      await setIsDeleteOn(false);\n    } else {\n      // 모달창이 켜져있지 않다면 켜기\n      await setIsDeleteOn(true);\n    }\n  };\n  // ################################################\n\n  // ################################################\n  // 특정 유저 프로필 + 그에 따른 grid 데이터 불러오기(댓글 및 대댓글 창의 프로필을 클릭했을 때에도 이 function을 씀)\n  const getSpecificUser = async (id) => {\n    getPosts(id);\n    getUserData(id);\n    handleClose();\n  };\n  // ################################################\n\n  const checkEnterPress = (e) => {\n    if (e.keyCode === 13) {\n      updatePost();\n    }\n  };\n  const sendComment = (e) => {\n    if (e.keyCode === 13) {\n      commentInputRef.current.blur();\n    }\n  };\n  const clickPostCommentBtn = () => {\n    commentInputRef.current.blur();\n  };\n  // 포스트 수정\n  const updatePost = async () => {\n    if (textUpdateToggled === true) {\n      setTextUpdateToggled(false);\n      setUpdateBtnToggle(false);\n      try {\n        await axios.patch(\n          `https://server.codestates-project.tk/post`,\n          {\n            postId: postDatas.postId,\n            text: textVal,\n          },\n          { withCredentials: true },\n        );\n        setPostModalData((prev) => {\n          return { ...prev, post: { ...prev.post, text: textVal } };\n        });\n        await setTextUpdateToggled(false);\n        setUpdateBtnToggle(false);\n      } catch (err) {\n        if (err.response.status === 401) {\n          history.push('/');\n        } else if (err.response.status === 400) {\n          alert('포스팅 내용을 반드시 입력해주세요');\n        } else {\n          alert('sorry server got some errors please try again');\n        }\n      }\n    } else {\n      setTextVal(postDatas.text);\n      await setTextUpdateToggled(true);\n      textRef.current.focus();\n    }\n  };\n\n  // 코멘트 남기기\n  const postComment = async () => {\n    if (whichComment === 'comment') {\n      try {\n        const response = await axios.post(\n          'https://server.codestates-project.tk/post/comment',\n          {\n            postId: postDatas.postId,\n            text: comment,\n          },\n          {\n            withCredentials: true,\n          },\n        );\n        commentInputRef.current.value = null;\n        refreshPost(response.data.comments);\n      } catch (err) {\n        if (err.response.status === 401) {\n          history.push('/');\n        } else {\n          alert('sorry server got some errors please try again');\n        }\n      }\n    } else if (whichComment === 'subComment') {\n      try {\n        const response = await axios.post(\n          'https://server.codestates-project.tk/post/reply',\n          {\n            postId: postDatas.postId,\n            commentId,\n            text: comment,\n          },\n          {\n            withCredentials: true,\n          },\n        );\n        commentInputRef.current.value = null;\n        setWhichComment('comment');\n        refreshPost(response.data.comments);\n      } catch (err) {\n        if (err.response.status === 401) {\n          history.push('/');\n        } else {\n          alert('sorry server got some errors please try again');\n        }\n      }\n    }\n  };\n\n  // 코멘트 삭제\n  const deleteComment = async (id) => {\n    try {\n      const response = await axios.delete(\n        'https://server.codestates-project.tk/post/comment',\n        {\n          data: {\n            postId: postDatas.postId,\n            commentId: id,\n          },\n          withCredentials: true,\n        },\n      );\n      refreshPost(response.data.comments);\n    } catch (err) {\n      if (err.response.status === 401) {\n        history.push('/');\n      } else {\n        alert('sorry server got some errors please try again');\n      }\n    }\n  };\n\n  const DMchat = () => {\n    console.log('DM 보내기');\n    console.log(userProfileId);\n    console.log(userInform.userId);\n\n    const idData = {\n      myId: userProfileId,\n    };\n    const config = {\n      method: 'post',\n      url: `https://chat.codestates-project.tk/room/private/${userInform.userId}`,\n      data: idData,\n      withCredentials: true,\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response);\n        setIsDeleteOn(false);\n        handleClose();\n        history.push('/chat');\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const getDateType = () => {\n    const date = new Date(postDatas.time);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const dates = date.getDate();\n    let day = date.getDay();\n    if (day === 1) day = '월';\n    if (day === 2) day = '화';\n    if (day === 3) day = '수';\n    if (day === 4) day = '목';\n    if (day === 5) day = '금';\n    if (day === 6) day = '토';\n    if (day === 0) day = '일';\n    const dateForm = `${year}/${month}/${dates} (${day})`;\n    return dateForm;\n  };\n\n  const DMdefault = () => {\n    setIsDeleteOn(false);\n    handleClose();\n  };\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(max-width: 65rem)');\n    if (mediaQuery.matches) {\n      setCommentToggle(false);\n    } else {\n      setCommentToggle(true);\n    }\n    setToday(getDateType());\n  }, []);\n\n  // 포스팅에 대한 수정권한이 있는지에 대한 설정\n  useEffect(() => {\n    if (userInform.userId === userProfileId) {\n      setHasRights(true);\n    }\n  }, [userProfileId, userInform]);\n\n  return (\n    <>\n      <PostDeleteModal\n        kind={kind}\n        setProfileForDeleteAndAdd={setProfileForDeleteAndAdd}\n        setUserProfile={setUserProfile}\n        postId={postDatas.postId}\n        deletePost={deletePost}\n        isModalOn={isDeleteOn}\n        handleClose={closeDeleteModal}\n      />\n      <div className={`${styles.modal} ${isModalOn && styles.isOn}`}>\n        <div className={styles.box}>\n          <img\n            className={styles.close}\n            src={close}\n            alt=\"close\"\n            onClick={makePostDefaultSetting}\n          />\n          <div className={styles.postModal}>\n            <ImageSlide\n              imageUrls={[\n                postDatas.picture_1,\n                postDatas.picture_2,\n                postDatas.picture_3,\n              ]}\n            />\n            <div className={styles.contents}>\n              <div\n                className={styles.userArea}\n                onClick={() => {\n                  getSpecificUser(userInform.userId);\n                }}\n              >\n                <div className={styles.profile_imgage}>\n                  <img\n                    className={styles.profile_image_img}\n                    src={userInform.thumbnail}\n                    alt=\"profile\"\n                  />\n                </div>\n                <div className={styles.profile_inform}>\n                  <div className={styles.nickname}>{userInform.petName}</div>\n                  <div className={styles.breed}>{userInform.breed}</div>\n                </div>\n                {hasRights ? (\n                  updateBtnToggle ? (\n                    <div className={styles.updateBtns}>\n                      <img\n                        className={styles.closeUpdateBtn}\n                        src={updateBtn}\n                        alt=\"updateBtn\"\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          setTextUpdateToggled(false);\n                          setUpdateBtnToggle(false);\n                        }}\n                      />\n                      <i\n                        className=\"far fa-edit\"\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          updatePost();\n                        }}\n                      />\n                      <i\n                        className=\"fas fa-trash-alt\"\n                        id={styles.deleteBtn}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          closeDeleteModal();\n                        }}\n                      />\n                    </div>\n                  ) : (\n                    <img\n                      className={styles.updateBtn}\n                      src={updateBtn}\n                      alt=\"updateBtn\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        setUpdateBtnToggle(true);\n                      }}\n                    />\n                  )\n                ) : null}\n              </div>\n              {textUpdateToggled ? (\n                <textarea\n                  onKeyDown={checkEnterPress}\n                  ref={textRef}\n                  spellCheck={false}\n                  className={styles.updateText}\n                  value={textVal}\n                  onChange={(e) => {\n                    setTextVal(e.target.value);\n                  }}\n                />\n              ) : (\n                <div className={styles.textArea}>{postDatas.text}</div>\n              )}\n\n              <div className={styles.date}>{today}</div>\n              <div className={styles.buttonArea}>\n                {postDatas.likeChecked ? (\n                  <img\n                    className={styles.like}\n                    src={likeImg}\n                    alt=\"like\"\n                    onClick={handleLike}\n                  />\n                ) : (\n                  <img\n                    className={styles.unLike}\n                    src={unLikeImg}\n                    alt=\"unlike\"\n                    onClick={handleLike}\n                  />\n                )}\n                <img\n                  className={styles.chatBtn}\n                  src={chatBtn}\n                  alt=\"chat button\"\n                  onClick={DMchat}\n                />\n                <div className={styles.likeCount}>\n                  {`좋아요 ${postDatas.likeCount}개`}\n                </div>\n              </div>\n              {commentToggle ? (\n                <>\n                  <div\n                    className={styles.commentFolder}\n                    onClick={() => {\n                      setCommentToggle(false);\n                    }}\n                  >\n                    댓글 접기\n                  </div>\n                  <Comments\n                    userProfileId={userProfileId}\n                    getSpecificUser={getSpecificUser}\n                    setCommentId={setCommentId}\n                    setCommentToWhom={setCommentToWhom}\n                    setWhichComment={setWhichComment}\n                    postComment={postComment}\n                    postId={postDatas.postId}\n                    refreshPost={refreshPost}\n                    deleteComment={deleteComment}\n                    commentsInform={commentsInform}\n                    handleCommentBtn={handleCommentBtn}\n                    DMdefault={DMdefault}\n                  />\n                </>\n              ) : (\n                <div\n                  onClick={() => {\n                    setCommentToggle(true);\n                  }}\n                  className={styles.commentFolder}\n                >\n                  댓글 펼치기...\n                </div>\n              )}\n              <div className={styles.inputPart}>\n                <input\n                  onBlur={postComment}\n                  onKeyDown={sendComment}\n                  onChange={(e) => {\n                    setComment(e.target.value);\n                  }}\n                  ref={commentInputRef}\n                  className={styles.commentInput}\n                  spellCheck=\"false\"\n                  type=\"text\"\n                  placeholder=\"댓글 달기..\u001c\"\n                />\n                {whichComment === 'subComment' ? (\n                  <div\n                    className={styles.subCommentMessage}\n                    onClick={() => {\n                      setWhichComment('comment');\n                    }}\n                  >\n                    <span\n                      style={{\n                        fontWeight: 'bold',\n                        fontFamily: 'bazzi',\n                        fontSize: '1.2rem',\n                      }}\n                    >\n                      {commentToWhom}\n                    </span>\n                    님께 답글 달기 취소\n                  </div>\n                ) : null}\n                <span\n                  onClick={clickPostCommentBtn}\n                  className={styles.commentBtn}\n                >\n                  게시\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PostModal;\n","/Users/user/Desktop/final-project/zootopia_client/client/src/components/AddroomModal/AddroomModal.jsx",["172","173","174","175","176","177","178"],"import React, { useState, createRef } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport styles from './AddroomModal.module.css';\nimport close from '../../images/close.png';\nimport submitImg from '../../images/create.png';\nimport backImg from '../../images/movingAni2.gif';\n\nconst socket = io('https://chat.codestates-project.tk/', {\n  withCredentials: true,\n});\n\nconst AddroomModal = ({ isModalOn, handleClose, myId }) => {\n  const [titleInfo, setTitleInfo] = useState('');\n  const [checked, setChecked] = useState({ title: true });\n\n  const checkTitle = (e) => {\n    setChecked({ title: true });\n    if (e.target.value.length > 18 || e.target.value.length === 0) {\n      setChecked({ title: false });\n    }\n    setTitleInfo(e.target.value);\n    console.log(titleInfo);\n  };\n\n  const sendRoom = () => {\n    console.log('보내기 실행!');\n    if (checked.title) {\n      const titleData = {\n        title: `${titleInfo}`,\n      };\n      const config = {\n        method: 'post',\n        url: `https://chat.codestates-project.tk/room/public/${myId}`,\n        data: titleData,\n        withCredentials: true,\n      };\n\n      console.log(config);\n      axios(config)\n        .then(function (response) {\n          console.log(JSON.stringify(response.data));\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  };\n\n  return (\n    <>\n      <div className={`${styles.modal} ${isModalOn && styles.isOn}`}>\n        <div className={styles.box}>\n          <img\n            className={styles.close}\n            src={close}\n            alt=\"close\"\n            onClick={handleClose}\n          />\n          <div className={styles.title}>공개 채팅방 만들기</div>\n          <ls className={styles.list}>\n            참가인원이 아무도 없으면 채팅방은 자동 삭제됩니다.\n          </ls>\n          <ls className={styles.list}>\n            한번 나간 채팅방은 다시 들어갈 수 없으니 주의해주세요.\n          </ls>\n          <ls className={styles.list}>\n            다른 동물들을 위해서 `애니멀 에티켓`을 지켜주세요.\n          </ls>\n          <input\n            className={styles.roomInput}\n            type=\"text\"\n            placeholder=\"채팅방의 제목을 정해주세요..\"\n            onChange={checkTitle}\n          />\n          <img\n            className={styles.submit}\n            src={submitImg}\n            onClick={sendRoom}\n            alt=\"submit\"\n          />\n          {/* ** */}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddroomModal;\n","/Users/user/Desktop/final-project/zootopia_client/client/src/components/PrivateChat/PrivateChat.jsx",["179","180","181","182","183","184","185","186","187","188","189","190","191","192"],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/Comment/Comment.jsx",["193","194","195","196","197","198","199","200","201","202"],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/SubComments/SubComments.jsx",[],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/Comments/Comments.jsx",[],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/UserChat/UserChat.jsx",["203","204","205","206"],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/MyChat/MyChat.jsx",[],"/Users/user/Desktop/final-project/zootopia_client/client/src/index.js",[],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/PostNewFormModal/PostNewFormModal.jsx",["207","208"],"import { createRef, React, useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './PostNewFormModal.module.css';\nimport close from '../../images/close.png';\nimport PostCropModal from '../PostCropModal/PostCropModal';\n\nconst PostNewFormModal = ({\n  setProfileForDeleteAndAdd,\n  setUserProfile,\n  postsKind,\n  setPosts,\n  isModalOn,\n  handleClose,\n}) => {\n  const history = useHistory();\n\n  // states lists\n  // ###################################################\n  const textAreaRef = useRef(null);\n  const [isCropModalOn, setIsCropModalOn] = useState(false);\n  const [inputNum, setInputNum] = useState(null);\n  const [checked, setChecked] = useState(false);\n  const [imgChecked, setImgChecked] = useState(false);\n  const [imgSrc, setImgSrc] = useState(null);\n  const [imgSrcs, setImgSrcs] = useState({ 1: '+', 2: '+', 3: '+' });\n  // ###################################################\n\n  // functions lists\n  // 1) Crop을 위한 cropModal이 popup되도록 하는 (혹은 닫는) 함수\n  const handleCropModal = () => {\n    setIsCropModalOn(!isCropModalOn);\n  };\n\n  // 2) 이미지 input을 받아서 state에 추가하는 로직\n  const setImgSrcsFunc = (inputNumber, urlSrc) => {\n    if (inputNumber === 1) {\n      setImgSrcs({ ...imgSrcs, 1: urlSrc });\n    } else if (inputNumber === 2) {\n      setImgSrcs({ ...imgSrcs, 2: urlSrc });\n    } else if (inputNumber === 3) {\n      setImgSrcs({ ...imgSrcs, 3: urlSrc });\n    }\n  };\n\n  // 3) 이미지 input 의 onChange  event를 구성하는 로직\n  const imgOnChange = (e) => {\n    setImgChecked(false);\n    try {\n      const urlSrc = URL.createObjectURL(e.target.files[0]);\n      if (e.target.name === 'imgInput1') {\n        setInputNum(1);\n        setImgSrc(urlSrc);\n        handleCropModal();\n      } else if (e.target.name === 'imgInput2') {\n        setInputNum(2);\n        setImgSrc(urlSrc);\n        handleCropModal();\n      } else if (e.target.name === 'imgInput3') {\n        setInputNum(3);\n        setImgSrc(urlSrc);\n        handleCropModal();\n      }\n    } catch (err) {\n      alert('we only accept image files');\n    }\n  };\n\n  // 4) 작성 도중 혹은 작성 완료 후에 모달창이 꺼질때 인풋을 리셋하는 로직\n  const resetAndCloseModal = () => {\n    setImgSrcs({ 1: '+', 2: '+', 3: '+' });\n    setChecked(false);\n    setImgChecked(false);\n    textAreaRef.current.value = null;\n    handleClose();\n  };\n\n  // 5) 새로 포스팅을 작성하는 로직\n  // 받아놓은 이미지 input을 바탕으로 파일 포맷 설정을 거친 뒤에\n  // FormData에 넣어서 post\n  const sendNewPost = async () => {\n    if (textAreaRef.current.value.trim().length === 0) {\n      setChecked(true);\n    } else {\n      const formData = new FormData();\n      const dataArr = [];\n      for (const el of Object.values(imgSrcs)) {\n        if (el !== '+') {\n          const encodeData = el.replace('data:image/png;base64,', '');\n          const decodImg = atob(encodeData);\n          const array = [];\n          for (let i = 0; i < decodImg.length; i += 1) {\n            array.push(decodImg.charCodeAt(i));\n          }\n          const file = new Blob([new Uint8Array(array)], { type: 'image/png' });\n          dataArr.push(file);\n        }\n      }\n      let image1;\n      if (dataArr[0]) {\n        // eslint-disable-next-line prefer-destructuring\n        image1 = dataArr[0];\n      } else {\n        setImgChecked(true);\n        return null;\n      }\n      const image2 = dataArr[1] ? dataArr[1] : null;\n      const image3 = dataArr[2] ? dataArr[2] : null;\n\n      const fileName = 'canvas_img_'.concat(\n        new Date().getMilliseconds(),\n        '.png',\n      );\n\n      if (image1) formData.append('image1', image1, fileName);\n      if (image2) formData.append('image2', image2, fileName);\n      if (image3) formData.append('image3', image3, fileName);\n      formData.append('text', textAreaRef.current.value);\n      try {\n        const response = await axios({\n          method: 'post',\n          url: 'https://server.codestates-project.tk/post',\n          data: formData,\n          headers: {\n            'Content-Type': `multipart/form-data`,\n          },\n          withCredentials: true,\n        });\n        setUserProfile((prev) => {\n          return { ...prev, postCount: prev.postCount + 1 };\n        });\n        if (postsKind === 'latest' || postsKind === 'user') {\n          setPosts((prev) => {\n            const copyArr = prev.postData.slice();\n            copyArr.unshift(response.data);\n            return { ...prev, postData: copyArr };\n          });\n          setProfileForDeleteAndAdd((prev) => {\n            return { ...prev, postCount: prev.postCount + 1 };\n          });\n        }\n        resetAndCloseModal();\n      } catch (err) {\n        if (err.response) {\n          if (err.response.status === 401) {\n            history.push('/');\n          }\n        } else {\n          alert('sorry, server got an error. please try again');\n        }\n      }\n    }\n  };\n\n  return (\n    <>\n      <PostCropModal\n        setImgSrcs={setImgSrcsFunc}\n        inputNum={inputNum}\n        setImgSrc={setImgSrc}\n        imgSrc={imgSrc}\n        isModalOn={isCropModalOn}\n        handleClose={handleCropModal}\n      />\n      <div className={`${styles.modal} ${isModalOn && styles.isOn}`}>\n        <div className={styles.box}>\n          <img\n            className={styles.close}\n            src={close}\n            alt=\"close\"\n            onClick={resetAndCloseModal}\n          />\n          <div className={styles.postNewFormModal}>\n            <div className={styles.imgInputPart}>\n              <input\n                className={styles.imgInput}\n                type=\"file\"\n                accept=\"image/gif, image/jpeg, image/png\"\n                name=\"imgInput1\"\n                id=\"imgInput1\"\n                onChange={imgOnChange}\n              />\n              <input\n                className={styles.imgInput}\n                type=\"file\"\n                accept=\"image/gif, image/jpeg, image/png\"\n                name=\"imgInput2\"\n                id=\"imgInput2\"\n                onChange={imgOnChange}\n              />\n              <input\n                className={styles.imgInput}\n                type=\"file\"\n                accept=\"image/gif, image/jpeg, image/png\"\n                name=\"imgInput3\"\n                id=\"imgInput3\"\n                onChange={imgOnChange}\n              />\n              <label className={styles.labels} htmlFor=\"imgInput1\">\n                {imgSrcs[1] === '+' ? (\n                  '+'\n                ) : (\n                  <img\n                    className={styles.uploadedImg}\n                    src={imgSrcs[1]}\n                    alt=\"upload img\"\n                  />\n                )}\n              </label>\n              <label className={styles.labels} htmlFor=\"imgInput2\">\n                {imgSrcs[2] === '+' ? (\n                  '+'\n                ) : (\n                  <img\n                    className={styles.uploadedImg}\n                    src={imgSrcs[2]}\n                    alt=\"upload img\"\n                  />\n                )}\n              </label>\n              <label className={styles.labels} htmlFor=\"imgInput3\">\n                {imgSrcs[3] === '+' ? (\n                  '+'\n                ) : (\n                  <img\n                    className={styles.uploadedImg}\n                    src={imgSrcs[3]}\n                    alt=\"upload img\"\n                  />\n                )}\n              </label>\n            </div>\n            {imgChecked && (\n              <div className={styles.imgCheck}>\n                하나 이상의 이미지를 업로드 해주세요\n              </div>\n            )}\n            <div className={styles.textInputPart}>\n              <textarea\n                onKeyDown={() => {\n                  setChecked(false);\n                }}\n                ref={textAreaRef}\n                placeholder=\"내용을 입력해주세요\"\n                spellCheck={false}\n                className={`${styles.textInput} ${checked && styles.isOn}`}\n              />\n            </div>\n            <div className={styles.btnInputPart}>\n              <button\n                className={styles.barkBtn}\n                type=\"button\"\n                onClick={sendNewPost}\n              >\n                Bark\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PostNewFormModal;\n","/Users/user/Desktop/final-project/zootopia_client/client/src/components/ChatUser/ChatUser.jsx",["209","210","211","212","213","214","215","216","217","218","219","220","221"],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/Post/Post.jsx",[],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/ImageSlide/ImageSlide.jsx",[],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/Nav/Nav.jsx",["222"],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/Posts/Posts.jsx",["223"],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/DeleteModal/DeleteModal.jsx",["224"],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/CropModal/CropModal.jsx",[],"/Users/user/Desktop/final-project/zootopia_client/client/src/pages/LandingPage/LandingPage.jsx",["225","226","227","228","229","230"],{"ruleId":"231","severity":1,"message":"232","line":36,"column":6,"nodeType":"233","endLine":36,"endColumn":8,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":89,"column":11,"nodeType":"237","messageId":"238","endLine":89,"endColumn":65},{"ruleId":"239","severity":1,"message":"240","line":20,"column":3,"nodeType":"241","messageId":"238","endLine":20,"endColumn":14},{"ruleId":"242","severity":1,"message":"243","line":55,"column":23,"nodeType":"244","messageId":"245","endLine":55,"endColumn":32},{"ruleId":"239","severity":1,"message":"240","line":56,"column":5,"nodeType":"241","messageId":"238","endLine":56,"endColumn":16},{"ruleId":"242","severity":1,"message":"246","line":80,"column":20,"nodeType":"244","messageId":"245","endLine":80,"endColumn":35},{"ruleId":"239","severity":1,"message":"240","line":92,"column":7,"nodeType":"241","messageId":"238","endLine":92,"endColumn":18},{"ruleId":"239","severity":1,"message":"240","line":96,"column":7,"nodeType":"241","messageId":"238","endLine":96,"endColumn":18},{"ruleId":"242","severity":1,"message":"246","line":101,"column":23,"nodeType":"244","messageId":"245","endLine":101,"endColumn":38},{"ruleId":"239","severity":1,"message":"240","line":111,"column":7,"nodeType":"241","messageId":"238","endLine":111,"endColumn":18},{"ruleId":"242","severity":1,"message":"243","line":123,"column":13,"nodeType":"244","messageId":"245","endLine":123,"endColumn":22},{"ruleId":"239","severity":1,"message":"240","line":124,"column":9,"nodeType":"241","messageId":"238","endLine":124,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":127,"column":14,"nodeType":"244","messageId":"245","endLine":127,"endColumn":23},{"ruleId":"239","severity":1,"message":"240","line":128,"column":9,"nodeType":"241","messageId":"238","endLine":128,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":182,"column":23,"nodeType":"244","messageId":"245","endLine":182,"endColumn":32},{"ruleId":"242","severity":1,"message":"243","line":204,"column":15,"nodeType":"244","messageId":"245","endLine":204,"endColumn":24},{"ruleId":"239","severity":1,"message":"240","line":205,"column":11,"nodeType":"241","messageId":"238","endLine":205,"endColumn":22},{"ruleId":"242","severity":1,"message":"243","line":208,"column":16,"nodeType":"244","messageId":"245","endLine":208,"endColumn":25},{"ruleId":"239","severity":1,"message":"240","line":209,"column":11,"nodeType":"241","messageId":"238","endLine":209,"endColumn":22},{"ruleId":"242","severity":1,"message":"243","line":214,"column":21,"nodeType":"244","messageId":"245","endLine":214,"endColumn":30},{"ruleId":"242","severity":1,"message":"243","line":227,"column":13,"nodeType":"244","messageId":"245","endLine":227,"endColumn":22},{"ruleId":"239","severity":1,"message":"240","line":228,"column":9,"nodeType":"241","messageId":"238","endLine":228,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":231,"column":14,"nodeType":"244","messageId":"245","endLine":231,"endColumn":23},{"ruleId":"239","severity":1,"message":"240","line":232,"column":9,"nodeType":"241","messageId":"238","endLine":232,"endColumn":20},{"ruleId":"231","severity":1,"message":"247","line":248,"column":6,"nodeType":"233","endLine":248,"endColumn":8,"suggestions":"248"},{"ruleId":"242","severity":1,"message":"243","line":251,"column":28,"nodeType":"244","messageId":"245","endLine":251,"endColumn":37},{"ruleId":"239","severity":1,"message":"240","line":252,"column":7,"nodeType":"241","messageId":"238","endLine":252,"endColumn":18},{"ruleId":"231","severity":1,"message":"249","line":267,"column":6,"nodeType":"233","endLine":267,"endColumn":17,"suggestions":"250"},{"ruleId":"242","severity":1,"message":"243","line":271,"column":29,"nodeType":"244","messageId":"245","endLine":271,"endColumn":38},{"ruleId":"239","severity":1,"message":"240","line":272,"column":7,"nodeType":"241","messageId":"238","endLine":272,"endColumn":18},{"ruleId":"239","severity":1,"message":"240","line":277,"column":5,"nodeType":"241","messageId":"238","endLine":277,"endColumn":16},{"ruleId":"231","severity":1,"message":"251","line":279,"column":6,"nodeType":"233","endLine":279,"endColumn":20,"suggestions":"252"},{"ruleId":"242","severity":1,"message":"243","line":282,"column":29,"nodeType":"244","messageId":"245","endLine":282,"endColumn":38},{"ruleId":"239","severity":1,"message":"240","line":287,"column":9,"nodeType":"241","messageId":"238","endLine":287,"endColumn":20},{"ruleId":"231","severity":1,"message":"253","line":308,"column":6,"nodeType":"233","endLine":308,"endColumn":16,"suggestions":"254"},{"ruleId":"239","severity":1,"message":"240","line":311,"column":3,"nodeType":"241","messageId":"238","endLine":311,"endColumn":14},{"ruleId":"235","severity":1,"message":"236","line":94,"column":9,"nodeType":"237","messageId":"238","endLine":94,"endColumn":63},{"ruleId":"235","severity":1,"message":"236","line":136,"column":9,"nodeType":"237","messageId":"238","endLine":136,"endColumn":63},{"ruleId":"235","severity":1,"message":"236","line":158,"column":9,"nodeType":"237","messageId":"238","endLine":158,"endColumn":63},{"ruleId":"235","severity":1,"message":"236","line":53,"column":9,"nodeType":"237","messageId":"238","endLine":53,"endColumn":63},{"ruleId":"235","severity":1,"message":"236","line":76,"column":11,"nodeType":"237","messageId":"238","endLine":76,"endColumn":38},{"ruleId":"235","severity":1,"message":"236","line":78,"column":11,"nodeType":"237","messageId":"238","endLine":78,"endColumn":65},{"ruleId":"239","severity":1,"message":"240","line":97,"column":5,"nodeType":"241","messageId":"238","endLine":97,"endColumn":16},{"ruleId":"239","severity":1,"message":"240","line":98,"column":5,"nodeType":"241","messageId":"238","endLine":98,"endColumn":16},{"ruleId":"239","severity":1,"message":"240","line":99,"column":5,"nodeType":"241","messageId":"238","endLine":99,"endColumn":16},{"ruleId":"242","severity":1,"message":"243","line":112,"column":13,"nodeType":"244","messageId":"245","endLine":112,"endColumn":22},{"ruleId":"239","severity":1,"message":"240","line":113,"column":9,"nodeType":"241","messageId":"238","endLine":113,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":117,"column":14,"nodeType":"244","messageId":"245","endLine":117,"endColumn":23},{"ruleId":"239","severity":1,"message":"240","line":118,"column":9,"nodeType":"241","messageId":"238","endLine":118,"endColumn":20},{"ruleId":"231","severity":1,"message":"255","line":143,"column":3,"nodeType":"256","endLine":143,"endColumn":12,"suggestions":"257"},{"ruleId":"235","severity":1,"message":"236","line":99,"column":11,"nodeType":"237","messageId":"238","endLine":99,"endColumn":65},{"ruleId":"239","severity":1,"message":"240","line":104,"column":11,"nodeType":"241","messageId":"238","endLine":104,"endColumn":22},{"ruleId":"235","severity":1,"message":"236","line":132,"column":11,"nodeType":"237","messageId":"238","endLine":132,"endColumn":65},{"ruleId":"231","severity":1,"message":"258","line":160,"column":6,"nodeType":"233","endLine":160,"endColumn":17,"suggestions":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"235","severity":1,"message":"236","line":84,"column":9,"nodeType":"237","messageId":"238","endLine":84,"endColumn":63},{"ruleId":"235","severity":1,"message":"236","line":158,"column":11,"nodeType":"237","messageId":"238","endLine":158,"endColumn":38},{"ruleId":"235","severity":1,"message":"236","line":160,"column":11,"nodeType":"237","messageId":"238","endLine":160,"endColumn":65},{"ruleId":"235","severity":1,"message":"236","line":190,"column":11,"nodeType":"237","messageId":"238","endLine":190,"endColumn":65},{"ruleId":"235","severity":1,"message":"236","line":213,"column":11,"nodeType":"237","messageId":"238","endLine":213,"endColumn":65},{"ruleId":"235","severity":1,"message":"236","line":237,"column":9,"nodeType":"237","messageId":"238","endLine":237,"endColumn":63},{"ruleId":"239","severity":1,"message":"240","line":243,"column":5,"nodeType":"241","messageId":"238","endLine":243,"endColumn":16},{"ruleId":"239","severity":1,"message":"240","line":244,"column":5,"nodeType":"241","messageId":"238","endLine":244,"endColumn":16},{"ruleId":"239","severity":1,"message":"240","line":245,"column":5,"nodeType":"241","messageId":"238","endLine":245,"endColumn":16},{"ruleId":"242","severity":1,"message":"243","line":258,"column":13,"nodeType":"244","messageId":"245","endLine":258,"endColumn":22},{"ruleId":"239","severity":1,"message":"240","line":259,"column":9,"nodeType":"241","messageId":"238","endLine":259,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":264,"column":14,"nodeType":"244","messageId":"245","endLine":264,"endColumn":23},{"ruleId":"239","severity":1,"message":"240","line":265,"column":9,"nodeType":"241","messageId":"238","endLine":265,"endColumn":20},{"ruleId":"231","severity":1,"message":"268","line":299,"column":6,"nodeType":"233","endLine":299,"endColumn":8,"suggestions":"269"},{"ruleId":"239","severity":1,"message":"240","line":23,"column":5,"nodeType":"241","messageId":"238","endLine":23,"endColumn":16},{"ruleId":"239","severity":1,"message":"240","line":27,"column":5,"nodeType":"241","messageId":"238","endLine":27,"endColumn":16},{"ruleId":"239","severity":1,"message":"240","line":39,"column":7,"nodeType":"241","messageId":"238","endLine":39,"endColumn":18},{"ruleId":"242","severity":1,"message":"243","line":41,"column":15,"nodeType":"244","messageId":"245","endLine":41,"endColumn":24},{"ruleId":"239","severity":1,"message":"240","line":42,"column":11,"nodeType":"241","messageId":"238","endLine":42,"endColumn":22},{"ruleId":"242","severity":1,"message":"243","line":44,"column":16,"nodeType":"244","messageId":"245","endLine":44,"endColumn":25},{"ruleId":"239","severity":1,"message":"240","line":45,"column":11,"nodeType":"241","messageId":"238","endLine":45,"endColumn":22},{"ruleId":"231","severity":1,"message":"270","line":36,"column":6,"nodeType":"233","endLine":36,"endColumn":16,"suggestions":"271"},{"ruleId":"242","severity":1,"message":"243","line":38,"column":22,"nodeType":"244","messageId":"245","endLine":38,"endColumn":31},{"ruleId":"239","severity":1,"message":"240","line":43,"column":5,"nodeType":"241","messageId":"238","endLine":43,"endColumn":16},{"ruleId":"242","severity":1,"message":"243","line":61,"column":19,"nodeType":"244","messageId":"245","endLine":61,"endColumn":28},{"ruleId":"242","severity":1,"message":"243","line":71,"column":13,"nodeType":"244","messageId":"245","endLine":71,"endColumn":22},{"ruleId":"239","severity":1,"message":"240","line":72,"column":9,"nodeType":"241","messageId":"238","endLine":72,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":76,"column":14,"nodeType":"244","messageId":"245","endLine":76,"endColumn":23},{"ruleId":"239","severity":1,"message":"240","line":77,"column":9,"nodeType":"241","messageId":"238","endLine":77,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":81,"column":22,"nodeType":"244","messageId":"245","endLine":81,"endColumn":31},{"ruleId":"242","severity":1,"message":"243","line":91,"column":13,"nodeType":"244","messageId":"245","endLine":91,"endColumn":22},{"ruleId":"239","severity":1,"message":"240","line":92,"column":9,"nodeType":"241","messageId":"238","endLine":92,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":94,"column":14,"nodeType":"244","messageId":"245","endLine":94,"endColumn":23},{"ruleId":"239","severity":1,"message":"240","line":95,"column":9,"nodeType":"241","messageId":"238","endLine":95,"endColumn":20},{"ruleId":"239","severity":1,"message":"240","line":99,"column":3,"nodeType":"241","messageId":"238","endLine":99,"endColumn":14},{"ruleId":"235","severity":1,"message":"236","line":58,"column":11,"nodeType":"237","messageId":"238","endLine":58,"endColumn":38},{"ruleId":"235","severity":1,"message":"236","line":60,"column":11,"nodeType":"237","messageId":"238","endLine":60,"endColumn":65},{"ruleId":"239","severity":1,"message":"240","line":77,"column":5,"nodeType":"241","messageId":"238","endLine":77,"endColumn":16},{"ruleId":"239","severity":1,"message":"240","line":78,"column":5,"nodeType":"241","messageId":"238","endLine":78,"endColumn":16},{"ruleId":"239","severity":1,"message":"240","line":79,"column":5,"nodeType":"241","messageId":"238","endLine":79,"endColumn":16},{"ruleId":"242","severity":1,"message":"243","line":92,"column":13,"nodeType":"244","messageId":"245","endLine":92,"endColumn":22},{"ruleId":"239","severity":1,"message":"240","line":93,"column":9,"nodeType":"241","messageId":"238","endLine":93,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":97,"column":14,"nodeType":"244","messageId":"245","endLine":97,"endColumn":23},{"ruleId":"239","severity":1,"message":"240","line":98,"column":9,"nodeType":"241","messageId":"238","endLine":98,"endColumn":20},{"ruleId":"231","severity":1,"message":"268","line":132,"column":6,"nodeType":"233","endLine":132,"endColumn":8,"suggestions":"272"},{"ruleId":"239","severity":1,"message":"240","line":40,"column":5,"nodeType":"241","messageId":"238","endLine":40,"endColumn":16},{"ruleId":"231","severity":1,"message":"273","line":46,"column":6,"nodeType":"233","endLine":46,"endColumn":8,"suggestions":"274"},{"ruleId":"239","severity":1,"message":"240","line":48,"column":3,"nodeType":"241","messageId":"238","endLine":48,"endColumn":14},{"ruleId":"239","severity":1,"message":"240","line":49,"column":3,"nodeType":"241","messageId":"238","endLine":49,"endColumn":14},{"ruleId":"235","severity":1,"message":"236","line":65,"column":7,"nodeType":"237","messageId":"238","endLine":65,"endColumn":42},{"ruleId":"235","severity":1,"message":"236","line":149,"column":11,"nodeType":"237","messageId":"238","endLine":149,"endColumn":64},{"ruleId":"231","severity":1,"message":"270","line":32,"column":6,"nodeType":"233","endLine":32,"endColumn":16,"suggestions":"275"},{"ruleId":"242","severity":1,"message":"243","line":34,"column":22,"nodeType":"244","messageId":"245","endLine":34,"endColumn":31},{"ruleId":"239","severity":1,"message":"240","line":39,"column":5,"nodeType":"241","messageId":"238","endLine":39,"endColumn":16},{"ruleId":"242","severity":1,"message":"243","line":43,"column":19,"nodeType":"244","messageId":"245","endLine":43,"endColumn":28},{"ruleId":"242","severity":1,"message":"243","line":53,"column":13,"nodeType":"244","messageId":"245","endLine":53,"endColumn":22},{"ruleId":"239","severity":1,"message":"240","line":54,"column":9,"nodeType":"241","messageId":"238","endLine":54,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":58,"column":14,"nodeType":"244","messageId":"245","endLine":58,"endColumn":23},{"ruleId":"239","severity":1,"message":"240","line":59,"column":9,"nodeType":"241","messageId":"238","endLine":59,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":63,"column":22,"nodeType":"244","messageId":"245","endLine":63,"endColumn":31},{"ruleId":"242","severity":1,"message":"243","line":73,"column":13,"nodeType":"244","messageId":"245","endLine":73,"endColumn":22},{"ruleId":"239","severity":1,"message":"240","line":74,"column":9,"nodeType":"241","messageId":"238","endLine":74,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":76,"column":14,"nodeType":"244","messageId":"245","endLine":76,"endColumn":23},{"ruleId":"239","severity":1,"message":"240","line":77,"column":9,"nodeType":"241","messageId":"238","endLine":77,"endColumn":20},{"ruleId":"235","severity":1,"message":"236","line":54,"column":9,"nodeType":"237","messageId":"238","endLine":54,"endColumn":63},{"ruleId":"231","severity":1,"message":"276","line":21,"column":6,"nodeType":"233","endLine":21,"endColumn":8,"suggestions":"277"},{"ruleId":"235","severity":1,"message":"236","line":29,"column":9,"nodeType":"237","messageId":"238","endLine":29,"endColumn":63},{"ruleId":"242","severity":1,"message":"243","line":30,"column":15,"nodeType":"244","messageId":"245","endLine":30,"endColumn":24},{"ruleId":"239","severity":1,"message":"240","line":31,"column":11,"nodeType":"241","messageId":"238","endLine":31,"endColumn":22},{"ruleId":"242","severity":1,"message":"243","line":34,"column":16,"nodeType":"244","messageId":"245","endLine":34,"endColumn":25},{"ruleId":"239","severity":1,"message":"240","line":35,"column":11,"nodeType":"241","messageId":"238","endLine":35,"endColumn":22},{"ruleId":"239","severity":1,"message":"240","line":47,"column":7,"nodeType":"241","messageId":"238","endLine":47,"endColumn":18},{"ruleId":"231","severity":1,"message":"278","line":54,"column":6,"nodeType":"233","endLine":54,"endColumn":8,"suggestions":"279"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'firstOptionFunc'. Either include it or remove the dependency array.","ArrayExpression",["280"],"no-alert","Unexpected alert.","CallExpression","unexpected","no-console","Unexpected console statement.","MemberExpression","func-names","Unexpected unnamed function.","FunctionExpression","unnamed","Unexpected unnamed async function.","React Hook useEffect has missing dependencies: 'acceptUserData' and 'getRooms'. Either include them or remove the dependency array. If 'acceptUserData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["281"],"React Hook useEffect has a missing dependency: 'myIdData'. Either include it or remove the dependency array.",["282"],"React Hook useEffect has a missing dependency: 'targetId'. Either include it or remove the dependency array.",["283"],"React Hook useEffect has missing dependencies: 'targetChat' and 'targetList'. Either include them or remove the dependency array.",["284"],"React Hook useEffect contains a call to 'setToday'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [getDateType] as a second argument to the useEffect Hook.","Identifier",["285"],"React Hook useEffect has missing dependencies: 'nowBreed' and 'nowPetName'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPetname' needs the current value of 'nowPetName'.",["286"],"lines-around-directive",["287"],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"React Hook useEffect has a missing dependency: 'getDateType'. Either include it or remove the dependency array.",["288"],"React Hook useEffect has missing dependencies: 'Card', 'disconnect', and 'idValue'. Either include them or remove the dependency array.",["289"],["290"],"React Hook useEffect has missing dependencies: 'kakao' and 'userId'. Either include them or remove the dependency array.",["291"],["292"],"React Hook useEffect has a missing dependency: 'observer'. Either include it or remove the dependency array.",["293"],"React Hook useEffect has missing dependencies: 'checkToken' and 'setIsLoading'. Either include them or remove the dependency array. If 'setIsLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["294"],{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},"padding-line-between-statements",{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"309","fix":"313"},{"desc":"314","fix":"315"},{"desc":"311","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},"Update the dependencies array to be: [firstOptionFunc]",{"range":"321","text":"322"},"Update the dependencies array to be: [acceptUserData, getRooms]",{"range":"323","text":"324"},"Update the dependencies array to be: [myIdData, roomState]",{"range":"325","text":"326"},"Update the dependencies array to be: [messageState, targetId]",{"range":"327","text":"328"},"Update the dependencies array to be: [targetChat, targetId, targetList]",{"range":"329","text":"330"},"Add dependencies array: [getDateType]",{"range":"331","text":"332"},"Update the dependencies array to be: [isModalOn, nowBreed, nowPetName]",{"range":"333","text":"334"},"Update the dependencies array to be: [getDateType]",{"range":"335","text":"336"},"Update the dependencies array to be: [Card, disconnect, idValue, targetId]",{"range":"337","text":"338"},{"range":"339","text":"336"},"Update the dependencies array to be: [kakao, userId]",{"range":"340","text":"341"},{"range":"342","text":"338"},"Update the dependencies array to be: [observer]",{"range":"343","text":"344"},"Update the dependencies array to be: [checkToken, setIsLoading]",{"range":"345","text":"346"},[1026,1028],"[firstOptionFunc]",[6841,6843],"[acceptUserData, getRooms]",[7279,7290],"[myIdData, roomState]",[7609,7623],"[messageState, targetId]",[8490,8500],"[targetChat, targetId, targetList]",[3679,3679],", [getDateType]",[4870,4881],"[isModalOn, nowBreed, nowPetName]",[8480,8482],"[getDateType]",[778,788],"[Card, disconnect, idValue, targetId]",[3345,3347],[1124,1126],"[kakao, userId]",[704,714],[613,615],"[observer]",[1820,1822],"[checkToken, setIsLoading]"]