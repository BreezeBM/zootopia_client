[{"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/App.jsx":"1","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Nav/Nav.jsx":"2","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/index.js":"3","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/Chatpage/ChatPage.jsx":"4","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/LandingPage/LandingPage.jsx":"5","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/MainPage/MainPage.jsx":"6","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Posts/Posts.jsx":"7","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Post/Post.jsx":"8","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Modal/Modal.jsx":"9","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostModal/PostModal.jsx":"10","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/ImageSlide/ImageSlide.jsx":"11","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comments/Comments.jsx":"12","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/MypageModal/MypageModal.jsx":"13","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comment/Comment.jsx":"14","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComments/SubComments.jsx":"15","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComment/SubComment.jsx":"16","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/DeleteModal/DeleteModal.jsx":"17","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostNewFormModal/PostNewFormModal.jsx":"18","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/CropModal/CropModal.jsx":"19"},{"size":600,"mtime":1606446165541,"results":"20","hashOfConfig":"21"},{"size":829,"mtime":1606797172363,"results":"22","hashOfConfig":"21"},{"size":309,"mtime":1606446165543,"results":"23","hashOfConfig":"21"},{"size":170,"mtime":1606446165543,"results":"24","hashOfConfig":"21"},{"size":185,"mtime":1606446165544,"results":"25","hashOfConfig":"21"},{"size":2619,"mtime":1606736071918,"results":"26","hashOfConfig":"21"},{"size":1015,"mtime":1606736548707,"results":"27","hashOfConfig":"21"},{"size":322,"mtime":1606736542909,"results":"28","hashOfConfig":"21"},{"size":573,"mtime":1606630940509,"results":"29","hashOfConfig":"30"},{"size":2927,"mtime":1606785202042,"results":"31","hashOfConfig":"21"},{"size":329,"mtime":1606633017857,"results":"32","hashOfConfig":"30"},{"size":377,"mtime":1606649257927,"results":"33","hashOfConfig":"30"},{"size":7760,"mtime":1606808674161,"results":"34","hashOfConfig":"21"},{"size":616,"mtime":1606663239476,"results":"35","hashOfConfig":"30"},{"size":296,"mtime":1606662614092,"results":"36","hashOfConfig":"30"},{"size":491,"mtime":1606663171429,"results":"37","hashOfConfig":"21"},{"size":2235,"mtime":1606800572094,"results":"38","hashOfConfig":"21"},{"size":3478,"mtime":1606798129552,"results":"39","hashOfConfig":"21"},{"size":2085,"mtime":1606808660528,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zyrdmo",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"acc10l",{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":2,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/App.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Nav/Nav.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/index.js",[],["83","84","85","86"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/Chatpage/ChatPage.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/LandingPage/LandingPage.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/MainPage/MainPage.jsx",["87"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Posts/Posts.jsx",["88"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Post/Post.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Modal/Modal.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostModal/PostModal.jsx",["89","90"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/ImageSlide/ImageSlide.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comments/Comments.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/MypageModal/MypageModal.jsx",["91","92","93","94","95"],"import { createRef, React, useState } from 'react';\nimport axios from 'axios';\n\nimport styles from './MypageModal.module.css';\nimport Modal from '../Modal/Modal';\nimport defaultProfile from '../../images/defaultProfile.png';\nimport logoImg from '../../images/logo.png';\nimport DeleteModal from '../DeleteModal/DeleteModal';\nimport CropModal from '../CropModal/CropModal';\n\nconst MypageModal = ({ isModalOn, handleClose }) => {\n  // img 변경관련 로직\n  const [cropModalOn, setCropModalOn] = useState(false);\n  const handleCropModalOn = () => {\n    setCropModalOn(!cropModalOn);\n  };\n  const [imgSrc, setImgSrc] = useState(null);\n  const [nowImg, setNowImg] = useState(defaultProfile);\n  const handleNowImg = (newImg) => {\n    setNowImg(newImg);\n  };\n\n  const changeProfile = (e) => {\n    if (e.target.files && e.target.files.length > 0) {\n      // html5의 fileAPI\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.addEventListener('load', () => {\n        setImgSrc(reader.result);\n      });\n      handleCropModalOn();\n    }\n  };\n\n  // 서버에서 보내준 정보를 렌더링(초기)할 때 useState 디폴트 값으로 받기\n  // + 유효성 검사 로직\n  const [nowPetName, setNowPetName] = useState('스눕독');\n  const [nowBreed, setNowBreed] = useState('시바견');\n  const petnameRef = createRef();\n  const breedRef = createRef();\n\n  const [petName, setPetname] = useState(nowPetName);\n  const [breed, setBreed] = useState(nowBreed);\n  const [checked, setChecked] = useState({ petname: true, breed: true });\n\n  // 유효성 검사 로직\n  const checkInform = (e) => {\n    if (e.target.name === 'petname') {\n      setChecked({ ...checked, petname: true });\n      if (e.target.value.length > 18 || e.target.value.length === 0) {\n        setChecked({ ...checked, petname: false });\n      }\n      setPetname(e.target.value);\n    } else if (e.target.name === 'breed') {\n      setChecked({ ...checked, breed: true });\n      if (e.target.value.length > 18 || e.target.value.length === 0) {\n        setChecked({ ...checked, breed: false });\n      }\n      setBreed(e.target.value);\n    }\n  };\n\n  // 실제 펫네임을 변경하기 위해 서버에 PATCH 요청을 보내는 로직\n  const changePetname = async () => {\n    if (checked.petname) {\n      try {\n        const response = await axios.patch(\n          '/user/petname',\n          {\n            petName,\n          },\n          { withCredentials: true },\n        );\n        if (response.status === 200) {\n          setNowPetName(petName);\n          petnameRef.current.blur();\n        }\n      } catch (err) {\n        if (err.response.status === 501) {\n          alert('some errors occur at server, please try again');\n        } else if (err.response.status === 404) {\n          setChecked({ ...checked, petname: false });\n        } else {\n          console.log(err);\n        }\n      }\n    }\n  };\n\n  // 실제 품종을 변경하기 위해 서버에 PATCH 요청을 보내는 로직\n  const changeBreed = async () => {\n    if (checked.breed) {\n      try {\n        const response = await axios.patch(\n          '/user/breed',\n          {\n            breed,\n          },\n          { withCredentials: true },\n        );\n        if (response.status === 200) {\n          setNowBreed(breed);\n          breedRef.current.blur();\n        }\n      } catch (err) {\n        if (err.response.status === 501) {\n          alert('some errors occur at server, please try again');\n        } else if (err.response.status === 404) {\n          setChecked({ ...checked, breed: false });\n        }\n      }\n    }\n  };\n\n  // 회원 탈퇴 모달은 디폴트 모달을 재활용하지 않는 것이기에 따로 state로 관리\n  const [deleteModalOn, setDeleteModalOn] = useState(false);\n  const viewDeleteModal = () => {\n    setDeleteModalOn(!deleteModalOn);\n  };\n\n  return (\n    <>\n      {yeah && <img src={yeah} alt=\"fuck\" />}\n      <CropModal\n        imgSrc={imgSrc}\n        setNowImg={handleNowImg}\n        isModalOn={cropModalOn}\n        handleClose={handleCropModalOn}\n      />\n      <DeleteModal isModalOn={deleteModalOn} handleClose={viewDeleteModal} />\n      <Modal isModalOn={isModalOn} handleClose={handleClose}>\n        <div className={styles.MypageModal}>\n          <div className={styles.profile}>\n            <div className={styles.imgPart}>\n              <img src={nowImg} className={styles.profileImg} alt=\"profile\" />\n            </div>\n            <div className={styles.informPart}>\n              <div className={styles.title}>프로필 사진</div>\n              <input\n                id=\"profileImgInput\"\n                type=\"file\"\n                className={styles.profileImgInput}\n                onChange={changeProfile}\n              />\n              <label htmlFor=\"profileImgInput\">\n                <div className={styles.editButton}>Edit Picture</div>\n              </label>\n            </div>\n          </div>\n          <div className={styles.editPart}>\n            <div className={styles.petnameEdit}>\n              <div className={styles.petnameTitle}>\n                <img className={styles.logoImg} src={logoImg} alt=\"logo\" />\n                Pet Name\n              </div>\n              <div className={styles.petnameEditPart}>\n                <input\n                  ref={petnameRef}\n                  className={styles.myPageInput}\n                  spellCheck={false}\n                  onChange={checkInform}\n                  value={petName}\n                  name=\"petname\"\n                />\n                <button\n                  className={`${styles.informEditButton} ${\n                    checked.petname && styles.isOn\n                  }`}\n                  type=\"button\"\n                  onClick={changePetname}\n                >\n                  Edit\n                </button>\n              </div>\n              {checked.petname ? null : (\n                <div className={styles.caution}>\n                  펫네임은 최소 1글자 이상 18글자 이하로 작성해주세요\n                </div>\n              )}\n            </div>\n            <div className={styles.breedEdit}>\n              <div className={styles.breedTitle}>\n                <img className={styles.logoImg} src={logoImg} alt=\"logo\" />\n                Breed\n              </div>\n              <div className={styles.breedEditPart}>\n                <input\n                  ref={breedRef}\n                  className={styles.myPageInput}\n                  spellCheck={false}\n                  name=\"breed\"\n                  value={breed}\n                  onChange={checkInform}\n                />\n                <button\n                  className={`${styles.informEditButton} ${\n                    checked.breed && styles.isOn\n                  }`}\n                  type=\"button\"\n                  onClick={changeBreed}\n                >\n                  Edit\n                </button>\n              </div>\n              {checked.breed ? null : (\n                <div className={styles.caution}>\n                  품종은 최소 1글자 이상 18글자 이하로 작성해주세요\n                </div>\n              )}\n            </div>\n            <div className={styles.deleteEdit}>\n              <div className={styles.deleteTitle}>\n                <img className={styles.logoImg} src={logoImg} alt=\"logo\" />\n                Delete Account\n              </div>\n              <button\n                id={styles.deleteButton}\n                className={styles.deleteEditButton}\n                type=\"button\"\n                onClick={viewDeleteModal}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default MypageModal;\n","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comment/Comment.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComments/SubComments.jsx",["96","97"],"import React from 'react';\nimport styles from './SubComments.module.css';\nimport SubComment from '../SubComment/SubComment';\n\nconst SubComments = () => {\n  return (\n    <div className={styles.subComments}>\n      <SubComment />\n      <SubComment />\n    </div>\n  );\n};\n\nexport default SubComments;\n","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComment/SubComment.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/DeleteModal/DeleteModal.jsx",["98","99"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostNewFormModal/PostNewFormModal.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/CropModal/CropModal.jsx",["100"],"import { React, useState, createRef } from 'react';\nimport Cropper from 'react-easy-crop';\nimport styles from './CropModal.module.css';\n// import close from '../../images/close.png';\n\nconst CropModal = ({ setNowImg, imgSrc, isModalOn, handleClose }) => {\n  const cropRef = createRef();\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n  //   const [croppedImageUrl, setCroppedImageUrl] = useState(null);\n\n  const onCropChange = (crops) => {\n    setCrop({ ...crop, ...crops });\n  };\n\n  const createImage = (url) =>\n    new Promise((resolve, reject) => {\n      const image = new Image();\n      image.addEventListener('load', () => resolve(image));\n      image.addEventListener('error', (error) => reject(error));\n      image.setAttribute('crossOrigin', 'anonymous');\n      image.src = url;\n    });\n\n  const getCroppedImg = async (imageSrc, crops) => {\n    const image = await createImage(imageSrc);\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = crops.width;\n    canvas.height = crops.height;\n    ctx.drawImage(\n      image,\n      crops.x,\n      crops.y,\n      crops.width,\n      crops.height,\n      0,\n      0,\n      canvas.width,\n      canvas.height,\n    );\n    return new Promise((resolve) => {\n      resolve(canvas.toDataURL());\n    });\n  };\n\n  const onCropComplete = async (croppedAreaPixels) => {\n    try {\n      const croppedImage = await getCroppedImg(imgSrc, croppedAreaPixels);\n      setNowImg(croppedImage);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const cropDone = () => {\n    handleClose();\n  };\n\n  return (\n    <div className={`${styles.modal} ${isModalOn && styles.isOn}`} id=\"cropper\">\n      <Cropper\n        ref={cropRef}\n        image={imgSrc}\n        crop={crop}\n        zoom={zoom}\n        aspect={1}\n        onCropComplete={onCropComplete}\n        onCropChange={onCropChange}\n        onZoomChange={setZoom}\n      />\n      <button type=\"button\" onClick={cropDone}>\n        시발\n      </button>\n    </div>\n  );\n};\n\nexport default CropModal;\n",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":12,"column":5,"nodeType":"111","messageId":"112","endLine":12,"endColumn":16},{"ruleId":"113","severity":1,"message":"114","line":25,"column":6,"nodeType":"115","endLine":25,"endColumn":8,"suggestions":"116"},{"ruleId":"109","severity":1,"message":"110","line":32,"column":17,"nodeType":"111","messageId":"112","endLine":32,"endColumn":28},{"ruleId":"109","severity":1,"message":"110","line":77,"column":17,"nodeType":"111","messageId":"112","endLine":77,"endColumn":28},{"ruleId":"117","severity":1,"message":"118","line":80,"column":11,"nodeType":"119","messageId":"112","endLine":80,"endColumn":65},{"ruleId":"109","severity":1,"message":"110","line":84,"column":11,"nodeType":"111","messageId":"112","endLine":84,"endColumn":22},{"ruleId":"117","severity":1,"message":"118","line":107,"column":11,"nodeType":"119","messageId":"112","endLine":107,"endColumn":65},{"ruleId":"120","severity":2,"message":"121","line":123,"column":8,"nodeType":"122","messageId":"123","endLine":123,"endColumn":12},{"ruleId":"120","severity":2,"message":"121","line":123,"column":26,"nodeType":"122","messageId":"123","endLine":123,"endColumn":30},{"ruleId":"124","severity":2,"message":"125","line":3,"column":24,"nodeType":"126","endLine":3,"endColumn":50},{"ruleId":"127","severity":2,"message":"125","line":3,"column":24,"nodeType":"126","endLine":3,"endColumn":50},{"ruleId":"117","severity":1,"message":"118","line":24,"column":9,"nodeType":"119","messageId":"112","endLine":24,"endColumn":63},{"ruleId":"109","severity":1,"message":"110","line":26,"column":9,"nodeType":"111","messageId":"112","endLine":26,"endColumn":20},{"ruleId":"109","severity":1,"message":"110","line":52,"column":7,"nodeType":"111","messageId":"112","endLine":52,"endColumn":18},"lines-around-directive",["128"],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'observer'. Either include it or remove the dependency array.","ArrayExpression",["129"],"no-alert","Unexpected alert.","CallExpression","no-undef","'yeah' is not defined.","Identifier","undef","import/no-named-as-default","Parse errors in imported module '../SubComment/SubComment': Line 7: Unexpected token\n\n   5 |   return (\n   6 | \n>  7 |   );\n     |   ^\n   8 | };\n   9 | \n  10 | export default SubComment; (7:3)","Literal","import/no-named-as-default-member","padding-line-between-statements",{"desc":"130","fix":"131"},"Update the dependencies array to be: [observer]",{"range":"132","text":"133"},[699,701],"[observer]"]