[{"/Users/user/Desktop/final-project/zootopia_client/client/src/App.jsx":"1","/Users/user/Desktop/final-project/zootopia_client/client/src/pages/MainPage/MainPage.jsx":"2","/Users/user/Desktop/final-project/zootopia_client/client/src/pages/Chatpage/ChatPage.jsx":"3","/Users/user/Desktop/final-project/zootopia_client/client/src/components/ChatUser/ChatUser.jsx":"4","/Users/user/Desktop/final-project/zootopia_client/client/src/components/Nav/Nav.jsx":"5","/Users/user/Desktop/final-project/zootopia_client/client/src/components/MyChat/MyChat.jsx":"6","/Users/user/Desktop/final-project/zootopia_client/client/src/components/Comment/Comment.jsx":"7","/Users/user/Desktop/final-project/zootopia_client/client/src/pages/LandingPage/LandingPage.jsx":"8","/Users/user/Desktop/final-project/zootopia_client/client/src/components/CropModal/CropModal.jsx":"9"},{"size":3371,"mtime":1607565783281,"results":"10","hashOfConfig":"11"},{"size":4352,"mtime":1607398918519,"results":"12","hashOfConfig":"11"},{"size":3617,"mtime":1607573751630,"results":"13","hashOfConfig":"14"},{"size":1057,"mtime":1607573304379,"results":"15","hashOfConfig":"14"},{"size":1149,"mtime":1607003696212,"results":"16","hashOfConfig":"11"},{"size":874,"mtime":1607565786324,"results":"17","hashOfConfig":"11"},{"size":3235,"mtime":1607398918512,"results":"18","hashOfConfig":"11"},{"size":2195,"mtime":1607565781595,"results":"19","hashOfConfig":"11"},{"size":4266,"mtime":1606919965765,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19nnj9d",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":1,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"z6c4vb",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/Desktop/final-project/zootopia_client/client/src/App.jsx",["42"],"/Users/user/Desktop/final-project/zootopia_client/client/src/pages/MainPage/MainPage.jsx",["43"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styles from './MainPage.module.css';\nimport Posts from '../../components/Posts/Posts';\nimport addPostImg from '../../images/bark.png';\nimport PostModal from '../../components/PostModal/PostModal';\nimport PostNewFormModal from '../../components/PostNewFormModal/PostNewFormModal';\nimport fakedata from '../../fakeData';\n\nconst MainPage = ({\n  setPosts,\n  posts,\n  getPosts,\n  setProfile,\n  profile,\n  deletePost,\n}) => {\n  // 처음 디폴트 로딩값은 true, 즉, 들어오자마자 스피너 돌아가게\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAddPostOn, setIsAddPostOn] = useState(false);\n\n  const [isPostOn, setIsPostOn] = useState(false);\n  const [postModaldata, setPostModalData] = useState({});\n\n  const viewAddPost = () => {\n    setIsAddPostOn(!isAddPostOn);\n  };\n\n  const viewPost = async (postId) => {\n    if (isPostOn) {\n      setIsPostOn(false);\n    } else {\n      // try {\n      //   const response = await axios.get(\n      // `https://server.codestates-project.tk/post/${postId}`,\n      //     { withCredentials: true },\n      //   );\n      //   setPostModalData(response.data);\n      // } catch (err) {\n      //   if (err.response.status === 401) {\n      //     // history.push('/');\n      //   } else {\n      //     console.log(err);\n      //   }\n      // } finally {\n      //   setIsPostOn(true);\n      // }\n      setPostModalData(fakedata.post);\n      setIsPostOn(true);\n    }\n  };\n\n  const acceptUserData = async (userId) => {\n    // try {\n    //   const response = await axios.get(\n    //     `https://server.codestates-project.tk/user/${userId}`,\n    //     { withCredentials: true },\n    //   );\n    //   setProfile(response.data);\n    // } catch (err) {\n    //   if (err.response.status === 401) {\n    //     // history.push('/');\n    //   } else {\n    //     console.log(err);\n    //   }\n    // }\n\n    // text용\n    setProfile(fakedata.user);\n  };\n\n  const viewProfile = () => {\n    getPosts(profile.userId, 0, 0, 15);\n  };\n\n  // ComponentDidMount\n  useEffect(() => {\n    // 처음 렌더링될 때 getPosts로 latest 그리드를 받아서 posts에 업데이트해주고, 렌더링하도록\n    getPosts(0, 0, 0, 15);\n    // 처음 유저 데이터(자신)를 받아서 profile에 업데이트한 뒤에 렌더링\n    acceptUserData(0);\n    // 처음에 Loading자체가 true로 디폴트해놨기에, 여기까지\n    // latest grid 및 유저 정보 렌더링 끝나면 로딩 false로 풀기\n    // 결론적으로 들어오면 바로 스피너 돌고, 스피너 끝날 쯤에 다 렌더링 된 상태\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <>\n      <PostNewFormModal\n        postsKind={posts.kind}\n        setPosts={setPosts}\n        isModalOn={isAddPostOn}\n        handleClose={viewAddPost}\n      />\n      {isPostOn ? (\n        <PostModal\n          getPosts={getPosts}\n          getUserData={acceptUserData}\n          postData={postModaldata}\n          isModalOn={isPostOn}\n          handleClose={viewPost}\n          deletePost={deletePost}\n        />\n      ) : null}\n\n      <div className={styles.main}>\n        <div className={styles.flexBox}>\n          <div className={styles.profile} onClick={viewProfile}>\n            <img\n              src={profile.thumbnail}\n              className={styles.image}\n              alt=\"profile_img\"\n            />\n            <div className={styles.userInform}>\n              <div className={styles.petName}>{profile.petName}</div>\n              <div className={styles.breed}>{profile.breed}</div>\n              <div className={styles.postCountPart}>\n                <div className={styles.postsCount}>Posts</div>\n                <div className={styles.postsCountNumber}>\n                  {profile.postCount}\n                </div>\n              </div>\n            </div>\n          </div>\n          <Posts\n            userId={profile.userId}\n            isLoading={isLoading}\n            addPosts={getPosts}\n            posts={posts.postData}\n            postsCount={posts.postsCount}\n            viewPost={viewPost}\n          />\n        </div>\n        <div className={styles.addButton} onClick={viewAddPost}>\n          <img className={styles.addPostImg} src={addPostImg} alt=\"addPost\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MainPage;\n",["44","45","46","47"],"/Users/user/Desktop/final-project/zootopia_client/client/src/pages/Chatpage/ChatPage.jsx",["48","49","50","51","52","53","54","55","56","57"],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/ChatUser/ChatUser.jsx",["58","59","60"],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/Nav/Nav.jsx",[],["61","62","63","64"],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/MyChat/MyChat.jsx",[],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/Comment/Comment.jsx",["65"],"/Users/user/Desktop/final-project/zootopia_client/client/src/pages/LandingPage/LandingPage.jsx",[],"/Users/user/Desktop/final-project/zootopia_client/client/src/components/CropModal/CropModal.jsx",[],{"ruleId":"66","severity":1,"message":"67","line":94,"column":5,"nodeType":"68","messageId":"69","endLine":94,"endColumn":16},{"ruleId":"70","severity":1,"message":"71","line":86,"column":6,"nodeType":"72","endLine":86,"endColumn":8,"suggestions":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":23,"column":20,"nodeType":"84","messageId":"85","endLine":23,"endColumn":35},{"ruleId":"66","severity":1,"message":"67","line":26,"column":7,"nodeType":"68","messageId":"69","endLine":26,"endColumn":18},{"ruleId":"66","severity":1,"message":"67","line":31,"column":7,"nodeType":"68","messageId":"69","endLine":31,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":35,"column":23,"nodeType":"84","messageId":"85","endLine":35,"endColumn":38},{"ruleId":"86","severity":2,"message":"87","line":37,"column":7,"nodeType":"88","messageId":"89","endLine":37,"endColumn":13},{"ruleId":"66","severity":1,"message":"67","line":44,"column":7,"nodeType":"68","messageId":"69","endLine":44,"endColumn":18},{"ruleId":"82","severity":1,"message":"90","line":72,"column":22,"nodeType":"84","messageId":"85","endLine":72,"endColumn":31},{"ruleId":"66","severity":1,"message":"67","line":75,"column":7,"nodeType":"68","messageId":"69","endLine":75,"endColumn":18},{"ruleId":"66","severity":1,"message":"67","line":87,"column":5,"nodeType":"68","messageId":"69","endLine":87,"endColumn":16},{"ruleId":"70","severity":1,"message":"91","line":97,"column":6,"nodeType":"72","endLine":97,"endColumn":16,"suggestions":"92"},{"ruleId":"70","severity":1,"message":"93","line":10,"column":3,"nodeType":"88","endLine":10,"endColumn":12,"suggestions":"94"},{"ruleId":"82","severity":1,"message":"90","line":16,"column":22,"nodeType":"84","messageId":"85","endLine":16,"endColumn":31},{"ruleId":"66","severity":1,"message":"67","line":18,"column":5,"nodeType":"68","messageId":"69","endLine":18,"endColumn":16},{"ruleId":"74","replacedBy":"95"},{"ruleId":"76","replacedBy":"96"},{"ruleId":"78","replacedBy":"97"},{"ruleId":"80","replacedBy":"98"},{"ruleId":"66","severity":1,"message":"67","line":70,"column":21,"nodeType":"68","messageId":"69","endLine":70,"endColumn":32},"no-console","Unexpected console statement.","MemberExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'acceptUserData' and 'getPosts'. Either include them or remove the dependency array. If 'getPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["99"],"lines-around-directive",["100"],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"func-names","Unexpected unnamed async function.","FunctionExpression","unnamed","no-undef","'socket' is not defined.","Identifier","undef","Unexpected unnamed function.","React Hook useEffect has a missing dependency: 'targetList'. Either include it or remove the dependency array.",["101"],"React Hook useEffect contains a call to 'changeToggle'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [state, idValue, Card] as a second argument to the useEffect Hook.",["102"],["100"],[],[],[],{"desc":"103","fix":"104"},"padding-line-between-statements",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [acceptUserData, getPosts]",{"range":"109","text":"110"},"Update the dependencies array to be: [targetId, targetList]",{"range":"111","text":"112"},"Add dependencies array: [state, idValue, Card]",{"range":"113","text":"114"},[2390,2392],"[acceptUserData, getPosts]",[2468,2478],"[targetId, targetList]",[442,442],", [state, idValue, Card]"]