[{"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostModal/PostModal.jsx":"1","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/Chatpage/ChatPage.jsx":"2","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comment/Comment.jsx":"3","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComment/SubComment.jsx":"4","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostNewFormModal/PostNewFormModal.jsx":"5","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Nav/Nav.jsx":"6","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/ImageSlide/ImageSlide.jsx":"7","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/EachSlide/EachSlide.jsx":"8","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Posts/Posts.jsx":"9","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/App.jsx":"10","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/MainPage/MainPage.jsx":"11","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/AddroomModal/AddroomModal.jsx":"12","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comments/Comments.jsx":"13","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostCropModal/PostCropModal.jsx":"14","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComments/SubComments.jsx":"15"},{"size":16528,"mtime":1608103701991,"results":"16","hashOfConfig":"17"},{"size":8864,"mtime":1608103762415,"results":"18","hashOfConfig":"17"},{"size":6445,"mtime":1608107389706,"results":"19","hashOfConfig":"17"},{"size":5858,"mtime":1608107390646,"results":"20","hashOfConfig":"17"},{"size":8215,"mtime":1608107792147,"results":"21","hashOfConfig":"17"},{"size":1653,"mtime":1608117619819,"results":"22","hashOfConfig":"17"},{"size":2516,"mtime":1608108442175,"results":"23","hashOfConfig":"17"},{"size":330,"mtime":1608108268476,"results":"24","hashOfConfig":"17"},{"size":1444,"mtime":1608114840532,"results":"25","hashOfConfig":"17"},{"size":5531,"mtime":1608117453474,"results":"26","hashOfConfig":"17"},{"size":4986,"mtime":1608094232999,"results":"27","hashOfConfig":"17"},{"size":2483,"mtime":1608103701970,"results":"28","hashOfConfig":"17"},{"size":1279,"mtime":1608007658529,"results":"29","hashOfConfig":"17"},{"size":3570,"mtime":1606905749699,"results":"30","hashOfConfig":"17"},{"size":1065,"mtime":1607680529659,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19cocba",{"filePath":"34","messages":"35","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostModal/PostModal.jsx",["66","67","68","69","70","71","72","73","74","75","76","77","78","79","80"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/Chatpage/ChatPage.jsx",["81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110"],"import React, { createRef, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport styles from './ChatPage.module.css';\nimport backListImg from '../../images/backList.png';\nimport addRoomImg from '../../images/addRoom.png';\nimport ChatUser from '../../components/ChatUser/ChatUser';\nimport MyChat from '../../components/MyChat/MyChat';\nimport UserChat from '../../components/UserChat/UserChat';\nimport AddroomModal from '../../components/AddroomModal/AddroomModal';\n\nconst socket = io('https://zootopia-chat.herokuapp.com/', {\n  withCredentials: true,\n});\n\nconst ChatPage = ({ myPicture, myId, myNickname, myBreed }) => {\n  let roomLists = '';\n  const pictureData = myPicture;\n  const myIdData = 1;\n  const username = myNickname;\n  const breedname = myBreed;\n\n  const chatScroll = createRef();\n  const targetList = createRef();\n  const targetChat = createRef();\n  const targetButton = createRef();\n  const backList = createRef();\n  const inputData = createRef();\n\n  const [targetId, targetToggle] = useState('');\n  const [roomState, setRooms] = useState([]);\n  const [messageState, setMessages] = useState([]);\n  const [onLine, setonLine] = useState(5);\n  const [addRoomOn, setaddRoomOn] = useState(false);\n  const [inputState, setInput] = useState('');\n\n  const history = useHistory();\n  const viewAddRoompage = () => {\n    setaddRoomOn(!addRoomOn);\n  };\n\n  const mapFunction = function (el) {\n    if (el.user === myIdData) {\n      return <MyChat textData={el.text} dateData={el.createdAt} />;\n    } else {\n      return (\n        <UserChat\n          textData={el.text}\n          dateData={el.createdAt}\n          imgData={myPicture}\n        />\n      );\n    }\n  };\n\n  const getRooms = async function () {\n    try {\n      const res = await axios.get(\n        `https://zootopia-chat.herokuapp.com/room/${myIdData}`,\n      );\n      console.log(res.data);\n      setRooms(res.data);\n      console.log(roomState);\n    } catch (err) {\n      throw err;\n    } finally {\n      console.log('룸 정보 GET 함수 실행');\n    }\n  };\n\n  const getMessages = async function (id) {\n    try {\n      const res = await axios.get(\n        `https://zootopia-chat.herokuapp.com/chat/${id}`,\n      );\n      setMessages(res.data);\n    } catch (err) {\n      throw err;\n    } finally {\n      console.log('메시지 GET 실행');\n    }\n  };\n  const mapingFunc = () => {\n    if (roomState.length > 0) {\n      roomLists = roomState.map((el) => {\n        if (el.type === '공개 채팅방') {\n          const userNum = `${el.users.length}명`;\n          return (\n            <ChatUser\n              idValue={el._id}\n              unread=\"\"\n              targetId={targetId}\n              targetToggle={targetToggle}\n              roomTitle={el.title}\n              userImg=\"<사진파일>\"\n              roomPeople={userNum}\n              dataFunc={getMessages}\n              Myid={1}\n            />\n          );\n        } else {\n          let you = el.users.filter((dl) => dl.id !== myIdData)[0];\n          let me = el.users.filter((dl) => dl.id === myIdData)[0];\n          if (!you) {\n            you = { isOnline: undefined };\n          }\n          if (!me) {\n            me = { unRead: false };\n          }\n          return (\n            <ChatUser\n              idValue={el._id}\n              unread={me.unRead}\n              targetId={targetId}\n              targetToggle={targetToggle}\n              roomTitle=\"임시제목\"\n              userImg=\"<사진파일>\"\n              roomPeople={you.isOnline ? 'online' : 'offline'}\n              dataFunc={getMessages}\n              Myid={1}\n            />\n          );\n        }\n      });\n    }\n  };\n\n  mapingFunc();\n\n  const onChange = (e) => {\n    setInput(e.target.value);\n    console.log(inputState);\n  };\n\n  const sendMessage = function (e) {\n    if (e.target.value.length > 1) {\n      targetButton.current.style.backgroundColor = 'rgba(255,198,0)';\n      targetButton.current.style.color = 'black';\n    } else if (e.target.value.length <= 1) {\n      targetButton.current.style.backgroundColor = 'rgba(248,248,248)';\n      targetButton.current.style.color = '';\n    }\n\n    if (e.keyCode === 13) {\n      const message = JSON.stringify({\n        user: 1,\n        text: `${e.target.value}`,\n      });\n      const config = {\n        method: 'post',\n        url: `https://zootopia-chat.herokuapp.com/chat/${targetId}`,\n        headers: { 'Content-Type': 'application/json' },\n        data: message,\n      };\n      axios(config)\n        .then(function (response) {\n          console.log(JSON.stringify(response.data));\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  };\n\n  const sendClick = function () {\n    const message = JSON.stringify({\n      user: 1,\n      text: inputData.target.value,\n    });\n    const config = {\n      method: 'post',\n      url: `https://zootopia-chat.herokuapp.com/chat/${targetId}`,\n      headers: { 'Content-Type': 'application/json' },\n      data: message,\n    };\n    axios(config)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    getRooms();\n    mapingFunc();\n  }, []);\n\n  useEffect(() => {\n    socket.on('newPublic', function (room) {\n      console.log(room);\n      setRooms([...roomState, room]);\n    });\n\n    socket.on('newPrivate', (room, myid, id) => {\n      console.log(room);\n      if (myid === '1' || id === '1') {\n        setRooms([...roomState, room]);\n      }\n    });\n    mapingFunc();\n  }, [roomState]);\n\n  useEffect(() => {\n    socket.on('newMessage', function (chat) {\n      console.log(chat);\n      setMessages([...messageState, chat]);\n    });\n    console.log(messageState);\n    return () => socket.off('newMessage');\n  }, [messageState]);\n\n  useEffect(() => {\n    socket.on('roomUpdate', function (room) {\n      const arry = roomState.filter((el) => {\n        return el._id === room._id;\n      });\n      if (arry.length > 0) {\n        console.log('@@@@@@@잘됩니다@@@@@@@@');\n        const num = roomState.indexOf(arry[0]);\n        const result = roomState.slice(undefined);\n        result.splice(num, 1, room);\n        setRooms(result);\n      }\n    });\n    return () => socket.off('roomUpdate');\n  }, [roomState]);\n\n  // 모바일 기종에선 전용 UI로 나올 수 있도록\n  useEffect(() => {\n    const arr = ['Win16', 'Win32', 'Win64', 'Mac', 'MacIntel'];\n    if (!arr.includes(navigator.platform)) {\n      targetChat.current.style.display = 'none';\n      if (targetId.length > 5) {\n        targetChat.current.style.display = '';\n        targetList.current.style.display = 'none';\n      }\n    }\n    mapingFunc();\n  }, [targetId]);\n  console.log('랜더링');\n  return (\n    <>\n      <AddroomModal\n        isModalOn={addRoomOn}\n        handleClose={viewAddRoompage}\n        roomState={roomState}\n        setRoom={setRooms}\n      />\n      <div className={styles.main}>\n        <div className={styles.main}> </div>\n        <div className={styles.flexBox}>\n          <div className={styles.listBox} ref={targetList}>\n            <div className={styles.profile}>\n              <img className={styles.image} src={myPicture} alt=\"profile\" />\n              <div className={styles.name}>{username}</div>\n              <div className={styles.breed}>{breedname}</div>\n            </div>\n            <div className={styles.userlist}>\n              <div className={styles.profileBlock}>모바일 버전용</div>\n              {roomLists}\n              <img\n                className={styles.addRoom}\n                src={addRoomImg}\n                alt=\"addRoom\"\n                onClick={viewAddRoompage}\n              />\n            </div>\n          </div>\n          <div className={styles.chatBox} ref={targetChat}>\n            <div className={styles.chatonBoard} ref={chatScroll}>\n              <div className={styles.block}> </div>\n              {targetId.length < 5\n                ? ''\n                : messageState.map((el) => mapFunction(el))}\n            </div>\n            <img\n              className={styles.backList}\n              src={backListImg}\n              ref={backList}\n              alt=\"backList\"\n              onClick={() => {\n                history.go();\n              }}\n            />\n            <input\n              className={styles.chatPost}\n              type=\"text\"\n              value={inputState}\n              placeholder=\"메시지 입력...\"\n              onChange={onChange}\n              onKeyDown={sendMessage}\n              ref={inputData}\n            />\n            <div className={styles.send} onClick={sendClick} ref={targetButton}>\n              전송\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ChatPage;\n",["111","112","113","114"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comment/Comment.jsx",["115","116","117","118","119"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComment/SubComment.jsx",["120","121","122","123","124"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostNewFormModal/PostNewFormModal.jsx",["125","126"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Nav/Nav.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/ImageSlide/ImageSlide.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/EachSlide/EachSlide.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Posts/Posts.jsx",["127"],"import { React, useRef, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styles from './Posts.module.css';\nimport Post from '../Post/Post';\n\nconst Posts = ({ isDone, postsCount, posts, getMorePosts, viewPost }) => {\n  // infinite scroll logic with IntersectionObserver API\n  const targetRef = useRef(null);\n  const onIntersect = async ([entry], observer) => {\n    if (entry.isIntersecting) {\n      observer.unobserve(entry.target);\n      getMorePosts();\n    }\n    setTimeout(() => {\n      observer.observe(entry.target);\n    }, 4000);\n  };\n\n  const observer = new IntersectionObserver(onIntersect, { threshold: 0.5 });\n\n  useEffect(() => {\n    observer.observe(targetRef.current);\n  }, []);\n\n  return (\n    <>\n      <div className={styles.emptySpace} />\n      <div className={styles.container}>\n        <div className={styles.grid_container}>\n          {posts.map((post) => {\n            return (\n              <Post\n                thumbnail={post.thumbnail}\n                key={post.postId}\n                postId={post.postId}\n                viewPost={viewPost}\n              />\n            );\n          })}\n        </div>\n        <div\n          ref={targetRef}\n          className={`${styles.target} ${\n            !isDone && postsCount >= 15 && styles.isOn\n          }`}\n        >\n          Loading...\n          <i className=\"fas fa-fan fa-spin\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Posts;\n","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/App.jsx",["128","129","130"],"import { React, useState } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport Nav from './components/Nav/Nav';\nimport LandingPage from './pages/LandingPage/LandingPage';\nimport ChatPage from './pages/Chatpage/ChatPage';\nimport MainPage from './pages/MainPage/MainPage';\n\nlet fromId = 0;\nlet offsetCount = 0;\nlet nowId = null;\nlet postsDatas = [];\n\nfunction App() {\n  const history = useHistory();\n  const [userProfile, setUserProfile] = useState({});\n  const [profile, setProfile] = useState({});\n  const [posts, setPosts] = useState({\n    postData: [],\n    kind: 'latest',\n    postsCount: 0,\n  });\n  const setProfileInform = ({\n    userId,\n    photo,\n    thumbnail,\n    petName,\n    breed,\n    postCount,\n  }) => {\n    setProfile({\n      ...profile,\n      userId,\n      photo,\n      thumbnail,\n      petName,\n      breed,\n      postCount,\n    });\n  };\n  const [isDone, setIsDone] = useState(false);\n\n  const acceptPosts = async (id) => {\n    setIsDone(false);\n    window.scrollTo(0, 0);\n    try {\n      const response = await axios.post(\n        'https://server.codestates-project.tk/post/grid',\n\n        {\n          userId: id,\n          from: 0,\n          offset: 0,\n          count: 15,\n        },\n        { withCredentials: true },\n      );\n\n      const acceptedPosts = response.data.postData;\n      postsDatas.splice(0, postsDatas.length);\n      postsDatas = postsDatas.concat(acceptedPosts);\n      fromId = acceptedPosts[0].postId;\n      offsetCount = acceptedPosts.length;\n      nowId = id;\n\n      if (acceptedPosts.length < 15) {\n        setIsDone(true);\n      }\n\n      if (id === 0) {\n        setPosts({\n          postData: acceptedPosts,\n          postsCount: acceptedPosts.length,\n          kind: 'latest',\n        });\n      } else if (id === userProfile.userId) {\n        setPosts({\n          postData: acceptedPosts,\n          postsCount: acceptedPosts.length,\n          kind: 'user',\n        });\n      } else {\n        setPosts({\n          postData: acceptedPosts,\n          postsCount: acceptedPosts.length,\n          kind: 'other',\n        });\n      }\n    } catch (err) {\n      if (err.response.status === 401) {\n        history.push('/');\n      } else {\n        console.log(err);\n      }\n    }\n  };\n\n  const getMorePosts = async () => {\n    try {\n      const response = await axios.post(\n        'https://server.codestates-project.tk/post/grid',\n        {\n          userId: nowId,\n          from: fromId,\n          offset: offsetCount,\n          count: 15,\n        },\n        { withCredentials: true },\n      );\n      const acceptedPosts = response.data.postData;\n      if (acceptedPosts.length < 15) {\n        setIsDone(true);\n      }\n\n      setPosts((prev) => {\n        return {\n          kind: prev.kind,\n          postData: postsDatas.concat(acceptedPosts),\n          postsCount: offsetCount + acceptedPosts.length,\n        };\n      });\n\n      postsDatas = postsDatas.concat(acceptedPosts);\n      offsetCount += acceptedPosts.length;\n    } catch (err) {\n      if (err.response.status === 401) {\n        history.push('/');\n      } else {\n        console.log(err);\n      }\n    }\n  };\n\n  const acceptUserData = async (userId) => {\n    try {\n      const response = await axios.get(\n        `https://server.codestates-project.tk/user/${userId}`,\n        { withCredentials: true },\n      );\n      if (userId === 0) {\n        setUserProfile(response.data);\n      }\n      setProfile(response.data);\n    } catch (err) {\n      if (err.response.status === 401) {\n        history.push('/');\n      } else {\n        console.log(err);\n      }\n    }\n  };\n\n  const deletePost = (id) => {\n    const copyArr = posts.postData.slice();\n    for (let idx = 0; idx < copyArr.length; idx += 1) {\n      if (copyArr[idx].postId === id) {\n        copyArr.splice(idx, 1);\n        break;\n      }\n    }\n    setPosts({ ...posts, postData: copyArr, postsCount: posts.postsCount - 1 });\n  };\n\n  return (\n    <>\n      <Switch>\n        <Route path=\"/\" exact>\n          <LandingPage />\n        </Route>\n        <Route path=\"/main\">\n          <Nav\n            setPosts={setPosts}\n            kind={posts.kind}\n            setProfile={setProfile}\n            userProfile={userProfile}\n            acceptUserData={acceptUserData}\n            setUserProfile={setUserProfile}\n            profile={userProfile}\n            acceptPosts={acceptPosts}\n          />\n          <MainPage\n            getMorePosts={getMorePosts}\n            acceptUserData={acceptUserData}\n            kind={posts.kind}\n            userProfile={userProfile}\n            isDone={isDone}\n            setUserProfile={setUserProfile}\n            setPosts={setPosts}\n            posts={posts}\n            getPosts={acceptPosts}\n            setProfile={setProfileInform}\n            setProfileForDeleteAndAdd={setProfile}\n            profile={profile}\n            deletePost={deletePost}\n          />\n        </Route>\n        <Route path=\"/chat\">\n          <Nav\n            kind={posts.kind}\n            setProfile={setProfile}\n            userProfile={userProfile}\n            acceptUserData={acceptUserData}\n            setUserProfile={setUserProfile}\n            profile={userProfile}\n            acceptPosts={acceptPosts}\n          />\n          <ChatPage\n            myPicture={userProfile.thumbnail} // = img src\n            myId={userProfile.userId}\n            myNickname={userProfile.petName}\n            myBreed={userProfile.breed}\n          />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/MainPage/MainPage.jsx",["131","132"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/AddroomModal/AddroomModal.jsx",["133","134","135","136","137","138","139","140","141","142"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comments/Comments.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostCropModal/PostCropModal.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComments/SubComments.jsx",[],{"ruleId":"143","severity":1,"message":"144","line":86,"column":9,"nodeType":"145","messageId":"146","endLine":86,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":157,"column":11,"nodeType":"149","messageId":"146","endLine":157,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":159,"column":11,"nodeType":"145","messageId":"146","endLine":159,"endColumn":22},{"ruleId":"143","severity":1,"message":"144","line":193,"column":11,"nodeType":"145","messageId":"146","endLine":193,"endColumn":22},{"ruleId":"143","severity":1,"message":"144","line":216,"column":11,"nodeType":"145","messageId":"146","endLine":216,"endColumn":22},{"ruleId":"143","severity":1,"message":"144","line":242,"column":9,"nodeType":"145","messageId":"146","endLine":242,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":248,"column":5,"nodeType":"145","messageId":"146","endLine":248,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":249,"column":5,"nodeType":"145","messageId":"146","endLine":249,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":250,"column":5,"nodeType":"145","messageId":"146","endLine":250,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":262,"column":13,"nodeType":"152","messageId":"153","endLine":262,"endColumn":22},{"ruleId":"143","severity":1,"message":"144","line":263,"column":9,"nodeType":"145","messageId":"146","endLine":263,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":265,"column":9,"nodeType":"145","messageId":"146","endLine":265,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":267,"column":14,"nodeType":"152","messageId":"153","endLine":267,"endColumn":23},{"ruleId":"143","severity":1,"message":"144","line":268,"column":9,"nodeType":"145","messageId":"146","endLine":268,"endColumn":20},{"ruleId":"154","severity":1,"message":"155","line":297,"column":6,"nodeType":"156","endLine":297,"endColumn":8,"suggestions":"157"},{"ruleId":"150","severity":1,"message":"151","line":43,"column":23,"nodeType":"152","messageId":"153","endLine":43,"endColumn":32},{"ruleId":"150","severity":1,"message":"158","line":57,"column":20,"nodeType":"152","messageId":"153","endLine":57,"endColumn":35},{"ruleId":"143","severity":1,"message":"144","line":62,"column":7,"nodeType":"145","messageId":"146","endLine":62,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":64,"column":7,"nodeType":"145","messageId":"146","endLine":64,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":68,"column":7,"nodeType":"145","messageId":"146","endLine":68,"endColumn":18},{"ruleId":"150","severity":1,"message":"158","line":72,"column":23,"nodeType":"152","messageId":"153","endLine":72,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":81,"column":7,"nodeType":"145","messageId":"146","endLine":81,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":133,"column":5,"nodeType":"145","messageId":"146","endLine":133,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":136,"column":23,"nodeType":"152","messageId":"153","endLine":136,"endColumn":32},{"ruleId":"150","severity":1,"message":"151","line":157,"column":15,"nodeType":"152","messageId":"153","endLine":157,"endColumn":24},{"ruleId":"143","severity":1,"message":"144","line":158,"column":11,"nodeType":"145","messageId":"146","endLine":158,"endColumn":22},{"ruleId":"150","severity":1,"message":"151","line":160,"column":16,"nodeType":"152","messageId":"153","endLine":160,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":161,"column":11,"nodeType":"145","messageId":"146","endLine":161,"endColumn":22},{"ruleId":"150","severity":1,"message":"151","line":166,"column":21,"nodeType":"152","messageId":"153","endLine":166,"endColumn":30},{"ruleId":"150","severity":1,"message":"151","line":178,"column":13,"nodeType":"152","messageId":"153","endLine":178,"endColumn":22},{"ruleId":"143","severity":1,"message":"144","line":179,"column":9,"nodeType":"145","messageId":"146","endLine":179,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":181,"column":14,"nodeType":"152","messageId":"153","endLine":181,"endColumn":23},{"ruleId":"143","severity":1,"message":"144","line":182,"column":9,"nodeType":"145","messageId":"146","endLine":182,"endColumn":20},{"ruleId":"154","severity":1,"message":"159","line":189,"column":6,"nodeType":"156","endLine":189,"endColumn":8,"suggestions":"160"},{"ruleId":"150","severity":1,"message":"151","line":192,"column":28,"nodeType":"152","messageId":"153","endLine":192,"endColumn":37},{"ruleId":"143","severity":1,"message":"144","line":193,"column":7,"nodeType":"145","messageId":"146","endLine":193,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":198,"column":7,"nodeType":"145","messageId":"146","endLine":198,"endColumn":18},{"ruleId":"154","severity":1,"message":"161","line":204,"column":6,"nodeType":"156","endLine":204,"endColumn":17,"suggestions":"162"},{"ruleId":"150","severity":1,"message":"151","line":207,"column":29,"nodeType":"152","messageId":"153","endLine":207,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":208,"column":7,"nodeType":"145","messageId":"146","endLine":208,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":211,"column":5,"nodeType":"145","messageId":"146","endLine":211,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":216,"column":29,"nodeType":"152","messageId":"153","endLine":216,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":221,"column":9,"nodeType":"145","messageId":"146","endLine":221,"endColumn":20},{"ruleId":"154","severity":1,"message":"163","line":242,"column":6,"nodeType":"156","endLine":242,"endColumn":16,"suggestions":"164"},{"ruleId":"143","severity":1,"message":"144","line":243,"column":3,"nodeType":"145","messageId":"146","endLine":243,"endColumn":14},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"143","severity":1,"message":"144","line":37,"column":5,"nodeType":"145","messageId":"146","endLine":37,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":58,"column":11,"nodeType":"149","messageId":"146","endLine":58,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":60,"column":11,"nodeType":"145","messageId":"146","endLine":60,"endColumn":22},{"ruleId":"154","severity":1,"message":"155","line":106,"column":6,"nodeType":"156","endLine":106,"endColumn":8,"suggestions":"173"},{"ruleId":"143","severity":1,"message":"144","line":153,"column":17,"nodeType":"145","messageId":"146","endLine":153,"endColumn":28},{"ruleId":"143","severity":1,"message":"144","line":51,"column":9,"nodeType":"145","messageId":"146","endLine":51,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":74,"column":11,"nodeType":"149","messageId":"146","endLine":74,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":76,"column":11,"nodeType":"145","messageId":"146","endLine":76,"endColumn":22},{"ruleId":"154","severity":1,"message":"174","line":115,"column":3,"nodeType":"175","endLine":115,"endColumn":12,"suggestions":"176"},{"ruleId":"143","severity":1,"message":"144","line":168,"column":13,"nodeType":"145","messageId":"146","endLine":168,"endColumn":24},{"ruleId":"147","severity":1,"message":"148","line":62,"column":7,"nodeType":"149","messageId":"146","endLine":62,"endColumn":42},{"ruleId":"147","severity":1,"message":"148","line":143,"column":11,"nodeType":"149","messageId":"146","endLine":143,"endColumn":64},{"ruleId":"154","severity":1,"message":"177","line":23,"column":6,"nodeType":"156","endLine":23,"endColumn":8,"suggestions":"178"},{"ruleId":"143","severity":1,"message":"144","line":93,"column":9,"nodeType":"145","messageId":"146","endLine":93,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":129,"column":9,"nodeType":"145","messageId":"146","endLine":129,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":148,"column":9,"nodeType":"145","messageId":"146","endLine":148,"endColumn":20},{"ruleId":"154","severity":1,"message":"179","line":38,"column":6,"nodeType":"156","endLine":38,"endColumn":8,"suggestions":"180"},{"ruleId":"143","severity":1,"message":"144","line":78,"column":11,"nodeType":"145","messageId":"146","endLine":78,"endColumn":22},{"ruleId":"143","severity":1,"message":"144","line":29,"column":5,"nodeType":"145","messageId":"146","endLine":29,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":33,"column":5,"nodeType":"145","messageId":"146","endLine":33,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":44,"column":7,"nodeType":"145","messageId":"146","endLine":44,"endColumn":18},{"ruleId":"150","severity":1,"message":"151","line":46,"column":15,"nodeType":"152","messageId":"153","endLine":46,"endColumn":24},{"ruleId":"143","severity":1,"message":"144","line":47,"column":11,"nodeType":"145","messageId":"146","endLine":47,"endColumn":22},{"ruleId":"150","severity":1,"message":"151","line":49,"column":16,"nodeType":"152","messageId":"153","endLine":49,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":50,"column":11,"nodeType":"145","messageId":"146","endLine":50,"endColumn":22},{"ruleId":"150","severity":1,"message":"151","line":52,"column":30,"nodeType":"152","messageId":"153","endLine":52,"endColumn":39},{"ruleId":"143","severity":1,"message":"144","line":53,"column":9,"nodeType":"145","messageId":"146","endLine":53,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":56,"column":31,"nodeType":"152","messageId":"153","endLine":56,"endColumn":40},"no-console","Unexpected console statement.","MemberExpression","unexpected","no-alert","Unexpected alert.","CallExpression","func-names","Unexpected unnamed function.","FunctionExpression","unnamed","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDateType'. Either include it or remove the dependency array.","ArrayExpression",["181"],"Unexpected unnamed async function.","React Hook useEffect has missing dependencies: 'getRooms' and 'mapingFunc'. Either include them or remove the dependency array.",["182"],"React Hook useEffect has a missing dependency: 'mapingFunc'. Either include it or remove the dependency array.",["183"],"React Hook useEffect has missing dependencies: 'mapingFunc', 'targetChat', and 'targetList'. Either include them or remove the dependency array.",["184"],"lines-around-directive",["185"],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["186"],"React Hook useEffect contains a call to 'setToday'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [getDateType] as a second argument to the useEffect Hook.","Identifier",["187"],"React Hook useEffect has a missing dependency: 'observer'. Either include it or remove the dependency array.",["188"],"React Hook useEffect has a missing dependency: 'firstOptionFunc'. Either include it or remove the dependency array.",["189"],{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"padding-line-between-statements",{"desc":"190","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [getDateType]",{"range":"205","text":"206"},"Update the dependencies array to be: [getRooms, mapingFunc]",{"range":"207","text":"208"},"Update the dependencies array to be: [mapingFunc, roomState]",{"range":"209","text":"210"},"Update the dependencies array to be: [mapingFunc, targetChat, targetId, targetList]",{"range":"211","text":"212"},{"range":"213","text":"206"},"Add dependencies array: [getDateType]",{"range":"214","text":"215"},"Update the dependencies array to be: [observer]",{"range":"216","text":"217"},"Update the dependencies array to be: [firstOptionFunc]",{"range":"218","text":"219"},[8280,8282],"[getDateType]",[5248,5250],"[getRooms, mapingFunc]",[5585,5596],"[mapingFunc, roomState]",[6688,6698],"[mapingFunc, targetChat, targetId, targetList]",[2755,2757],[3003,3003],", [getDateType]",[707,709],"[observer]",[960,962],"[firstOptionFunc]"]