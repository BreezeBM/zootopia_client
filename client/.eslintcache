[{"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/ImageSlide/ImageSlide.jsx":"1","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/EachSlide/EachSlide.jsx":"2","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/index.js":"3","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/LandingPage/LandingPage.jsx":"4","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/MainPage/MainPage.jsx":"5","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/Chatpage/ChatPage.jsx":"6","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/MypageModal/MypageModal.jsx":"7","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Posts/Posts.jsx":"8","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostModal/PostModal.jsx":"9","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/ChatUser/ChatUser.jsx":"10","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/MyChat/MyChat.jsx":"11","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Modal/Modal.jsx":"12","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/DeleteModal/DeleteModal.jsx":"13","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/CropModal/CropModal.jsx":"14","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/useIntersectionObserver/useIntersectionObserver.jsx":"15","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comment/Comment.jsx":"16","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SimpleModal/SimpleModal.jsx":"17","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComment/SubComment.jsx":"18","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Nav/Nav.jsx":"19","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/App.jsx":"20","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostCropModal/PostCropModal.jsx":"21","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostNewFormModal/PostNewFormModal.jsx":"22","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Post/Post.jsx":"23","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comments/Comments.jsx":"24","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComments/SubComments.jsx":"25","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostDeleteModal/PostDeleteModal.jsx":"26","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/fakeData.js":"27"},{"size":2178,"mtime":1607078376154,"results":"28","hashOfConfig":"29"},{"size":330,"mtime":1607072594693,"results":"30","hashOfConfig":"31"},{"size":309,"mtime":1606809858434,"results":"32","hashOfConfig":"31"},{"size":1905,"mtime":1607055288946,"results":"33","hashOfConfig":"29"},{"size":4352,"mtime":1607396496901,"results":"34","hashOfConfig":"29"},{"size":3969,"mtime":1607044022768,"results":"35","hashOfConfig":"31"},{"size":8107,"mtime":1607233289081,"results":"36","hashOfConfig":"31"},{"size":1594,"mtime":1607351168066,"results":"37","hashOfConfig":"29"},{"size":7778,"mtime":1607352136370,"results":"38","hashOfConfig":"29"},{"size":1304,"mtime":1607064649687,"results":"39","hashOfConfig":"31"},{"size":349,"mtime":1607044022765,"results":"40","hashOfConfig":"31"},{"size":573,"mtime":1606817202927,"results":"41","hashOfConfig":"29"},{"size":2288,"mtime":1606876971766,"results":"42","hashOfConfig":"29"},{"size":4266,"mtime":1606893058021,"results":"43","hashOfConfig":"29"},{"size":503,"mtime":1606996654303,"results":"44","hashOfConfig":"29"},{"size":3235,"mtime":1607310776126,"results":"45","hashOfConfig":"29"},{"size":553,"mtime":1606809858418,"results":"46","hashOfConfig":"31"},{"size":2778,"mtime":1607311220613,"results":"47","hashOfConfig":"29"},{"size":1149,"mtime":1606960982085,"results":"48","hashOfConfig":"29"},{"size":3371,"mtime":1607396643376,"results":"49","hashOfConfig":"29"},{"size":3570,"mtime":1606905749699,"results":"50","hashOfConfig":"29"},{"size":8213,"mtime":1607396595435,"results":"51","hashOfConfig":"29"},{"size":413,"mtime":1607350751434,"results":"52","hashOfConfig":"29"},{"size":361,"mtime":1607225822607,"results":"53","hashOfConfig":"29"},{"size":445,"mtime":1607259510840,"results":"54","hashOfConfig":"29"},{"size":2039,"mtime":1607344808116,"results":"55","hashOfConfig":"29"},{"size":2448,"mtime":1607392666669,"results":"56","hashOfConfig":"29"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"cnzfbj",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1n26zk8",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"65"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"59"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/ImageSlide/ImageSlide.jsx",[],["122","123","124","125"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/EachSlide/EachSlide.jsx",[],["126","127","128","129"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/index.js",[],["130","131","132","133"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/LandingPage/LandingPage.jsx",["134","135"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/MainPage/MainPage.jsx",["136"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/pages/Chatpage/ChatPage.jsx",["137","138","139","140"],"import React, { createRef, useEffect, useState } from 'react';\nimport styles from './ChatPage.module.css';\nimport iguanaImg from '../../images/iguana.jpeg';\nimport ChatUser from '../../components/ChatUser/ChatUser';\nimport MyChat from '../../components/MyChat/MyChat';\n\nconst username = '닉네임은팔글자요';\nconst breedname = '글자수는열다섯으로기준을잡겠다';\nconst messageContent =\n  '본사는 소규모창업아이템으로 성공한 사례와 실패 사례에관한 경험을 바탕으로 외식업 창업 성공에 관한 전문지식을 갖춘 창업 전문가들이 상권분석, 매장계약, 오픈 전까지의 모든 과정을 컨설팅하여 진행 중”이라며 “한식도시락배달 창업 또는 샵인샵배달창업을 고려하고 있는 예비 가맹점주들은 전문 상담을 통해 문의 해보길 바란다”고 전했다.';\n\nconst ChatPage = () => {\n  const test = createRef();\n  const test2 = createRef();\n\n  const myFunction = function (e) {\n    if (e.keyCode === 13) {\n      console.log(isOn);\n      alert('엔터치셨네요. 채팅치는 기능은 곧 나옵니다!');\n    }\n  };\n  const [isOn, isOntoggle] = useState(1);\n\n  useEffect(() => {\n    const arr = ['Win16', 'Win32', 'Win64', 'Mac', 'MacIntel'];\n    if (arr.includes(navigator.platform)) {\n      console.log(test.current.style);\n      if (isOn > 2) {\n        test.current.style.display = 'none';\n      }\n    }\n  });\n\n  return (\n    <div className={styles.main}>\n      <div className={styles.main}> </div>\n      <div className={styles.flexBox}>\n        <div className={styles.listBox} ref={test}>\n          <div className={styles.profile}>\n            <img className={styles.image} src={iguanaImg} alt=\"profile\" />\n            <div className={styles.name}>{username}</div>\n            <div className={styles.breed}>{breedname}</div>\n          </div>\n          <div className={styles.userlist}>\n            <div className={styles.profileBlock}>모바일 버전용</div>\n            <ChatUser\n              idValue={3}\n              state={isOn}\n              stateFunc={isOntoggle}\n              ref={test}\n            />\n            <ChatUser\n              idValue={5}\n              state={isOn}\n              stateFunc={isOntoggle}\n              ref={test}\n            />\n            <ChatUser\n              idValue={20}\n              state={isOn}\n              stateFunc={isOntoggle}\n              ref={test}\n            />\n          </div>\n        </div>\n        <div className={styles.chatBox}>\n          <div className={styles.chatonBoard}>\n            <div className={styles.block}> </div>\n            <div className={styles.talkBox}>\n              <img\n                className={styles.chatProfile}\n                src={iguanaImg}\n                alt=\"chatprofile_img\"\n              />\n              <div className={styles.message}>{messageContent}</div>\n              <div className={styles.dates}>2020-11-30-MON</div>\n            </div>\n            <div className={styles.talkBox} ref={test2}>\n              <img\n                className={styles.chatProfile}\n                src={iguanaImg}\n                alt=\"chatprofile_img\"\n              />\n              <div className={styles.message}>{messageContent}</div>\n              <div className={styles.dates}>2020-11-30-MON</div>\n            </div>\n\n            <div className={styles.talkBox}>\n              <img\n                className={styles.chatProfile}\n                src={iguanaImg}\n                alt=\"chatprofile_img\"\n              />\n              <div className={styles.message}>{messageContent}</div>\n              <div className={styles.dates}>2020-11-30-MON</div>\n            </div>\n            <MyChat />\n          </div>\n          <input\n            className={styles.chatPost}\n            type=\"text\"\n            placeholder=\"메시지 입력..\"\n            onKeyDown={myFunction}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/MypageModal/MypageModal.jsx",["141","142","143"],"import { createRef, React, useState } from 'react';\nimport axios from 'axios';\n\nimport styles from './MypageModal.module.css';\nimport Modal from '../Modal/Modal';\nimport defaultProfile from '../../images/defaultProfile.png';\nimport logoImg from '../../images/logo.png';\nimport DeleteModal from '../DeleteModal/DeleteModal';\nimport CropModal from '../CropModal/CropModal';\n\nconst MypageModal = ({ isModalOn, handleClose }) => {\n  // img 변경관련 로직\n  const [cropModalOn, setCropModalOn] = useState(false);\n  const handleCropModalOn = () => {\n    setCropModalOn(!cropModalOn);\n  };\n  const [imgSrc, setImgSrc] = useState(null);\n  const [nowImg, setNowImg] = useState(defaultProfile);\n  // const handleNowImg = (newImg) => {\n  //   setNowImg(newImg);\n  // };\n\n  const changeProfile = (e) => {\n    if (e.target.files && e.target.files.length > 0) {\n      // html5의 fileAPI\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.addEventListener('load', () => {\n        setImgSrc(reader.result);\n      });\n      handleCropModalOn();\n    }\n  };\n\n  // 서버에서 보내준 정보를 렌더링(초기)할 때 useState 디폴트 값으로 받기\n  // + 유효성 검사 로직\n  const [nowPetName, setNowPetName] = useState('스눕독');\n  const [nowBreed, setNowBreed] = useState('시바견');\n  const petnameRef = createRef();\n  const breedRef = createRef();\n\n  const [petName, setPetname] = useState(nowPetName);\n  const [breed, setBreed] = useState(nowBreed);\n  const [checked, setChecked] = useState({ petname: true, breed: true });\n\n  // 유효성 검사 로직\n  const checkInform = (e) => {\n    if (e.target.name === 'petname') {\n      setChecked({ ...checked, petname: true });\n      if (e.target.value.length > 18 || e.target.value.length === 0) {\n        setChecked({ ...checked, petname: false });\n      }\n      setPetname(e.target.value);\n    } else if (e.target.name === 'breed') {\n      setChecked({ ...checked, breed: true });\n      if (e.target.value.length > 18 || e.target.value.length === 0) {\n        setChecked({ ...checked, breed: false });\n      }\n      setBreed(e.target.value);\n    }\n  };\n\n  // 실제 펫네임을 변경하기 위해 서버에 PATCH 요청을 보내는 로직\n  const changePetname = async () => {\n    if (checked.petname) {\n      try {\n        const response = await axios.patch(\n          'https://server.codestates-project.tk/user/petname',\n          {\n            petName,\n          },\n          { withCredentials: true },\n        );\n        if (response.status === 201) {\n          setNowPetName(petName);\n          setPetname(petName);\n          petnameRef.current.blur(); // 해결하기\n        }\n      } catch (err) {\n        // 중복 펫네임 409\n        if (err.response.status === 501) {\n          alert('some errors occur at server, please try again');\n        } else if (err.response.status === 404) {\n          setChecked({ ...checked, petname: false });\n        } else {\n          console.log(err);\n        }\n      }\n    }\n  };\n\n  // 실제 품종을 변경하기 위해 서버에 PATCH 요청을 보내는 로직\n  const changeBreed = async () => {\n    if (checked.breed) {\n      try {\n        const response = await axios.patch(\n          'https://server.codestates-project.tk/user/breed',\n          {\n            breed,\n          },\n          { withCredentials: true },\n        );\n        if (response.status === 201) {\n          setNowBreed(breed);\n          setBreed(breed);\n          breedRef.current.blur();\n        }\n      } catch (err) {\n        if (err.response.status === 501) {\n          alert('some errors occur at server, please try again');\n        } else if (err.response.status === 404) {\n          setChecked({ ...checked, breed: false });\n        }\n      }\n    }\n  };\n\n  const resetAndTurnOffTheModal = () => {\n    setPetname(nowPetName);\n    setBreed(nowBreed);\n    setChecked({ petname: true, breed: true });\n    handleClose();\n  };\n\n  // 회원 탈퇴 모달은 디폴트 모달을 재활용하지 않는 것이기에 따로 state로 관리\n  const [deleteModalOn, setDeleteModalOn] = useState(false);\n  const viewDeleteModal = () => {\n    setDeleteModalOn(!deleteModalOn);\n  };\n\n  return (\n    <>\n      <DeleteModal isModalOn={deleteModalOn} handleClose={viewDeleteModal} />\n      <Modal isModalOn={isModalOn} handleClose={resetAndTurnOffTheModal}>\n        <div className={styles.MypageModal}>\n          <div className={styles.profile}>\n            <div className={styles.imgPart}>\n              <img src={nowImg} className={styles.profileImg} alt=\"profile\" />\n            </div>\n            <div className={styles.informPart}>\n              <div className={styles.title}>프로필 사진</div>\n              <input\n                id=\"profileImgInput\"\n                type=\"file\"\n                className={styles.profileImgInput}\n                onChange={changeProfile}\n              />\n              <label htmlFor=\"profileImgInput\">\n                <div className={styles.editButton}>Edit Picture</div>\n              </label>\n            </div>\n          </div>\n          <div className={styles.editPart}>\n            <div className={styles.petnameEdit}>\n              <div className={styles.petnameTitle}>\n                <img className={styles.logoImg} src={logoImg} alt=\"logo\" />\n                Pet Name\n              </div>\n              <div className={styles.petnameEditPart}>\n                <input\n                  ref={petnameRef}\n                  className={styles.myPageInput}\n                  spellCheck={false}\n                  onChange={checkInform}\n                  value={petName}\n                  name=\"petname\"\n                />\n                <button\n                  className={`${styles.informEditButton} ${\n                    checked.petname && styles.isOn\n                  }`}\n                  type=\"button\"\n                  onClick={changePetname}\n                >\n                  Edit\n                </button>\n              </div>\n              {checked.petname ? null : (\n                <div className={styles.caution}>\n                  펫네임은 최소 1글자 이상 18글자 이하로 작성해주세요\n                </div>\n              )}\n            </div>\n            <div className={styles.breedEdit}>\n              <div className={styles.breedTitle}>\n                <img className={styles.logoImg} src={logoImg} alt=\"logo\" />\n                Breed\n              </div>\n              <div className={styles.breedEditPart}>\n                <input\n                  ref={breedRef}\n                  className={styles.myPageInput}\n                  spellCheck={false}\n                  name=\"breed\"\n                  value={breed}\n                  onChange={checkInform}\n                />\n                <button\n                  className={`${styles.informEditButton} ${\n                    checked.breed && styles.isOn\n                  }`}\n                  type=\"button\"\n                  onClick={changeBreed}\n                >\n                  Edit\n                </button>\n              </div>\n              {checked.breed ? null : (\n                <div className={styles.caution}>\n                  품종은 최소 1글자 이상 18글자 이하로 작성해주세요\n                </div>\n              )}\n            </div>\n            <div className={styles.deleteEdit}>\n              <div className={styles.deleteTitle}>\n                <img className={styles.logoImg} src={logoImg} alt=\"logo\" />\n                Delete Account\n              </div>\n              <button\n                id={styles.deleteButton}\n                className={styles.deleteEditButton}\n                type=\"button\"\n                onClick={viewDeleteModal}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n      <CropModal\n        setNowImg={setNowImg}\n        imgSrc={imgSrc}\n        setImgSrc={setImgSrc}\n        isModalOn={cropModalOn}\n        handleClose={handleCropModalOn}\n      />\n    </>\n  );\n};\n\nexport default MypageModal;\n","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Posts/Posts.jsx",["144","145"],"import { React, useRef, useState } from 'react';\nimport styles from './Posts.module.css';\nimport Post from '../Post/Post';\nimport useIntersectionObserver from '../useIntersectionObserver/useIntersectionObserver';\n\nconst Posts = ({\n  // userId\n  postsCount,\n  isLoading,\n  posts,\n  // addPosts,\n  viewPost,\n}) => {\n  //   infinite scroll logic with IntersectionObserver API\n  const rootRef = useRef(null);\n  const targetRef = useRef(null);\n  console.log(posts);\n  const [renderCount, setRenderCount] = useState(0);\n  useIntersectionObserver({\n    root: rootRef.current,\n    target: targetRef.current,\n    onIntersect: ([{ isIntersecting }]) => {\n      if (isIntersecting && !isLoading && postsCount >= 13) {\n        if (renderCount === 0) {\n          setRenderCount(renderCount + 1);\n          return;\n        }\n        console.log('hello');\n        // addPosts(userId, posts[0].postId, postsCount, 15);\n      }\n    },\n  });\n\n  return (\n    <div ref={rootRef} className={styles.grid_border}>\n      <div className={styles.grid_container}>\n        {posts.map((post) => {\n          return (\n            <Post\n              thumbnail={post.thumbnail}\n              key={post.postId}\n              postId={post.postId}\n              viewPost={viewPost}\n            />\n          );\n        })}\n      </div>\n      <div\n        ref={targetRef}\n        className={`${styles.target} ${postsCount >= 13 && styles.isOn}`}\n      >\n        Loading..\n        {/* <div className={styles.spinner}>\n          <i className=\"fas fa-sync\" />\n        </div> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Posts;\n","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostModal/PostModal.jsx",["146"],"import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport styles from './PostModal.module.css';\nimport ImageSlide from '../ImageSlide/ImageSlide';\nimport close from '../../images/close.png';\nimport Comments from '../Comments/Comments';\nimport likeImg from '../../images/fulfilledHeart.png';\nimport unLikeImg from '../../images/unfulfilledHeart.png';\nimport updateBtn from '../../images/updateBtn.png';\nimport PostDeleteModal from '../PostDeleteModal/PostDeleteModal';\n\nconst PostModal = ({\n  getPosts,\n  getUserData,\n  postData,\n  isModalOn,\n  handleClose,\n  deletePost,\n}) => {\n  const [userInform, setUserInform] = useState(postData.user);\n  const [postInform, setPostInform] = useState(postData.post);\n  const [commentsInform, setCommentsInform] = useState(postData.comments);\n  const commentInputRef = useRef(null);\n  const [like, setLike] = useState(postInform.likeChecked);\n  const [commentToggle, setCommentToggle] = useState(false);\n  const [updateBtnToggle, setUpdateBtnToggle] = useState(false);\n  const [textUpdateToggled, setTextUpdateToggled] = useState(false);\n  const [isDeleteOn, setIsDeleteOn] = useState(false);\n  const [textVal, setTextVal] = useState();\n  const textRef = useRef(postInform.text);\n\n  const handleLike = () => {\n    setLike(!like);\n  };\n\n  // const writeComment = () => {\n  //   console.log('댓글쓰기');\n  // };\n\n  const handleCommentBtn = () => {\n    commentInputRef.current.focus();\n  };\n\n  const closeDeleteModal = (deleted) => {\n    if (deleted) {\n      setIsDeleteOn(false);\n      handleClose();\n    } else {\n      setIsDeleteOn(true);\n    }\n  };\n\n  // 특정 유저 프로필 + 그에 따른 grid 데이터 불러오기\n  const getSpecificUser = () => {\n    const id = userInform.userId;\n    getPosts(id, 0, 0, 15);\n    getUserData(id);\n    handleClose();\n  };\n\n  // 포스트 수정\n  const updatePost = async () => {\n    if (textUpdateToggled === true) {\n      // try {\n      //   await axios.patch(\n      //     `https://server.codestates-project.tk/post`,\n      //     {\n      //       postId: postInform.postId,\n      //       text: textVal,\n      //     },\n      //     { withCredentials: true },\n      //   );\n      //   setPostInform({ ...postInform, text: textVal });\n      //   await setTextUpdateToggled(false);\n      //   setUpdateBtnToggle(false);\n      // } catch (err) {\n      //   console.log(err);\n      // }\n\n      // test 용도\n      setPostInform({ ...postInform, text: textVal });\n      await setTextUpdateToggled(false);\n      setUpdateBtnToggle(false);\n    } else {\n      await setTextUpdateToggled(true);\n      textRef.current.focus();\n    }\n  };\n\n  // 포스트 삭제\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(max-width: 65rem)');\n    if (mediaQuery.matches) {\n      setCommentToggle(false);\n    } else {\n      setCommentToggle(true);\n    }\n  }, []);\n\n  return (\n    <>\n      <PostDeleteModal\n        postId={postInform.postId}\n        deletePost={deletePost}\n        isModalOn={isDeleteOn}\n        handleClose={closeDeleteModal}\n      />\n      <div className={`${styles.modal} ${isModalOn && styles.isOn}`}>\n        <div className={styles.box}>\n          <img\n            className={styles.close}\n            src={close}\n            alt=\"close\"\n            onClick={handleClose}\n          />\n          <div className={styles.postModal}>\n            <ImageSlide\n              imageUrls={[\n                postInform.picture_1,\n                postInform.picture_2,\n                postInform.picture_3,\n              ]}\n            />\n            <div className={styles.contents}>\n              <div className={styles.userArea}>\n                <div\n                  className={styles.profile_imgage}\n                  onClick={getSpecificUser}\n                >\n                  <img\n                    className={styles.profile_image_img}\n                    src={userInform.thumbnail}\n                    alt=\"profile\"\n                  />\n                </div>\n                <div className={styles.profile_inform}>\n                  <div className={styles.nickname}>{userInform.petName}</div>\n                  <div className={styles.breed}>{userInform.breed}</div>\n                </div>\n                {updateBtnToggle ? (\n                  <div className={styles.updateBtns}>\n                    <img\n                      className={styles.closeUpdateBtn}\n                      src={updateBtn}\n                      alt=\"updateBtn\"\n                      onClick={() => {\n                        setUpdateBtnToggle(false);\n                      }}\n                    />\n                    <i className=\"far fa-edit\" onClick={updatePost} />\n                    <i\n                      className=\"fas fa-trash-alt\"\n                      id={styles.deleteBtn}\n                      onClick={closeDeleteModal}\n                    />\n                  </div>\n                ) : (\n                  <img\n                    className={styles.updateBtn}\n                    src={updateBtn}\n                    alt=\"updateBtn\"\n                    onClick={() => {\n                      setUpdateBtnToggle(true);\n                    }}\n                  />\n                )}\n              </div>\n              {textUpdateToggled ? (\n                <textarea\n                  ref={textRef}\n                  spellCheck={false}\n                  className={styles.updateText}\n                  value={textVal}\n                  onChange={(e) => {\n                    setTextVal(e.target.value);\n                  }}\n                />\n              ) : (\n                <div className={styles.textArea}>{postInform.text}</div>\n              )}\n\n              <div className={styles.date}>{postInform.time}</div>\n              <div className={styles.buttonArea}>\n                {like ? (\n                  <img\n                    className={styles.like}\n                    src={likeImg}\n                    alt=\"like\"\n                    onClick={handleLike}\n                  />\n                ) : (\n                  <img\n                    className={styles.unLike}\n                    src={unLikeImg}\n                    alt=\"unlike\"\n                    onClick={handleLike}\n                  />\n                )}\n                <div className={styles.likeCount}>\n                  {`좋아요 ${postInform.likeCount}개`}\n                </div>\n              </div>\n              {commentToggle ? (\n                <>\n                  <div\n                    className={styles.commentFolder}\n                    onClick={() => {\n                      setCommentToggle(false);\n                    }}\n                  >\n                    댓글 접기\n                  </div>\n                  <Comments handleCommentBtn={handleCommentBtn} />\n                </>\n              ) : (\n                <div\n                  onClick={() => {\n                    setCommentToggle(true);\n                  }}\n                  className={styles.commentFolder}\n                >\n                  댓글 펼치기...\n                </div>\n              )}\n              <div className={styles.inputPart}>\n                <input\n                  ref={commentInputRef}\n                  className={styles.commentInput}\n                  spellCheck=\"false\"\n                  type=\"text\"\n                  placeholder=\"댓글 달기..\u001c\"\n                />\n                <span\n                  onClick={() => {\n                    console.log('댓글 남기기');\n                  }}\n                  className={styles.commentBtn}\n                >\n                  게시\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PostModal;\n","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/ChatUser/ChatUser.jsx",["147","148","149","150","151","152"],"import React, { createRef, useEffect, useState } from 'react';\nimport styles from './ChatUser.module.css';\nimport iguanaImg from '../../images/iguana.jpeg';\n\nconst ChatUser = ({ idValue, state, stateFunc }) => {\n  const Card = createRef();\n  console.log(idValue);\n\n  const [changes, changeToggle] = useState(state);\n\n  useEffect(() => {\n    if (state !== idValue) {\n      Card.current.style.backgroundColor = 'white';\n      console.log(changes);\n      console.log(changeToggle);\n    }\n  });\n\n  const handleCard = function () {\n    const arr = ['Win16', 'Win32', 'Win64', 'Mac', 'MacIntel'];\n    stateFunc(idValue);\n    Card.current.style.backgroundColor = 'rgba(255,198,0)';\n    if (arr.includes(navigator.platform)) {\n      if (state === 1) {\n        stateFunc(2);\n      } else {\n        stateFunc(idValue);\n        console.log(state);\n      }\n    }\n  };\n\n  return (\n    <div className={styles.usercard} ref={Card} onClick={handleCard}>\n      <img className={styles.userProfile} src={iguanaImg} alt=\"userprofile\" />\n      <div className={styles.username}>닉네임은팔글자요</div>\n      <div className={styles.userbreed}>글자수는열다섯으로기준을잡겠다</div>\n      <div className={styles.status}>안 읽은 메시지가 있습니다.</div>\n    </div>\n  );\n};\nexport default ChatUser;\n","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/MyChat/MyChat.jsx",[],["153","154","155","156"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Modal/Modal.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/DeleteModal/DeleteModal.jsx",["157","158"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/CropModal/CropModal.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/useIntersectionObserver/useIntersectionObserver.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comment/Comment.jsx",["159"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SimpleModal/SimpleModal.jsx",[],["160","161","162","163"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComment/SubComment.jsx",["164"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Nav/Nav.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/App.jsx",["165"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostCropModal/PostCropModal.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostNewFormModal/PostNewFormModal.jsx",["166"],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Post/Post.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/Comments/Comments.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/SubComments/SubComments.jsx",[],"/Users/hong-yong-gi/Desktop/zootopia_client/client/src/components/PostDeleteModal/PostDeleteModal.jsx",["167","168"],"import { React, useState } from 'react';\n// import { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './PostDeleteModal.module.css';\nimport deleteMotionImg from '../../images/trashcan.png';\nimport SimpleModal from '../SimpleModal/SimpleModal';\n\nconst PostDeleteModal = ({ postId, deletePost, isModalOn, handleClose }) => {\n  const [deleted, setDeleted] = useState(false);\n  const deletePostFunc = async () => {\n    try {\n      // await axios.delete(`https://server.codestates-project.tk/post`, {\n      //   withCredentials: true,\n      // });\n      console.log('fff');\n      deletePost(postId);\n      setDeleted(true);\n      handleClose();\n    } catch (err) {\n      if (err.response.status === 401) {\n        // history.push('/');\n      } else {\n        console.log(err);\n      }\n    }\n  };\n\n  return (\n    <SimpleModal isModalOn={isModalOn} handleClose={handleClose}>\n      <img\n        className={styles.deleteMotion}\n        src={deleteMotionImg}\n        alt=\"trash can\"\n      />\n      {deleted ? (\n        <>\n          <div className={styles.completedMessage}>\n            정상적으로 처리되었습니다\n          </div>\n        </>\n      ) : (\n        <>\n          <div id={styles.firstMessage} className={styles.message}>\n            정말로 삭제를 원하시나요?\n          </div>\n          <div id={styles.deleteMessage} className={styles.message}>\n            삭제 요청은 되돌릴 수 없습니다\n          </div>\n          <div className={styles.yesOrNoButton}>\n            <button\n              className={styles.yesButton}\n              type=\"button\"\n              onClick={deletePostFunc}\n            >\n              Yes\n            </button>\n            <button\n              className={styles.noButton}\n              type=\"button\"\n              onClick={() => {\n                handleClose(deleted);\n              }}\n            >\n              No\n            </button>\n          </div>\n        </>\n      )}\n    </SimpleModal>\n  );\n};\n\nexport default PostDeleteModal;\n","/Users/hong-yong-gi/Desktop/zootopia_client/client/src/fakeData.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"169","replacedBy":"177"},{"ruleId":"171","replacedBy":"178"},{"ruleId":"173","replacedBy":"179"},{"ruleId":"175","replacedBy":"180"},{"ruleId":"169","replacedBy":"181"},{"ruleId":"171","replacedBy":"182"},{"ruleId":"173","replacedBy":"183"},{"ruleId":"175","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":13,"column":7,"nodeType":"187","messageId":"188","endLine":13,"endColumn":29},{"ruleId":"185","severity":1,"message":"186","line":18,"column":7,"nodeType":"187","messageId":"188","endLine":18,"endColumn":29},{"ruleId":"189","severity":1,"message":"190","line":86,"column":6,"nodeType":"191","endLine":86,"endColumn":8,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":16,"column":22,"nodeType":"195","messageId":"196","endLine":16,"endColumn":31},{"ruleId":"197","severity":1,"message":"198","line":18,"column":7,"nodeType":"199","messageId":"188","endLine":18,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":19,"column":7,"nodeType":"187","messageId":"188","endLine":19,"endColumn":40},{"ruleId":"197","severity":1,"message":"198","line":27,"column":7,"nodeType":"199","messageId":"188","endLine":27,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":82,"column":11,"nodeType":"187","messageId":"188","endLine":82,"endColumn":65},{"ruleId":"197","severity":1,"message":"198","line":86,"column":11,"nodeType":"199","messageId":"188","endLine":86,"endColumn":22},{"ruleId":"185","severity":1,"message":"186","line":110,"column":11,"nodeType":"187","messageId":"188","endLine":110,"endColumn":65},{"ruleId":"197","severity":1,"message":"198","line":17,"column":3,"nodeType":"199","messageId":"188","endLine":17,"endColumn":14},{"ruleId":"197","severity":1,"message":"198","line":28,"column":9,"nodeType":"199","messageId":"188","endLine":28,"endColumn":20},{"ruleId":"197","severity":1,"message":"198","line":236,"column":21,"nodeType":"199","messageId":"188","endLine":236,"endColumn":32},{"ruleId":"197","severity":1,"message":"198","line":7,"column":3,"nodeType":"199","messageId":"188","endLine":7,"endColumn":14},{"ruleId":"189","severity":1,"message":"200","line":11,"column":3,"nodeType":"201","endLine":11,"endColumn":12,"suggestions":"202"},{"ruleId":"197","severity":1,"message":"198","line":14,"column":7,"nodeType":"199","messageId":"188","endLine":14,"endColumn":18},{"ruleId":"197","severity":1,"message":"198","line":15,"column":7,"nodeType":"199","messageId":"188","endLine":15,"endColumn":18},{"ruleId":"193","severity":1,"message":"194","line":19,"column":22,"nodeType":"195","messageId":"196","endLine":19,"endColumn":31},{"ruleId":"197","severity":1,"message":"198","line":28,"column":9,"nodeType":"199","messageId":"188","endLine":28,"endColumn":20},{"ruleId":"169","replacedBy":"203"},{"ruleId":"171","replacedBy":"204"},{"ruleId":"173","replacedBy":"205"},{"ruleId":"175","replacedBy":"206"},{"ruleId":"185","severity":1,"message":"186","line":26,"column":9,"nodeType":"187","messageId":"188","endLine":26,"endColumn":63},{"ruleId":"197","severity":1,"message":"198","line":28,"column":9,"nodeType":"199","messageId":"188","endLine":28,"endColumn":20},{"ruleId":"197","severity":1,"message":"198","line":70,"column":21,"nodeType":"199","messageId":"188","endLine":70,"endColumn":32},{"ruleId":"169","replacedBy":"207"},{"ruleId":"171","replacedBy":"208"},{"ruleId":"173","replacedBy":"209"},{"ruleId":"175","replacedBy":"210"},{"ruleId":"197","severity":1,"message":"198","line":67,"column":17,"nodeType":"199","messageId":"188","endLine":67,"endColumn":28},{"ruleId":"197","severity":1,"message":"198","line":94,"column":5,"nodeType":"199","messageId":"188","endLine":94,"endColumn":16},{"ruleId":"185","severity":1,"message":"186","line":55,"column":7,"nodeType":"187","messageId":"188","endLine":55,"endColumn":42},{"ruleId":"197","severity":1,"message":"198","line":15,"column":7,"nodeType":"199","messageId":"188","endLine":15,"endColumn":18},{"ruleId":"197","severity":1,"message":"198","line":23,"column":9,"nodeType":"199","messageId":"188","endLine":23,"endColumn":20},"lines-around-directive",["211"],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["211"],[],[],[],["211"],[],[],[],"no-alert","Unexpected alert.","CallExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'acceptUserData' and 'getPosts'. Either include them or remove the dependency array. If 'getPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["212"],"func-names","Unexpected unnamed function.","FunctionExpression","unnamed","no-console","Unexpected console statement.","MemberExpression","React Hook useEffect contains a call to 'changeToggle'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [state, idValue, Card, changes] as a second argument to the useEffect Hook.","Identifier",["213"],["211"],[],[],[],["211"],[],[],[],"padding-line-between-statements",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [acceptUserData, getPosts]",{"range":"218","text":"219"},"Add dependencies array: [state, idValue, Card, changes]",{"range":"220","text":"221"},[2390,2392],"[acceptUserData, getPosts]",[488,488],", [state, idValue, Card, changes]"]